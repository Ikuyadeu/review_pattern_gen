[
 {
  "sha": "3c126b3d9616bc07b6d976f8aee7ad662bd8013a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-12-14 20:30:59",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "  def test_compilation_bootstrap"
  ],
  "consequent": [
   "  def test_compilation    path = 'assets/stylesheets'    %w(_bootstrap bootstrap/_theme).each do |file|"
  ]
 },
 {
  "sha": "3c126b3d9616bc07b6d976f8aee7ad662bd8013a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-12-14 20:30:59",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "    compile 'bootstrap'    assert true # nothing was raised",
   "  end"
  ],
  "consequent": [
   "      FileUtils.rm_rf('.sass-cache', secure: true)      engine = SassC::Engine.new(File.read(\"#{path}/#{file}.scss\"), syntax: :scss, load_paths: [path])"
  ]
 },
 {
  "sha": "3c126b3d9616bc07b6d976f8aee7ad662bd8013a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-12-14 20:30:59",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "    engine = SassC::Engine.new(      %Q{@import \"#{path}/#{${0:ident}}\"},      syntax: :scss, load_paths: ['.']    )    FileUtils.mkdir_p(\"${1:tstring_content}#{File.dirname(${0:ident})}\")"
  ],
  "consequent": [
   "      FileUtils.mkdir_p(\"${1:tstring_content}#{File.dirname(${0:ident})}\")"
  ]
 },
 {
  "sha": "3c126b3d9616bc07b6d976f8aee7ad662bd8013a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-12-14 20:30:59",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "    File.open(\"${0:tstring_content}#{${1:ident}}${2:tstring_content}\", '${3:tstring_content}') { |${4:ident}|"
  ],
  "consequent": [
   "      File.open(\"${0:tstring_content}#{${1:ident}}${2:tstring_content}\", '${3:tstring_content}') { |${4:ident}|"
  ]
 },
 {
  "sha": "3c126b3d9616bc07b6d976f8aee7ad662bd8013a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-12-14 20:30:59",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "      ${0:ident}.${1:ident} ${2:ident}.render"
  ],
  "consequent": [
   "        ${0:ident}.${1:ident} ${2:ident}.render"
  ]
 },
 {
  "sha": "6634d0a18a14046eb19c7b941be17d7a195604ca",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:49:42",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "        ::Sass::Script::Value::Number.${0:ident} = [${1:int}, ::Sass::Script::Value::Number.${0:ident}].max"
  ],
  "consequent": [
   "        ::Sass::Script::Number.${0:ident} = [${1:int}, ::Sass::Script::Number.${0:ident}].max"
  ]
 },
 {
  "sha": "489b6f2b809ad87c1d77ea6dcca1d7b0d24419bc",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:36:39",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "hanami?"
  ],
  "consequent": [
   "lotus?"
  ]
 },
 {
  "sha": "489b6f2b809ad87c1d77ea6dcca1d7b0d24419bc",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:36:39",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "register_hanami"
  ],
  "consequent": [
   "register_lotus"
  ]
 },
 {
  "sha": "489b6f2b809ad87c1d77ea6dcca1d7b0d24419bc",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:36:39",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "hanami?"
  ],
  "consequent": [
   "lotus?"
  ]
 },
 {
  "sha": "489b6f2b809ad87c1d77ea6dcca1d7b0d24419bc",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:36:39",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "register_hanami"
  ],
  "consequent": [
   "register_lotus"
  ]
 },
 {
  "sha": "489b6f2b809ad87c1d77ea6dcca1d7b0d24419bc",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:36:39",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      Hanami::Assets.${0:ident} << assets_path"
  ],
  "consequent": [
   "      Lotus::Assets.${0:ident} << assets_path"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "exist?"
  ],
  "consequent": [
   "exists?"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "      ${0:ident} = SassC::Engine.new(File.read(\"#{${1:ident}}${2:tstring_content}#{${3:ident}}${4:tstring_content}\"), syntax: :${5:ident}, load_paths: [${1:ident}])"
  ],
  "consequent": [
   "      ${0:ident} = Sass::Engine.for_file(\"#{${1:ident}}${2:tstring_content}#{${3:ident}}${4:tstring_content}\", syntax: :${5:ident}, load_paths: [${1:ident}])"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/dummy_rails/config/boot.rb",
  "condition": [
   "exist?"
  ],
  "consequent": [
   "exists?"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/dummy_sass_only/compile.rb",
  "condition": [
   "load_path = ARGV[0]out_path = ARGV[1]"
  ],
  "consequent": [
   "scss_path = File.expand_path('./import_all.sass', File.dirname(__FILE__))css = Sass.compile File.read(scss_path), syntax: 'sass'"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/dummy_sass_only/compile.rb",
  "condition": [
   "output = SassC::Engine.new(  File.read(File.expand_path('./import_all.scss', __dir__)),  syntax: :scss, load_paths: [load_path]).renderif out_path  FileUtils.mkdir_p(File.dirname(out_path))"
  ],
  "consequent": [
   "if ARGV[0]  FileUtils.mkdir_p File.dirname(ARGV[0])"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/dummy_sass_only/compile.rb",
  "condition": [
   "  File.write(out_path, output)"
  ],
  "consequent": [
   "  File.open(ARGV[0], 'w') { |f| f.write css }"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/dummy_sass_only/compile.rb",
  "condition": [
   "output"
  ],
  "consequent": [
   "css"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/sass_test.rb",
  "condition": [
   "    FileUtils.rm_rf(File.join(DUMMY_PATH, '.sass-cache'), secure: true)"
  ],
  "consequent": [
   "    Dir.chdir DUMMY_PATH do      %x[rm -rf .sass-cache/]      %x[bundle]    end"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/sass_test.rb",
  "condition": [
   "        Bundler.with_original_env do          system('bundle') && system('bundle', 'exec', 'ruby', 'compile.rb',                                     Bootstrap.stylesheets_path, css_path)        end"
  ],
  "consequent": [
   "        system(command)"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "        Bundler.with_original_env do          system({ 'BUNDLE_GEMFILE' => File.join(GEM_PATH, 'Gemfile'),                   'RAILS_ENV' => 'production' },                 'bundle exec rake assets:precompile')        end"
  ],
  "consequent": [
   "        system(command)"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "      File.read(${0:ident})"
  ],
  "consequent": [
   "      File.open(${0:ident}, 'r') do |f|"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "          .scan(/${0:tstring_content}/) do |${1:ident}|"
  ],
  "consequent": [
   "        f.read.scan /${0:tstring_content}/ do |${1:ident}|"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "        assert_match(/${0:tstring_content}/, ${1:ident})"
  ],
  "consequent": [
   "          assert_match /${0:tstring_content}/, ${1:ident}        end"
  ]
 },
 {
  "sha": "a1c5ec516b5352f70ba93b704d36ecd8e284eabd",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-08-22 06:34:39",
  "file_path": "test/test_helper.rb",
  "condition": [
   "GEM_PATH = File.expand_path('${0:tstring_content}', __dir__)"
  ],
  "consequent": [
   "GEM_PATH = File.expand_path('${0:tstring_content}', File.dirname(__FILE__))"
  ]
 },
 {
  "sha": "7319f3b99a82f645204bb4463f2e8902585699c1",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-04-18 08:04:40",
  "file_path": "test/compass_test.rb",
  "condition": [
   "with_original_env"
  ],
  "consequent": [
   "with_clean_env"
  ]
 },
 {
  "sha": "2e15e662c01b5fb53905deb3fc17a4518dac440a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-04-18 08:00:02",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            ${0:ident} = replace_rules(${0:ident}, /${1:tstring_content}/) { |${2:ident}| ${3:ident} ${2:ident}, :${4:ident} }"
  ],
  "consequent": [
   "            ${0:ident} = replace_rules(${0:ident}, /${1:tstring_content}/) { |${2:ident}|              ${2:ident} = replace_all ${2:ident}, /(\\$icon-font(?:-\\w+)+)/, '#{\\1}'              ${3:ident} ${2:ident}, :${4:ident}            }"
  ]
 },
 {
  "sha": "2e15e662c01b5fb53905deb3fc17a4518dac440a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-04-18 08:00:02",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      # interpolate variables in strings, e.g. url(\"$file-1x\") => url(\"#{$file-1x}\")",
   "      ${0:ident}.gsub!(/\"[^\"\\n]*\"/) { |str| str.gsub(/\\$[^\"\\n$.\\\\]+/, '#{\\0}') }"
  ],
  "consequent": [
   "      ${0:ident}.gsub!(/\"([^\"\\n]*)(\\$[\\w\\-]+)([^\"\\n]*)\"/, '\"\\1#{\\2}\\3\"') # interpolate variable in string, e.g. url(\"$file-1x\") => url(\"#{$file-1x}\")"
  ]
 },
 {
  "sha": "92aa0c8b4631d7b0af6071f9c0aa08d49593678c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-04-18 07:42:23",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "    def replace_all(${0:ident}, ${1:ident}, ${2:ident} = nil, optional: false, &${3:ident})"
  ],
  "consequent": [
   "    def replace_all(${0:ident}, ${1:ident}, ${2:ident} = nil, &${3:ident})"
  ]
 },
 {
  "sha": "92aa0c8b4631d7b0af6071f9c0aa08d49593678c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-04-18 07:42:23",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} \"${1:tstring_content}#{${2:ident}}${3:tstring_content}#{${4:ident}}${5:tstring_content}\" if !optional && ${6:ident} == new_file"
  ],
  "consequent": [
   "      ${0:ident} \"${1:tstring_content}#{${2:ident}}${3:tstring_content}#{${4:ident}}${5:tstring_content}\" if ${6:ident} == new_file"
  ]
 },
 {
  "sha": "418073fd435446c2c3d55e1e29990bbff4159c96",
  "author": "Gleb Mazovetskiy",
  "created_at": "2018-04-18 07:35:26",
  "file_path": "test/compass_test.rb",
  "condition": [
   "    ${0:ident} = silence_stdout_if(!ENV['${1:tstring_content}']) { Bundler.with_clean_env { system(${2:ident}) } }"
  ],
  "consequent": [
   "    ${0:ident} = silence_stdout_if(!ENV['${1:tstring_content}']) { system(${2:ident}) }"
  ]
 },
 {
  "sha": "fdf1c797d4fb2e91d8645f02a5b96a85b37208fb",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-09-27 21:22:47",
  "file_path": "lib/bootstrap-sass/engine.rb",
  "condition": [
   "        unless Sprockets::Rails::VERSION.split('.', 2)[0].to_i >= 3"
  ],
  "consequent": [
   "        unless Sprockets::Rails::VERSION.starts_with?('3')"
  ]
 },
 {
  "sha": "f6ce89fffd8dfb9b4ab5341ea12c369135a9027e",
  "author": "takiy33",
  "created_at": "2015-09-27 21:02:04",
  "file_path": "test/test_helper.rb",
  "condition": [
   "default_max_wait_time"
  ],
  "consequent": [
   "default_wait_time"
  ]
 },
 {
  "sha": "7097cf5572e8f61b634c34e0dad86961b111b3b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-07-02 04:45:14",
  "file_path": "test/node_mincer_test.rb",
  "condition": [
   "        ${0:ident} 'node', 'manifest.js', tmp_dir"
  ],
  "consequent": [
   "        ${0:ident}(command)"
  ]
 },
 {
  "sha": "2579e3374f146d85ce517cc368fb54c9d198ecc8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-04-28 04:02:26",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            ${0:ident} = replace_rules(${0:ident}, /\\s*@font-face/) { |${1:ident}|"
  ],
  "consequent": [
   "            ${0:ident} = replace_rules(${0:ident}, '@font-face') { |${1:ident}|"
  ]
 },
 {
  "sha": "c45209470ef548ab2d24def0abaaefff712bb8c5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 11:21:42",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "_"
  ],
  "consequent": [
   "gsub"
  ]
 },
 {
  "sha": "c45209470ef548ab2d24def0abaaefff712bb8c5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 11:21:42",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident}, name, args = $1, $2, $3        ${0:ident} = ${0:ident}.scan(/${1:tstring_content}/).join('${2:tstring_content}') + '${2:tstring_content}' unless ${0:ident}.empty?        args = \"(#{args.tr(';', ',')})\" unless args.empty?"
  ],
  "consequent": [
   "        matches    = match.scan(mixin_pattern).flatten        ${0:ident}      = matches[1] && matches[1] != '' ? matches[1].scan(/${1:tstring_content}/).join('${2:tstring_content}') + '${2:tstring_content}' : ''        mixin_name = match.scan(/\\.([\\w-]+)\\(.*\\)\\s?\\{?/).first"
  ]
 },
 {
  "sha": "c45209470ef548ab2d24def0abaaefff712bb8c5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 11:21:42",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        if name && ${0:ident}.include?(\"#{${1:ident}}#{name}\")"
  ],
  "consequent": [
   "        if mixin_name && ${0:ident}.include?(\"#{${1:ident}}#{mixin_name.first}\")"
  ]
 },
 {
  "sha": "c45209470ef548ab2d24def0abaaefff712bb8c5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 11:21:42",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "          \"${0:tstring_content}#{${1:ident}}#{name}#{args}\""
  ],
  "consequent": [
   "          \"#{matches.first}${0:tstring_content}#{${1:ident}}#{matches.last.gsub(/;\\s*\\$/, ', $').sub(/;\\)$/, ')').sub(/\\(\\)$/, '')}\""
  ]
 },
 {
  "sha": "c45209470ef548ab2d24def0abaaefff712bb8c5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 11:21:42",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "          \"${0:tstring_content}#{${1:ident}}#{name}\""
  ],
  "consequent": [
   "          \"#{matches.first}${0:tstring_content}#{${1:ident}}#{matches.last.gsub(/\\(\\)/, '')}\""
  ]
 },
 {
  "sha": "5d3c30a148ae30ab8322f8c38148f99c7f6a8dc5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 10:43:00",
  "file_path": "tasks/converter/js_conversion.rb",
  "condition": [
   "        ${0:ident} = get_paths_by_type('${1:tstring_content}', /${2:tstring_content}/).reject { |path| path =~ %r(^tests/) }"
  ],
  "consequent": [
   "        ${0:ident} = get_paths_by_type '${1:tstring_content}', /${2:tstring_content}/"
  ]
 },
 {
  "sha": "5d3c30a148ae30ab8322f8c38148f99c7f6a8dc5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 10:43:00",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      @bootstrap_less_files ||= get_paths_by_type('${0:tstring_content}', /${1:tstring_content}/)"
  ],
  "consequent": [
   "      @bootstrap_less_files ||= get_paths_by_type('${0:tstring_content}', /${1:tstring_content}/) +        get_paths_by_type('mixins', /${1:tstring_content}/,                          get_tree(get_tree_sha('mixins', get_tree(get_tree_sha('${0:tstring_content}'))))).map { |p| \"mixins/#{p}\" }"
  ]
 },
 {
  "sha": "5d3c30a148ae30ab8322f8c38148f99c7f6a8dc5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 10:43:00",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "    def get_paths_by_type(${0:ident}, ${1:ident}, recursive = true)"
  ],
  "consequent": [
   "    def get_paths_by_type(${0:ident}, ${1:ident}, tree = get_tree(get_tree_sha(${0:ident})))      tree['tree'].select { |f| f['type'] == 'blob' && f['path'] =~ ${1:ident} }.map { |f| f['path'] }"
  ]
 },
 {
  "sha": "5d3c30a148ae30ab8322f8c38148f99c7f6a8dc5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 10:43:00",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "    def get_tree(${0:ident}, recursive = true)"
  ],
  "consequent": [
   "    def get_tree(${0:ident})"
  ]
 },
 {
  "sha": "5d3c30a148ae30ab8322f8c38148f99c7f6a8dc5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-02-25 10:43:00",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "      get_json(\"${0:tstring_content}#@repo${1:tstring_content}#{${2:ident}}#{'?recursive=1' if recursive}\")"
  ],
  "consequent": [
   "      get_json(\"${0:tstring_content}#@repo${1:tstring_content}#{${2:ident}}\")"
  ]
 },
 {
  "sha": "3e33c6f0d7745cb6956d8d09281e729c2a48f072",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-12-18 00:32:55",
  "file_path": "tasks/converter/fonts_conversion.rb",
  "condition": [
   "      @bootstrap_font_files ||= get_paths_by_type('${0:tstring_content}', /\\.(eot|svg|ttf|woff2?)$/)"
  ],
  "consequent": [
   "      @bootstrap_font_files ||= get_paths_by_type('${0:tstring_content}', /\\.(eot|svg|ttf|woff)$/)"
  ]
 },
 {
  "sha": "7f2e9b2892c49d77ee1e5196d5941efcf5bf4f22",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-11-22 00:56:27",
  "file_path": "tasks/converter/js_conversion.rb",
  "condition": [
   "      ${0:ident} = read_files('${1:tstring_content}', %w(${2:tstring_content} bootstrap.min.js))"
  ],
  "consequent": [
   "      ${0:ident} = read_files('${1:tstring_content}', ['${2:tstring_content}'])['${2:tstring_content}']"
  ]
 },
 {
  "sha": "0445445727423f03d0dfc457560250172a7dcfb3",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-11-18 20:45:40",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} = ${0:ident}.gsub(/${1:tstring_content}/, '\\1').gsub(/~'([^']+)'/, '\\1') # Get rid of ~\"\" escape"
  ],
  "consequent": [
   "      ${0:ident} = ${0:ident}.gsub(/${1:tstring_content}/, '#{\\1}') # Get rid of ~\"\" escape"
  ]
 },
 {
  "sha": "4427d7f7fb36bc7568d03f7cd6c635e6550e6b9c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2015-01-18 01:42:11",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      ::Sass::Script::Number.${0:ident} = [8, ::Sass::Script::Number.${0:ident}].max"
  ],
  "consequent": [
   "      ::Sass::Script::Number.${0:ident} = [10, ::Sass::Script::Number.${0:ident}].max"
  ]
 },
 {
  "sha": "7d30630bc8d490239b15dce754dfba298a7d5bc2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-12-18 00:27:37",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            ${0:ident} = ['$bootstrap-sass-asset-helper: false !default;', ${0:ident}].join(\"${1:tstring_content}\")"
  ],
  "consequent": [
   "            ${0:ident} = unindent <<-SCSS + \"${1:tstring_content}\" + ${0:ident}, 14              // When true, asset path helpers are used, otherwise the regular CSS `url()` is used.",
   "              // When there no function is defined, `fn('')` is parsed as string that equals the right hand side",
   "              // NB: in Sass 3.3 there is a native function: function-exists(twbs-font-path)",
   "              $bootstrap-sass-asset-helper: #{sass_fn_exists('twbs-font-path')} !default;",
   "            SCSS"
  ]
 },
 {
  "sha": "7d30630bc8d490239b15dce754dfba298a7d5bc2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-12-18 00:27:37",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "                    File.read(\"#{${0:ident}}${1:tstring_content}\").lines[1..-1].join.gsub(/${2:tstring_content}/, '${3:tstring_content}').gsub(/${4:tstring_content}/, '')"
  ],
  "consequent": [
   "                    File.read(\"#{${0:ident}}${1:tstring_content}\").gsub(/${2:tstring_content}/, '${3:tstring_content}').gsub(/${4:tstring_content}/, '')"
  ]
 },
 {
  "sha": "e4fe66b8d93313f23a50f6adf4bd37ffb19d5372",
  "author": "Andrey Deryabin",
  "created_at": "2014-12-17 17:04:20",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      if ${0:ident}        register_rails_engine"
  ],
  "consequent": [
   "      register_rails_engine      if ${0:ident}"
  ]
 },
 {
  "sha": "e4fe66b8d93313f23a50f6adf4bd37ffb19d5372",
  "author": "Andrey Deryabin",
  "created_at": "2014-12-17 17:04:20",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "sprockets?"
  ],
  "consequent": [
   "asset_pipeline?"
  ]
 },
 {
  "sha": "41ea576e9d611a9b2fffe4b1e0759ee7824858bc",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-11-15 01:22:15",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "          ${0:ident}.gsub(/${1:tstring_content}/, ' ').split(/,\\s*/ ).map { |sel_part|            \"#{${2:ident}}#{name}${3:tstring_content}#{sel_part}${4:tstring_content}#{'${5:tstring_content}' if ${6:ident} && !${6:ident}.${7:ident}}#{${6:ident}}${8:tstring_content}\""
  ],
  "consequent": [
   "          \"#{${2:ident}}#{$1}${3:tstring_content}#{${0:ident}.gsub(/${1:tstring_content}/, ' ')}${4:tstring_content}#{'${5:tstring_content}' if ${6:ident} && !${6:ident}.${7:ident}}#{${6:ident}}${8:tstring_content}\""
  ]
 },
 {
  "sha": "3d33a2266188389654ed6bbd418a19a3ad32fa70",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-10-28 12:00:55",
  "file_path": "templates/project/manifest.rb",
  "condition": [
   "    ${0:ident} ${1:ident}, ${2:ident}.relative_path_from(${3:ident}).${4:ident}, :${5:ident} => ${2:ident}.relative_path_from(${6:ident}).${4:ident}"
  ],
  "consequent": [
   "    ${0:ident} ${1:ident}, ${2:ident}.relative_path_from(${3:ident}).${4:ident},         :${5:ident} => ${2:ident}.relative_path_from(${6:ident}).${4:ident}"
  ]
 },
 {
  "sha": "edd7e38f8d7ac4f7590571878a5c309651585429",
  "author": "Aleksey V. Zapparov",
  "created_at": "2014-10-26 08:37:22",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      ${0:ident}      if rails?"
  ],
  "consequent": [
   "      if rails?        ${0:ident}      end"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} ${1:ident} ${1:ident}-${2:ident} ${1:ident}-${3:ident} ${1:ident}-${4:ident} ${5:ident}-shadow"
  ],
  "consequent": [
   "    ${0:ident} ${1:ident} ${1:ident}-${2:ident} ${1:ident}-${3:ident} ${1:ident}-${4:ident} ${5:ident}-shadow"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "shared_mixins"
  ],
  "consequent": [
   "load_shared"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        CLASSES_TO_MIXINS + read_mixins(read_files('${0:tstring_content}', ${1:ident}.grep(/${2:tstring_content}/)).${3:ident}.join(\"${4:tstring_content}\"),"
  ],
  "consequent": [
   "        read_mixins read_files('${0:tstring_content}', ${1:ident}.grep(/${2:tstring_content}/)).${3:ident}.join(\"${4:tstring_content}\"), nested: NESTED_MIXINS"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = read_files('${1:tstring_content}', ${2:ident})"
  ],
  "consequent": [
   "      ${0:ident} = read_files('${1:tstring_content}', ${2:ident})"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} = shared_mixins + read_mixins(${1:ident})"
  ],
  "consequent": [
   "      ${0:ident} = @shared_mixins + read_mixins(${1:ident})"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} unwrap_rule_block(${1:ident}).gsub(/(@include [\\w-]+)\\(?([\\$\\w\\-,\\s]*)\\)?/) {"
  ],
  "consequent": [
   "        ${0:ident} unwrap_rule_block(${1:ident}).gsub(/(@include [\\w-]+)\\(([\\$\\w\\-,\\s]*)\\)/) {"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident}    = ${1:ident}.scan(${2:ident}).flatten"
  ],
  "consequent": [
   "        ${0:ident} = ${1:ident}.scan(${2:ident}).flatten"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident}      = ${1:ident}[${2:int}] && ${1:ident}[${2:int}] != '' ? ${1:ident}[${2:int}].scan(/${3:tstring_content}/).join('${4:tstring_content}') + '${4:tstring_content}' : ''"
  ],
  "consequent": [
   "        ${0:ident}   = ${1:ident}[${2:int}] || ''        if ${0:ident} != ''          ${0:ident} = ${0:ident}.scan(/${3:tstring_content}/).join('${4:tstring_content}') + '${4:tstring_content}'        end"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "          \"#{${0:ident}.${1:ident}}${2:tstring_content}#{${3:ident}}#{${0:ident}.${4:ident}.gsub(/;\\s*\\$/, '${5:tstring_content}').sub(/${6:tstring_content}/, '${7:tstring_content}').sub(/\\(\\)$/, '')}\""
  ],
  "consequent": [
   "          \"#{${0:ident}.${1:ident}}${2:tstring_content}#{${3:ident}}#{${0:ident}.${4:ident}}\".gsub(/; \\$/, \"${5:tstring_content}\").sub(/${6:tstring_content}/, '${7:tstring_content}')"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "selector"
  ],
  "consequent": [
   "rule_prefix"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}       = {prefix: true, comments: true}.merge(${0:ident} || {})"
  ],
  "consequent": [
   "      ${0:ident} = {comments: true}.merge(${0:ident} || {})"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}          = ${0:ident}.dup"
  ],
  "consequent": [
   "      ${0:ident}    = ${0:ident}.dup"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}             = CharStringScanner.new(${1:ident})"
  ],
  "consequent": [
   "      ${0:ident}       = CharStringScanner.new(${1:ident})"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}       = if options[:prefix]                        /${1:tstring_content}#{selector}${2:tstring_content}#{SELECTOR_CHAR}${3:tstring_content}#{RULE_OPEN_BRACE_RE}${4:tstring_content}/"
  ],
  "consequent": [
   "      ${0:ident} = /${1:tstring_content}#{rule_prefix}${2:tstring_content}#{SELECTOR_CHAR}${3:tstring_content}#{RULE_OPEN_BRACE_RE}${4:tstring_content}/"
  ]
 },
 {
  "sha": "e9164d7ab123cb643e2cf7dece089f683cc610ea",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-15 21:45:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "                      else                        /#{selector}[\\s]*#{RULE_OPEN_BRACE_RE}/                      end"
  ],
  "consequent": [
   "      if options[:comments]"
  ]
 },
 {
  "sha": "7aabf8a25a195a232677eea7482df7cbc7447744",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-06 10:36:42",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "          result = %x[#{${0:ident}}]"
  ],
  "consequent": [
   "      @branch_sha ||= %x[#{${0:ident}}].chomp"
  ]
 },
 {
  "sha": "ceb9c87a3c67e1f40f2727925b1ca45aa7a817b1",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 07:16:29",
  "file_path": "test/test_helper.rb",
  "condition": [
   "    require ${0:ident}[0..-4] # strip .rb suffix"
  ],
  "consequent": [
   "    load ${0:ident}"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "tasks/bower.rake",
  "condition": [
   "          ${0:ident}.(File.join(Bootstrap.${1:ident}, '_bootstrap.scss')) +"
  ],
  "consequent": [
   "          ${0:ident}.(File.join(Bootstrap.${1:ident}, 'bootstrap.scss')) +"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} = File.${1:ident} ${2:ident}, ${3:ident}.sub(/${4:tstring_content}/, '${5:tstring_content}')"
  ],
  "consequent": [
   "        ${3:ident}    = ${3:ident}.sub(/${4:tstring_content}/, '${5:tstring_content}')        ${0:ident}    = File.${1:ident} ${2:ident}, ${3:ident}        unless ${3:ident} == 'bootstrap.scss'"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} = File.${1:ident} File.dirname(${0:ident}), '${2:tstring_content}' + File.basename(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = File.${1:ident} File.dirname(${0:ident}), '${2:tstring_content}' + File.basename(${0:ident})        end"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      # move bootstrap/_bootstrap.scss to _bootstrap.scss adjusting import paths",
   "      main_from = \"#{${0:ident}}/_bootstrap.scss\"      main_to   = File.expand_path(\"#{${0:ident}}/../_bootstrap.scss\")"
  ],
  "consequent": [
   "      # generate imports valid relative to both load path and file directory",
   "      save_file File.expand_path(\"#{${0:ident}}/../bootstrap.scss\"),                File.read(\"#{${0:ident}}/bootstrap.scss\").gsub(/ \"/, ' \"bootstrap/')"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/compass_test.rb",
  "condition": [
   "    ${0:ident} = silence_stdout_if(!ENV['${1:tstring_content}']) { system(${2:ident}) }"
  ],
  "consequent": [
   "    ${0:ident} = if ENV['${1:tstring_content}']                system ${2:ident}              else                silence_stream(STDOUT) { system(${2:ident}) }              end"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "      FileUtils.mkdir_p(\"${0:tstring_content}#{File.dirname(${1:ident})}\")"
  ],
  "consequent": [
   "      assert_nothing_raised do        FileUtils.mkdir_p(\"${0:tstring_content}#{File.dirname(${1:ident})}\")"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "      File.open(\"${0:tstring_content}#{${1:ident}}${2:tstring_content}\", '${3:tstring_content}') { |${4:ident}|"
  ],
  "consequent": [
   "        File.open(\"${0:tstring_content}#{${1:ident}}${2:tstring_content}\", '${3:tstring_content}') { |${4:ident}|"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "        ${0:ident}.${1:ident} ${2:ident}.render"
  ],
  "consequent": [
   "          ${0:ident}.${1:ident} ${2:ident}.render"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/dummy_sass_only/compile.rb",
  "condition": [
   "scss_path = File.expand_path('${0:tstring_content}', File.dirname(__FILE__))"
  ],
  "consequent": [
   "css = Sass.compile(    File.read(File.expand_path('${0:tstring_content}', File.dirname(__FILE__))),"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/dummy_sass_only/compile.rb",
  "condition": [
   "css = Sass.compile File.read(scss_path), syntax: 'sass'"
  ],
  "consequent": [
   "    :syntax =>"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/node_mincer_test.rb",
  "condition": [
   "      silence_stdout_if !ENV['VERBOSE'] do"
  ],
  "consequent": [
   "      assert silence_stream(STDOUT) {"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/node_sass_test.rb",
  "condition": [
   "      success = silence_stderr_if !ENV['VERBOSE'] do"
  ],
  "consequent": [
   "      assert silence_stream(STDOUT) {"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/node_sass_test.rb",
  "condition": [
   "        ${0:ident} command"
  ],
  "consequent": [
   "        ${0:ident}(command)"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/sass_test.rb",
  "condition": [
   "      silence_stdout_if !ENV['VERBOSE'] do"
  ],
  "consequent": [
   "      assert silence_stream(STDOUT) {"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "    ${0:ident}     = 'test/dummy_rails'    command  = \"bundle exec rake assets:precompile GEMFILE=#{GEM_PATH}${1:tstring_content}\"    compiled = Dir.chdir ${0:ident} do      silence_stderr_if !ENV['VERBOSE'] do        system(command)      end    end    assert compiled, 'Could not precompile assets'    Dir.glob(File.join(${0:ident}, '${2:tstring_content}', '${3:tstring_content}', 'app*.{css,js}')) do |${4:ident}|"
  ],
  "consequent": [
   "    system \"cd #{Shellwords.escape Rails.${0:ident}.to_s} && bundle exec rake assets:precompile GEMFILE=#{Bootstrap.gem_path}${1:tstring_content}\"    Dir.glob(Rails.${0:ident}.join('${2:tstring_content}', '${3:tstring_content}', 'app*.*')) do |${4:ident}|      next unless ${4:ident} =~ /\\.(css|js)$/"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "    FileUtils.rm_rf %W(#{${0:ident}}/public/assets/ #{${0:ident}}${1:tstring_content}), secure: true"
  ],
  "consequent": [
   "    system \"rm -rf #{Rails.${0:ident}}/public/assets/ #{Rails.${0:ident}}${1:tstring_content}\""
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/test_helper.rb",
  "condition": [
   "GEM_PATH = File.expand_path('../', File.dirname(__FILE__))"
  ],
  "consequent": [
   "require 'sass'require 'rails/test_help'Dir[File.expand_path(\"./support/**/*.rb\", File.dirname(__FILE__))].each { |f| require f }"
  ]
 },
 {
  "sha": "6fe694cbd0627c45db4ed5ac3935d783ea0f02c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-09-03 06:48:44",
  "file_path": "test/test_helper.rb",
  "condition": [
   "timeout"
  ],
  "consequent": [
   "js_errors"
  ]
 },
 {
  "sha": "4ae2c8b8863aef79c326059f29fe4afbf9d75162",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 06:05:06",
  "file_path": "test/dummy_sass_only/compile.rb",
  "condition": [
   "scss_path = File.expand_path('${0:tstring_content}', File.dirname(__FILE__))"
  ],
  "consequent": [
   "css = Sass.compile(    File.read(File.expand_path('${0:tstring_content}', File.dirname(__FILE__))),"
  ]
 },
 {
  "sha": "4ae2c8b8863aef79c326059f29fe4afbf9d75162",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 06:05:06",
  "file_path": "test/dummy_sass_only/compile.rb",
  "condition": [
   "css = Sass.compile File.read(scss_path), syntax: 'sass'"
  ],
  "consequent": [
   "    :syntax =>"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "lib/bootstrap-sass/engine.rb",
  "condition": [
   "          ${0:ident}.${1:ident}.${2:ident}.${3:ident} << ${4:ident}.join('${2:tstring_content}', ${5:ident}).to_s"
  ],
  "consequent": [
   "          ${0:ident}.${1:ident}.${2:ident}.${3:ident} << ${4:ident}.join('${2:tstring_content}', ${5:ident})"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/compass_test.rb",
  "condition": [
   "    ${0:ident} = silence_stdout_if(!ENV['${1:tstring_content}']) { system(${2:ident}) }"
  ],
  "consequent": [
   "    ${0:ident} = if ENV['${1:tstring_content}']                system ${2:ident}              else                silence_stream(STDOUT) { system(${2:ident}) }              end"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "      FileUtils.mkdir_p(\"${0:tstring_content}#{File.dirname(${1:ident})}\")"
  ],
  "consequent": [
   "      assert_nothing_raised do        FileUtils.mkdir_p(\"${0:tstring_content}#{File.dirname(${1:ident})}\")"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "      File.open(\"${0:tstring_content}#{${1:ident}}${2:tstring_content}\", '${3:tstring_content}') { |${4:ident}|"
  ],
  "consequent": [
   "        File.open(\"${0:tstring_content}#{${1:ident}}${2:tstring_content}\", '${3:tstring_content}') { |${4:ident}|"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "        ${0:ident}.${1:ident} ${2:ident}.render"
  ],
  "consequent": [
   "          ${0:ident}.${1:ident} ${2:ident}.render"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/node_mincer_test.rb",
  "condition": [
   "      silence_stdout_if !ENV['VERBOSE'] do"
  ],
  "consequent": [
   "      assert silence_stream(STDOUT) {"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/node_sass_test.rb",
  "condition": [
   "      success = silence_stderr_if !ENV['VERBOSE'] do"
  ],
  "consequent": [
   "      assert silence_stream(STDOUT) {"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/node_sass_test.rb",
  "condition": [
   "        ${0:ident} command"
  ],
  "consequent": [
   "        ${0:ident}(command)"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/sass_test.rb",
  "condition": [
   "      silence_stdout_if !ENV['VERBOSE'] do"
  ],
  "consequent": [
   "      assert silence_stream(STDOUT) {"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "    ${0:ident}     = 'test/dummy_rails'    command  = \"bundle exec rake assets:precompile GEMFILE=#{GEM_PATH}${1:tstring_content}\"    compiled = Dir.chdir ${0:ident} do      silence_stderr_if !ENV['VERBOSE'] do        system(command)      end    end    assert compiled, 'Could not precompile assets'    Dir.glob(File.join(${0:ident}, '${2:tstring_content}', '${3:tstring_content}', 'app*.{css,js}')) do |${4:ident}|"
  ],
  "consequent": [
   "    system \"cd #{Shellwords.escape Rails.${0:ident}.to_s} && bundle exec rake assets:precompile GEMFILE=#{Bootstrap.gem_path}${1:tstring_content}\"    Dir.glob(Rails.${0:ident}.join('${2:tstring_content}', '${3:tstring_content}', 'app*.*')) do |${4:ident}|      next unless ${4:ident} =~ /\\.(css|js)$/"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "    FileUtils.rm_rf %W(#{${0:ident}}/public/assets/ #{${0:ident}}${1:tstring_content}), secure: true"
  ],
  "consequent": [
   "    system \"rm -rf #{Rails.${0:ident}}/public/assets/ #{Rails.${0:ident}}${1:tstring_content}\""
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/test_helper.rb",
  "condition": [
   "require 'minitest/autorun'require 'minitest/reporters'Minitest::Reporters.use! Minitest::Reporters::SpecReporter.new"
  ],
  "consequent": [
   "$:.unshift(\"#{File.dirname(__FILE__)}/..\")"
  ]
 },
 {
  "sha": "0ca86d31fcaa22d4ecb1c9052e5669f3f161e6a0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-25 05:46:13",
  "file_path": "test/test_helper.rb",
  "condition": [
   "Dir.chdir 'test' do  Dir['support/**/*.rb'].${0:ident} do |${1:ident}|    ${2:ident} ${1:ident}"
  ],
  "consequent": [
   "Dir[File.expand_path('./support/**/*.rb', File.dirname(__FILE__))].${0:ident} do |${1:ident}|  ${2:ident} ${1:ident}"
  ]
 },
 {
  "sha": "3b493908b86b6d742a080e7005c0c0ceb1f8bb25",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-20 02:59:20",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      ${0:ident} if rails?"
  ],
  "consequent": [
   "      if rails?        ${0:ident}      end"
  ]
 },
 {
  "sha": "3b493908b86b6d742a080e7005c0c0ceb1f8bb25",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-20 02:59:20",
  "file_path": "test/test_helper.rb",
  "condition": [
   "Dir[File.expand_path('${0:tstring_content}', File.dirname(__FILE__))].${1:ident} do |file|"
  ],
  "consequent": [
   "Dir[File.expand_path(\"${0:tstring_content}\", File.dirname(__FILE__))].${1:ident} { |f| require f }"
  ]
 },
 {
  "sha": "9ece2c8cf002ef846a64f8378e3da462eef5e7d4",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-20 01:32:33",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      main_from = \"#{${0:ident}}${1:tstring_content}\"      main_to   = File.expand_path(\"#{${0:ident}}${2:tstring_content}\")"
  ],
  "consequent": [
   "      save_file File.expand_path(\"#{${0:ident}}${2:tstring_content}\"),                File.read(\"#{${0:ident}}${1:tstring_content}\").gsub(/ \"/, ' \"bootstrap/')"
  ]
 },
 {
  "sha": "7b5ce7e0c3bc924c064f3bf19c136903d64cf75e",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-20 01:28:21",
  "file_path": "tasks/bower.rake",
  "condition": [
   "          ${0:ident}.(File.join(Bootstrap.${1:ident}, '_bootstrap.scss')) +"
  ],
  "consequent": [
   "          ${0:ident}.(File.join(Bootstrap.${1:ident}, 'bootstrap.scss')) +"
  ]
 },
 {
  "sha": "7b5ce7e0c3bc924c064f3bf19c136903d64cf75e",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-20 01:28:21",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} = File.${1:ident} ${2:ident}, ${3:ident}.sub(/${4:tstring_content}/, '${5:tstring_content}')"
  ],
  "consequent": [
   "        ${3:ident}    = ${3:ident}.sub(/${4:tstring_content}/, '${5:tstring_content}')        ${0:ident}    = File.${1:ident} ${2:ident}, ${3:ident}        unless ${3:ident} == 'bootstrap.scss'"
  ]
 },
 {
  "sha": "7b5ce7e0c3bc924c064f3bf19c136903d64cf75e",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-20 01:28:21",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} = File.${1:ident} File.dirname(${0:ident}), '${2:tstring_content}' + File.basename(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = File.${1:ident} File.dirname(${0:ident}), '${2:tstring_content}' + File.basename(${0:ident})        end"
  ]
 },
 {
  "sha": "7b5ce7e0c3bc924c064f3bf19c136903d64cf75e",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-20 01:28:21",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} File.expand_path(\"#{${1:ident}}/../_bootstrap.scss\"),"
  ],
  "consequent": [
   "      ${0:ident} File.expand_path(\"#{${1:ident}}/../bootstrap.scss\"),"
  ]
 },
 {
  "sha": "7b5ce7e0c3bc924c064f3bf19c136903d64cf75e",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-08-20 01:28:21",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "                File.read(\"#{${0:ident}}/_bootstrap.scss\").gsub(/${1:tstring_content}/, '${2:tstring_content}')"
  ],
  "consequent": [
   "                File.read(\"#{${0:ident}}/bootstrap.scss\").gsub(/${1:tstring_content}/, '${2:tstring_content}')"
  ]
 },
 {
  "sha": "07923942e5a2d0e961650e21701973e9cf9af91d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-30 03:58:36",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "          contents[${0:ident}] = open(\"#{${1:ident}}${2:tstring_content}#{${0:ident}}\").read"
  ],
  "consequent": [
   "          content = open(\"#{${1:ident}}${2:tstring_content}#{${0:ident}}\").read"
  ]
 },
 {
  "sha": "07923942e5a2d0e961650e21701973e9cf9af91d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-30 03:58:36",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "          Thread.${0:ident} { ${1:ident} ${2:ident}, ${3:ident} => contents[${3:ident}] }"
  ],
  "consequent": [
   "          Thread.${0:ident} { ${1:ident} ${2:ident}, ${3:ident} => content }"
  ]
 },
 {
  "sha": "f76c5ee292e6fca69172b945da25629e893e9373",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-27 01:52:59",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "      ${0:ident} = read_cached_files(${1:ident}, ${2:ident})"
  ],
  "consequent": [
   "      if (${0:ident} = read_cached_files(${1:ident}, ${2:ident}))"
  ]
 },
 {
  "sha": "f76c5ee292e6fca69172b945da25629e893e9373",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-27 01:52:59",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "          ${0:ident} = open(\"#{${1:ident}}${2:tstring_content}#{${3:ident}}\").read"
  ],
  "consequent": [
   "            ${0:ident} = open(\"#{${1:ident}}${2:tstring_content}#{${3:ident}}\").read"
  ]
 },
 {
  "sha": "f76c5ee292e6fca69172b945da25629e893e9373",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-27 01:52:59",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "          Thread.${0:ident} { write_cached_files path, ${1:ident} => ${2:ident} }"
  ],
  "consequent": [
   "            Thread.${0:ident} { contents[${1:ident}] = ${2:ident} }"
  ]
 },
 {
  "sha": "f76c5ee292e6fca69172b945da25629e893e9373",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-27 01:52:59",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "      end.each(&:${0:ident})"
  ],
  "consequent": [
   "        end.each(&:${0:ident})        write_cached_files path, contents      end"
  ]
 },
 {
  "sha": "f76c5ee292e6fca69172b945da25629e893e9373",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-27 01:52:59",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "          path = \"#{${0:ident}}${1:tstring_content}#{${2:ident}}\"          ${3:ident}[${2:ident}] = File.read(path, mode: '${4:tstring_content}') if File.exists?(path)"
  ],
  "consequent": [
   "          ${3:ident}[${2:ident}] = File.read(\"#{${0:ident}}${1:tstring_content}#{${2:ident}}\", mode: '${4:tstring_content}') || ''"
  ]
 },
 {
  "sha": "63c007067f3cef9521157f6b7994f03c5ae54d3d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-26 00:13:00",
  "file_path": "tasks/bower.rake",
  "condition": [
   "generate"
  ],
  "consequent": [
   "spec"
  ]
 },
 {
  "sha": "63c007067f3cef9521157f6b7994f03c5ae54d3d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-26 00:13:00",
  "file_path": "tasks/bower.rake",
  "condition": [
   "      ${0:ident}   = File.read(File.${1:ident} Bootstrap.${2:ident}, 'bootstrap-sprockets.js').${3:ident}.${4:ident} do |${5:ident}|"
  ],
  "consequent": [
   "      ${0:ident}   = File.read(File.${1:ident} Bootstrap.${2:ident}, 'bootstrap.js').${3:ident}.${4:ident} do |${5:ident}|"
  ]
 },
 {
  "sha": "63c007067f3cef9521157f6b7994f03c5ae54d3d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-26 00:13:00",
  "file_path": "tasks/bower.rake",
  "condition": [
   "        ${0:ident}.${1:ident} if ${0:ident}.sub!(%r(//\\s*=\\s*require\\s*(?:./)?(.*)\\s*), '${2:tstring_content}')"
  ],
  "consequent": [
   "        ${0:ident}.${1:ident} if ${0:ident}.sub!(%r(//\\s*=\\s*require\\s*(.*)\\s*), '${2:tstring_content}')"
  ]
 },
 {
  "sha": "430a80a2be7bf84acf5022cf7ab4989d858c5581",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-24 11:21:35",
  "file_path": "templates/project/manifest.rb",
  "condition": [
   "${0:ident} '${1:tstring_content}',           :${2:ident}               => true,           :${3:ident}                => '${4:tstring_content}',           :${5:ident} => File.expand_path(\"#{${6:ident}}${7:tstring_content}\", manifest)"
  ],
  "consequent": [
   "${0:ident} '${1:tstring_content}', :${3:ident} => '${4:tstring_content}', :${2:ident} => true,           :${5:ident} => File.expand_path(\"#{${6:ident}}${7:tstring_content}\", File.dirname(__FILE__))"
  ]
 },
 {
  "sha": "430a80a2be7bf84acf5022cf7ab4989d858c5581",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-24 11:21:35",
  "file_path": "templates/project/manifest.rb",
  "condition": [
   "# Copy JS and fonts",
   "{:${0:ident} => 'javascripts',:font       => 'fonts'}.each do |method, dir|  root = Pathname.new(${1:ident}).join(dir)  Dir.${2:ident} root.join('**', '*.*') do |${3:ident}|    ${3:ident} = Pathname.new(${3:ident})    send method, ${3:ident}.relative_path_from(manifest).to_s,         :${4:ident} => ${3:ident}.relative_path_from(root).to_s  end"
  ],
  "consequent": [
   "# JS:",
   "bs_javascripts = \"#{${1:ident}}/javascripts/bootstrap\"Dir.${2:ident} File.expand_path(\"#{bs_javascripts}/*.js\", File.dirname(__FILE__)) do |${3:ident}|  file = File.basename(${3:ident})  ${0:ident} \"#{bs_javascripts}/#{file}\", :${4:ident} => \"bootstrap/#{file}\""
  ]
 },
 {
  "sha": "430a80a2be7bf84acf5022cf7ab4989d858c5581",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-24 11:21:35",
  "file_path": "test/compass_test.rb",
  "condition": [
   "test_create_project"
  ],
  "consequent": [
   "test_create_project_with_boostrap"
  ]
 },
 {
  "sha": "7951a6d663ae8fb3646ef6a9de537ee18d282877",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-24 10:03:39",
  "file_path": "tasks/converter/js_conversion.rb",
  "condition": [
   "      manifest = ''      cat = ''"
  ],
  "consequent": [
   "      content = ''"
  ]
 },
 {
  "sha": "7951a6d663ae8fb3646ef6a9de537ee18d282877",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-24 10:03:39",
  "file_path": "tasks/converter/js_conversion.rb",
  "condition": [
   "manifest"
  ],
  "consequent": [
   "content"
  ]
 },
 {
  "sha": "7951a6d663ae8fb3646ef6a9de537ee18d282877",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-24 10:03:39",
  "file_path": "tasks/converter/js_conversion.rb",
  "condition": [
   "        ${0:ident} path"
  ],
  "consequent": [
   "      ${0:ident} path"
  ]
 },
 {
  "sha": "0cbe7255b5ef45ba79ab684b61bf2d2443876e84",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-24 09:57:06",
  "file_path": "tasks/bower.rake",
  "condition": [
   "        ${0:ident}.${1:ident} if ${0:ident}.sub!(%r(${2:tstring_content}), 'assets/javascripts/\\1.js')"
  ],
  "consequent": [
   "        ${0:ident}.${1:ident} if ${0:ident}.sub!(%r(${2:tstring_content}), 'vendor/assets/javascripts/\\1.js')"
  ]
 },
 {
  "sha": "e2e70208d5c8e0f177e45b45d872ba592f987ad9",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-18 21:32:02",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            ${0:ident} = ${1:ident}.${2:ident} { |${3:ident}| %Q(//= depend_on \"bootstrap/#{File.basename(${3:ident})}${4:tstring_content}) } * \"${5:tstring_content}\" + \"${5:tstring_content}\" + ${0:ident}"
  ],
  "consequent": [
   "            ${0:ident} = ${1:ident}.${2:ident} { |${3:ident}| %Q(//= depend_on_asset \"./../../fonts/bootstrap/#{File.basename(${3:ident})}${4:tstring_content}) } * \"${5:tstring_content}\" + \"${5:tstring_content}\" + ${0:ident}"
  ]
 },
 {
  "sha": "2dc2274848029a38302871ba95c442e46b5cb176",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-18 04:00:30",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            ${0:ident} = ${1:ident}.${2:ident} { |${3:ident}| %Q(//= depend_on_asset \"./../../fonts/bootstrap/#{File.basename(${3:ident})}${4:tstring_content}) } * \"${5:tstring_content}\" + \"${5:tstring_content}\" + ${0:ident}"
  ],
  "consequent": [
   "            ${0:ident} = ${1:ident}.${2:ident} { |${3:ident}| %Q(//= depend_on_asset \"../../fonts/bootstrap/#{File.basename(${3:ident})}${4:tstring_content}) } * \"${5:tstring_content}\" + \"${5:tstring_content}\" + ${0:ident}"
  ]
 },
 {
  "sha": "b198b6c255b993eca10badc7724a193f24d36e30",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-17 05:40:40",
  "file_path": "test/support/integration_test.rb",
  "condition": [
   "    ${0:ident}.${1:ident}.render(File.join(${2:ident}, \"#{name}${3:tstring_content}\"), :${4:ident} => true)"
  ],
  "consequent": [
   "    ${0:ident}.${1:ident}.render(File.join(${2:ident}, \"#{@__name__}${3:tstring_content}\"), :${4:ident} => true)"
  ]
 },
 {
  "sha": "b198b6c255b993eca10badc7724a193f24d36e30",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-17 05:40:40",
  "file_path": "test/support/integration_test.rb",
  "condition": [
   "    File.open(File.join(${0:ident}, \"#{name}${1:tstring_content}\"), '${2:tstring_content}') { |${3:ident}| ${3:ident}.write(${4:ident}) } if ${4:ident}"
  ],
  "consequent": [
   "    File.open(File.join(${0:ident}, \"#{@__name__}${1:tstring_content}\"), '${2:tstring_content}') { |${3:ident}| ${3:ident}.write(${4:ident}) } if ${4:ident}"
  ]
 },
 {
  "sha": "7eed336d8a3470db109ee952b7bea9a8e4bb7ed4",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-17 05:40:24",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            ${0:ident} = ${1:ident}.${2:ident} { |${3:ident}| %Q(//= depend_on_asset \"../../fonts/bootstrap/#{File.basename(${3:ident})}${4:tstring_content}) } * \"${5:tstring_content}\" + \"${5:tstring_content}\" + ${0:ident}"
  ],
  "consequent": [
   "            ${0:ident} = ${1:ident}.${2:ident} { |${3:ident}| %Q(//= depend_on_asset \"bootstrap/#{File.basename(${3:ident})}${4:tstring_content}) } * \"${5:tstring_content}\" + \"${5:tstring_content}\" + ${0:ident}"
  ]
 },
 {
  "sha": "0b943fcb1700da5e8053797d26944a8ea2e4fb85",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-06-05 02:53:36",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            ${0:ident} = replace_rules(${0:ident}, Regexp.escape('@mixin scale($ratioX, $ratioY...)')) { '' }"
  ],
  "consequent": [
   "            ${0:ident} = replace_rules(${0:ident}, '.scale(@ratioX; @ratioY)') {}"
  ]
 },
 {
  "sha": "ab72dcf428f6a1dd2c193f537943f05c88670ee5",
  "author": "James Adam",
  "created_at": "2014-04-30 10:58:24",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}.gsub(/${1:tstring_content}/) { \"fade_in(#{$1}${2:tstring_content}#{$2.${3:ident} / 100.0}${4:tstring_content}\" }"
  ],
  "consequent": [
   "      ${0:ident}.gsub(/${1:tstring_content}/) { \"rgba(#{$1}${2:tstring_content}#{$2.${3:ident} / 100.0}${4:tstring_content}\" }"
  ]
 },
 {
  "sha": "01fb7a1db5125e97f39392bf6cbbd65915ff79c8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-26 16:57:15",
  "file_path": "test/test_helper.rb",
  "condition": [
   "${0:ident} File.expand_path('dummy_rails/config/environment', File.dirname(__FILE__))"
  ],
  "consequent": [
   "${0:ident} File.expand_path('dummy/config/environment', File.dirname(__FILE__))"
  ]
 },
 {
  "sha": "0e3b79167ee7b04931e1c822a6ccedbcb27a8483",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-17 16:45:04",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        if ${0:ident}.${1:ident} /${2:tstring_content}#{Regexp.quote(${3:ident})}${4:tstring_content}#{SCSS_MIXIN_DEF_ARGS_RE}${5:tstring_content}/, '${6:tstring_content}'"
  ],
  "consequent": [
   "        ${0:ident}.${1:ident} /${2:tstring_content}#{Regexp.quote(${3:ident})}${4:tstring_content}#{SCSS_MIXIN_DEF_ARGS_RE}${5:tstring_content}/, '${6:tstring_content}'"
  ]
 },
 {
  "sha": "096702e196ed4255c66acafa714e97c4851e163f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-13 04:16:43",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} read_files('${1:tstring_content}', bootstrap_less_files.grep(/mixins\\//)).values.join(\"\\n\"), nested: NESTED_MIXINS"
  ],
  "consequent": [
   "        ${0:ident} read_files('${1:tstring_content}', ['mixins.less'])['mixins.less'], nested: NESTED_MIXINS"
  ]
 },
 {
  "sha": "096702e196ed4255c66acafa714e97c4851e163f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-13 04:16:43",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "          when 'mixins/gradients.less'            ${0:ident} = replace_ms_filters(${0:ident})            ${0:ident} = deinterpolate_vararg_mixins(${0:ident})          when"
  ],
  "consequent": [
   "            ${0:ident} = replace_all ${0:ident}, /,\\s*\\.open \\.dropdown-toggle& \\{(.*?)\\}/m,                               \" {\\\\1}\\n  .open & { &.dropdown-toggle {\\\\1} }\""
  ]
 },
 {
  "sha": "096702e196ed4255c66acafa714e97c4851e163f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-13 04:16:43",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      @bootstrap_less_files ||= get_paths_by_type('${0:tstring_content}', /${1:tstring_content}/) +"
  ],
  "consequent": [
   "      @bootstrap_less_files ||= get_paths_by_type('${0:tstring_content}', /${1:tstring_content}/)"
  ]
 },
 {
  "sha": "096702e196ed4255c66acafa714e97c4851e163f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-13 04:16:43",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      sel = /${0:tstring_content}#{SELECTOR_RE}${1:tstring_content}/.match(${2:ident}) && $1 && $1.strip"
  ],
  "consequent": [
   "      /${0:tstring_content}#{SELECTOR_RE}${1:tstring_content}/.match(${2:ident}) && $1 && $1.strip"
  ]
 },
 {
  "sha": "096702e196ed4255c66acafa714e97c4851e163f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-13 04:16:43",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "    def get_paths_by_type(${0:ident}, ${1:ident}, tree = get_tree(get_tree_sha(${0:ident})))"
  ],
  "consequent": [
   "    def get_paths_by_type(${0:ident}, ${1:ident})      files = get_json \"https://api.github.com/repos/#@repo/git/trees/#{get_tree_sha(${0:ident})}\""
  ]
 },
 {
  "sha": "096702e196ed4255c66acafa714e97c4851e163f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-13 04:16:43",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "    def get_tree_sha(${0:ident}, tree = get_trees)"
  ],
  "consequent": [
   "    def get_tree_sha(${0:ident})"
  ]
 },
 {
  "sha": "096702e196ed4255c66acafa714e97c4851e163f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-13 04:16:43",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "      @trees ||= get_tree(@branch_sha)    end"
  ],
  "consequent": [
   "      @trees ||= get_json(\"https://api.github.com/repos/#@repo/git/trees/#@branch_sha\")"
  ]
 },
 {
  "sha": "5ec27527c2fe21609eb2a37fc5fbb730a97eb817",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-06 21:17:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} = ${1:ident} ${0:ident}.gsub(/${2:tstring_content}/, '${3:tstring_content}').gsub(/(\\$[\\w-]+)\\s+=\\s+(\\w+)/, '\\1 == \\2').gsub(/${4:tstring_content}/, '${5:tstring_content}')"
  ],
  "consequent": [
   "        ${0:ident} = ${1:ident} ${0:ident}.gsub(/${2:tstring_content}/, '${3:tstring_content}').gsub(/(?<=\\$type) = (\\w+)/, ' == \\1').gsub(/${4:tstring_content}/, '${5:tstring_content}')"
  ]
 },
 {
  "sha": "5ec27527c2fe21609eb2a37fc5fbb730a97eb817",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-06 21:17:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        new_sel = ${0:ident} || \"#{get_selector(${1:ident}).gsub(/${2:tstring_content}/, selector_for_pos(${3:ident}, ${4:ident}.${5:ident}))}\""
  ],
  "consequent": [
   "        matches << [${1:ident}, ${4:ident}]        ${0:ident} ||= \"#{get_selector(${1:ident}).gsub(/${2:tstring_content}/, selector_for_pos(${3:ident}, ${4:ident}.${5:ident}))}\""
  ]
 },
 {
  "sha": "5ec27527c2fe21609eb2a37fc5fbb730a97eb817",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-03-06 21:17:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        matches << [${0:ident}, pos, new_sel]        ${1:ident} \"${2:tstring_content}#{get_selector(${0:ident})}${3:tstring_content}#{new_sel}\".tr(\"${4:tstring_content}\", ' ').squeeze(' '), indent_width(${0:ident})"
  ],
  "consequent": [
   "        ${1:ident} \"${2:tstring_content}#{get_selector(${0:ident})}${3:tstring_content}#{new_selector}\".tr(\"${4:tstring_content}\", ' ').squeeze(' '), indent_width(${0:ident})"
  ]
 },
 {
  "sha": "8bc2fca792176dcc5175f0e37eacd4832a4082e0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-25 09:05:10",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            ${0:ident} = ${1:ident}.${2:ident} { |${3:ident}| %Q(//= depend_on_asset \"bootstrap/#{File.basename(${3:ident})}${4:tstring_content}) } * \"${5:tstring_content}\" + \"${5:tstring_content}\" + ${0:ident}"
  ],
  "consequent": [
   "            ${0:ident} = ${1:ident}.${2:ident} { |${3:ident}| %Q(//= depend_on_asset \"#{File.basename(${3:ident})}${4:tstring_content}) } * \"${5:tstring_content}\" + \"${5:tstring_content}\" + ${0:ident}"
  ]
 },
 {
  "sha": "ee8b356a3caa12aee73ee4c5c67dc629cd8bba8c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-25 09:01:07",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "    scale ${0:ident} ${0:ident}-${1:ident} ${0:ident}-${2:ident} ${0:ident}-${3:ident} ${4:ident}-shadow"
  ],
  "consequent": [
   "    ${0:ident} ${0:ident}-${1:ident} ${0:ident}-${2:ident} ${0:ident}-${3:ident} ${4:ident}-shadow"
  ]
 },
 {
  "sha": "ee8b356a3caa12aee73ee4c5c67dc629cd8bba8c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-25 09:01:07",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            # remove second scale mixins as this is handled via vararg in the first one",
   "            ${0:ident} = replace_rules(${0:ident}, '.scale(@ratioX; @ratioY)') {}"
  ],
  "consequent": [
   "            # make +scale(one_argument) compatible with Sass list handling",
   "            # see https://github.com/twbs/bootstrap-sass/issues/518",
   "            ${0:ident} = replace_all ${0:ident}, '$ratio, $ratio-y', '$scale-args'"
  ]
 },
 {
  "sha": "ba35928ed51413a144f53b087f7a960540a23115",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-12 06:43:56",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        mixin_all_grid_columns ${0:ident}, selector: '${1:tstring_content}', to: '$grid-columns'"
  ],
  "consequent": [
   "        mxn_def = ${0:ident}.each_line.first        classes = if ${0:ident} =~ /-columns-float/                    '.col-#{$class}-#{$i}'                  else                    '${1:tstring_content}'                  end        body = (${0:ident} =~ /\\$list \\{\\n(.*?)\\n[ ]*\\}/m) && $1        unindent <<-SASS, 8        // [converter] Grid converted to use SASS cycles (LESS uses recursive nested mixin defs not supported by SASS)",
   "        #{mxn_def.strip}",
   "          $list: '';",
   "          $i: 1;",
   "          $list: \"#{classes}\";",
   "          @for $i from 2 through $grid-columns {",
   "            $list: \"#{classes}, \\#{$list}\";",
   "          }",
   "          \\#{$list} {",
   "        #{unindent body}",
   "          }",
   "        }",
   "        SASS"
  ]
 },
 {
  "sha": "ba35928ed51413a144f53b087f7a960540a23115",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-12 06:43:56",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "loop"
  ],
  "consequent": [
   "make"
  ]
 },
 {
  "sha": "05fafd0eb0b5cbe103c364759404fc95d8ca760f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-06 04:09:19",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        replace_properties(${0:ident}) { |${1:ident}|          next ${1:ident} if ${1:ident}.${2:ident}.${3:ident}          spacer = ' ' * indent_width(${1:ident})          \"#{spacer}\\#{#{${4:ident}}} {\\n#{indent(${1:ident}.sub(/\\s+\\z/, ''), 2)}\\n#{spacer}}\"        }"
  ],
  "consequent": [
   "        replace_properties(${0:ident}) { |${1:ident}| ${1:ident}.${2:ident}.${3:ident} ? ${1:ident} : \"  \\#{#{${4:ident}}} { #{${1:ident}.${2:ident}} }\\n  \" }"
  ]
 },
 {
  "sha": "05fafd0eb0b5cbe103c364759404fc95d8ca760f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-06 04:09:19",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      from = ${0:ident}.pos"
  ],
  "consequent": [
   "      prev_pos = ${0:ident}.pos      depth    = 0      pos      = []"
  ]
 },
 {
  "sha": "05fafd0eb0b5cbe103c364759404fc95d8ca760f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-06 04:09:19",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      m = ${0:ident}.scan_next(/\\s*#{SELECTOR_RE}#{RULE_OPEN_BRACE_RE}/) || ${0:ident}.scan_next(/\\s*#{RULE_CLOSE_BRACE_RE}/)"
  ],
  "consequent": [
   "      while (b = ${0:ident}.scan_next(/#{SELECTOR_RE}#{RULE_OPEN_BRACE_RE}|#{RULE_CLOSE_BRACE_RE}/m))"
  ]
 },
 {
  "sha": "05fafd0eb0b5cbe103c364759404fc95d8ca760f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-06 04:09:19",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      to = ${0:ident}.${1:ident} - m.${2:ident} - 1"
  ],
  "consequent": [
   "        s_pos = ${0:ident}.${1:ident}        depth += (b == '}' ? -1 : +1)        if depth == 1          if b == '}'            prev_pos = s_pos          else            ${1:ident} << (prev_pos .. s_pos - b.${2:ident} - 1)          end        end      end"
  ]
 },
 {
  "sha": "05fafd0eb0b5cbe103c364759404fc95d8ca760f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-06 04:09:19",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} ${1:ident}, [(from .. to)], &block"
  ],
  "consequent": [
   "      ${0:ident} ${1:ident}, pos, &block"
  ]
 },
 {
  "sha": "7aff04972fe4b2b4175bd0af649cfa25d7598376",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-02-01 16:32:34",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        replace_rules(${0:ident}, /.*&[ ,:]/) { |${1:ident}| ${2:ident} ${1:ident}, /${3:tstring_content}/, \"${4:tstring_content}#{${5:ident}}${6:tstring_content}\" }"
  ],
  "consequent": [
   "        replace_rules(${0:ident}, /.*&[ ,]/) { |${1:ident}| ${2:ident} ${1:ident}, /${3:tstring_content}/, \"${4:tstring_content}#{${5:ident}}${6:tstring_content}\" }"
  ]
 },
 {
  "sha": "d892ebbeb250940a6ad67a390e4973ec2458650e",
  "author": "Gleb Mazovetskiy",
  "created_at": "2014-01-17 03:04:30",
  "file_path": "test/sprockets_rails_test.rb",
  "condition": [
   "          ${0:ident} /-[0-9a-f]{12,}\\./, m"
  ],
  "consequent": [
   "          ${0:ident} /-[0-9a-f]{12,}\\.$/, m"
  ]
 },
 {
  "sha": "1ab5022c9baa7ec1843d0cbe11e919c6f20502b5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-24 13:16:20",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "    def replace_file_imports(${0:ident}, ${1:ident} = '')"
  ],
  "consequent": [
   "    def replace_file_imports(${0:ident}, ${1:ident} = 'bootstrap/')"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "              // a"
  ],
  "consequent": [
   "$bootstrap-sass-asset-helper:"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "    def convert_to_scss(${0:ident})"
  ],
  "consequent": [
   "      def convert_to_scss(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      mixins = @shared_mixins + read_mixins(${0:ident})"
  ],
  "consequent": [
   "      mixin_names = (@shared_mixins + read_mixins(${0:ident})).uniq"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = replace_vars(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = replace_vars(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = replace_file_imports(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = replace_file_imports(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = replace_mixin_definitions(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = replace_mixin_definitions ${0:ident}"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = replace_mixins(${0:ident}, mixins)"
  ],
  "consequent": [
   "      ${0:ident}        = replace_mixins ${0:ident}, mixin_names      # replace_less_extend does not seem to do anything. @glebm",
   "      ${0:ident}        = replace_less_extend(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = replace_spin(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = replace_spin(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = replace_image_urls(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = replace_image_urls(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = replace_escaping(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = replace_escaping(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = convert_less_ampersand(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = convert_less_ampersand(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = deinterpolate_vararg_mixins(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = deinterpolate_vararg_mixins(${0:ident})"
  ]
 },
 {
  "sha": "5bd81ba89df10ce1650022b5d2b763fb5ed615b6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 13:53:50",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}   = replace_calculation_semantics(${0:ident})"
  ],
  "consequent": [
   "      ${0:ident}        = replace_calculation_semantics(${0:ident})"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def initialize(repo: '${0:tstring_content}', branch: 'master', save_to: {}, cache_path: 'tmp/converter-cache-bootstrap')    @logger     = Logger.new    @repo       = repo"
  ],
  "consequent": [
   "  def initialize(branch)    @git_data_api_host = 'https://api.github.com/repos'    @git_raw_host  = 'https://raw.github.com'    @repo       = '${0:tstring_content}'    @repo_url   = \"https://github.com/#@repo\""
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  ${0:ident} :@logger, :log, :${1:ident}, :${2:ident}, :${3:ident}, :${4:ident}, :${5:ident}, :${6:ident}, :${7:ident}, :silence_log"
  ],
  "consequent": [
   "  ${0:ident} :@logger, :${1:ident}, :${2:ident}, :${3:ident}, :${4:ident}, :${5:ident}, :${6:ident}, :${7:ident}, :silence_log"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def process_bootstrap    log_status \"Convert Bootstrap LESS to SASS\"    puts \" repo   : #@repo_url\"    puts \" branch : #@branch_sha #@repo_url/tree/#@branch\"    puts \" save to: #{@save_to.to_json}\"    puts \" twbs cache: #{@cache_path}\"    puts '-' * 60    @save_to.each { |_, v| FileUtils.mkdir_p(v) }"
  ],
  "consequent": [
   "  def process"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/fonts_conversion.rb",
  "condition": [
   "save_to"
  ],
  "consequent": [
   "save_at"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/js_conversion.rb",
  "condition": [
   "save_to"
  ],
  "consequent": [
   "save_at"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/js_conversion.rb",
  "condition": [
   "save_to"
  ],
  "consequent": [
   "save_at"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "convert_less"
  ],
  "consequent": [
   "convert_to_scss"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "save_to"
  ],
  "consequent": [
   "save_at"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "save_to"
  ],
  "consequent": [
   "save_at"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      def convert_to_scss(${0:ident})"
  ],
  "consequent": [
   "    def convert_to_scss(${0:ident})"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "      ${0:ident} = ${1:ident} \"https://api.github.com/repos/#@repo${2:tstring_content}#{get_tree_sha(${3:ident})}\""
  ],
  "consequent": [
   "      ${0:ident} = ${1:ident} \"#{@git_data_api_host}/#@repo${2:tstring_content}#{get_tree_sha(${3:ident})}\""
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "log"
  ],
  "consequent": [
   "puts"
  ]
 },
 {
  "sha": "f076f64a4a3524f6791a1d04e63a9ed107ea919a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 07:16:03",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "      @trees ||= get_json(\"https://api.github.com/repos/#@repo${0:tstring_content}#@branch_sha\")"
  ],
  "consequent": [
   "      @trees ||= get_json(\"#{@git_data_api_host}/#@repo${0:tstring_content}#@branch_sha\")"
  ]
 },
 {
  "sha": "f12cfb1a7088e4321875397ca53dd8674ddc2ca1",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 06:18:52",
  "file_path": "tasks/converter/logger.rb",
  "condition": [
   "    def log_transform(*${0:ident}, from: ${1:ident}[${2:int}][/${3:tstring_content}/][${2:int}..-${4:int}].sub(/${5:tstring_content}/, ''))      ${6:ident} \"${7:tstring_content}#{${8:ident} from}#{${8:ident} \"${9:tstring_content}#{${0:ident} * '${10:tstring_content}'}\" unless ${0:ident}.${11:ident}}\""
  ],
  "consequent": [
   "    def log_transform(*${0:ident})      ${6:ident} \"#{${8:ident} \"${7:tstring_content}#{${1:ident}[${2:int}][/${3:tstring_content}/][${2:int}..-${4:int}].sub(/${5:tstring_content}/, '')}\"}#{${8:ident} \"${9:tstring_content}#{${0:ident} * '${10:tstring_content}'}\" unless ${0:ident}.${11:ident}}\""
  ]
 },
 {
  "sha": "6690e4d79c85b1b49ef5d8942823887b8da4ae1c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 06:18:39",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      log_status '  Reading shared mixins from mixins.less'      @shared_mixins = read_mixins ${0:ident}['${1:tstring_content}'], nested: NESTED_MIXINS"
  ],
  "consequent": [
   "      # read common mixin definitions (incl. nested mixins) from mixins.less",
   "      read_shared_mixins! ${0:ident}['${1:tstring_content}']      @shared_mixins << 'make-grid'"
  ]
 },
 {
  "sha": "6690e4d79c85b1b49ef5d8942823887b8da4ae1c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 06:18:39",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "uniq"
  ],
  "consequent": [
   "get_mixin_names"
  ]
 },
 {
  "sha": "6690e4d79c85b1b49ef5d8942823887b8da4ae1c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 06:18:39",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "    def read_mixins(${0:ident}, nested: {})"
  ],
  "consequent": [
   "    def read_shared_mixins!(${0:ident})      log_status \"  Reading shared mixins from mixins.less\""
  ]
 },
 {
  "sha": "6690e4d79c85b1b49ef5d8942823887b8da4ae1c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 06:18:39",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      mixins = get_mixin_names(${0:ident}, silent: true)"
  ],
  "consequent": [
   "      @shared_mixins = get_mixin_names(${0:ident}, silent: true)"
  ]
 },
 {
  "sha": "6690e4d79c85b1b49ef5d8942823887b8da4ae1c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 06:18:39",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "          mixins += get_mixin_names(unindent(unwrap_rule_block(${0:ident})), silent: true).${1:ident} { |${2:ident}| \"#{${3:ident}}${4:tstring_content}#{${2:ident}}\" }"
  ],
  "consequent": [
   "          @shared_mixins += get_mixin_names(unindent(unwrap_rule_block(${0:ident})), silent: true).${1:ident} { |${2:ident}| \"#{${3:ident}}${4:tstring_content}#{${2:ident}}\" }"
  ]
 },
 {
  "sha": "6690e4d79c85b1b49ef5d8942823887b8da4ae1c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 06:18:39",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      mixins.uniq!      mixins.sort!"
  ],
  "consequent": [
   "      @shared_mixins.sort!"
  ]
 },
 {
  "sha": "6690e4d79c85b1b49ef5d8942823887b8da4ae1c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 06:18:39",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} = get_css_selectors(${1:ident}).join(\"${2:tstring_content}\" * ${3:int}).scan(/${4:tstring_content}#{LESS_MIXIN_DEF_ARGS_RE}\\)(?: when.*?)?[ ]*\\{/).map(&:${5:ident}).${6:ident}.sort"
  ],
  "consequent": [
   "      ${0:ident} = get_css_selectors(${1:ident}).join(\"${2:tstring_content}\" * ${3:int}).scan(/${4:tstring_content}#{LESS_MIXIN_DEF_ARGS_RE}\\)[ ]*\\{/).map(&:${5:ident}).${6:ident}.sort"
  ]
 },
 {
  "sha": "cb69362beaf41ab75d96f79c3ac335bf2d572d7a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-21 02:03:52",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "whether"
  ],
  "consequent": [
   "bootstrap"
  ]
 },
 {
  "sha": "694e4cfc7f1cd618e9fafc9e5a6d9a1066235dc4",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-19 02:46:31",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "            %w(${0:tstring_content} input-size).each do |mixin|"
  ],
  "consequent": [
   "            file = parameterize_mixin_parent_selector file, '${0:tstring_content}'"
  ]
 },
 {
  "sha": "694e4cfc7f1cd618e9fafc9e5a6d9a1066235dc4",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-19 02:46:31",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      replace_rules(${0:ident}, '^\\s*@mixin\\s*' + ${1:ident}) do |${2:ident}|"
  ],
  "consequent": [
   "      replace_rules(${0:ident}, '^[ \\t]*@mixin\\s*' + ${1:ident}) do |${2:ident}|"
  ]
 },
 {
  "sha": "694e4cfc7f1cd618e9fafc9e5a6d9a1066235dc4",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-19 02:46:31",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} = ${0:ident}.gsub(${1:ident}) do |${2:ident}|"
  ],
  "consequent": [
   "      ${0:ident}.gsub(${1:ident}) do |${2:ident}|"
  ]
 },
 {
  "sha": "694e4cfc7f1cd618e9fafc9e5a6d9a1066235dc4",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-19 02:46:31",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} = ${1:ident} - (${2:ident}[${3:int}..${1:ident}].${4:ident}.index(RULE_CLOSE_BRACE_RE_REVERSE) || ${1:ident}) + 1"
  ],
  "consequent": [
   "      ${0:ident} = ${1:ident} - (${2:ident}[${3:int}..${1:ident}].${4:ident}.index('}') || ${1:ident}) + 1"
  ]
 },
 {
  "sha": "1f77da0b289af43b753534e34a24e80c8eee38ed",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-09 05:50:29",
  "file_path": "lib/bootstrap-sass/sass_functions.rb",
  "condition": [
   "            send(:\"#{${0:ident}}${1:tstring_content}\", ${2:ident}, Sass::Script::Bool.new(true)).${3:ident}.sub /url\\((.*)\\)$/, '\\1'"
  ],
  "consequent": [
   "            send(:\"#{${0:ident}}${1:tstring_content}\", ${2:ident}, Sass::Script::Bool.new(true)).${3:ident}"
  ]
 },
 {
  "sha": "cc2ec7e87c005fcb4d373891deac41c62b1e365b",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-03 21:22:47",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident} = ${0:ident}.gsub(/~\"([^\"]+)\"/, '${1:tstring_content}') # Get rid of ~\"\" escape"
  ],
  "consequent": [
   "      ${0:ident} = ${0:ident}.gsub(/\\~\"([^\"]+)\"/, '${1:tstring_content}') # Get rid of ~\"\" escape"
  ]
 },
 {
  "sha": "cc2ec7e87c005fcb4d373891deac41c62b1e365b",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-12-03 21:22:47",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}.scan(/^(\\s*&)(-[\\w\\[\\]]+\\s*\\{.+})$/) do |${1:ident}, ${2:ident}|"
  ],
  "consequent": [
   "      ${0:ident}.scan(/^(\\s*&)(-[\\w\\[\\]]+\\s*{.+})$/) do |${1:ident}, ${2:ident}|"
  ]
 },
 {
  "sha": "1d35e3bbb772049d74afb5c547cea509ede6c532",
  "author": "michael shiplett",
  "created_at": "2013-12-03 09:26:56",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "    ${0:ident} ${0:ident}-duration ${0:ident}-property ${0:ident}-${1:ident} ${2:ident}-shadow"
  ],
  "consequent": [
   "    ${0:ident} ${0:ident}-${1:ident} ${2:ident}-shadow"
  ]
 },
 {
  "sha": "8c7b1a9f3876b3f064b5d8c4baa40002756fe1f0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-15 06:30:59",
  "file_path": "lib/bootstrap-sass/sass_functions.rb",
  "condition": [
   "    def ie_hex_str(${0:ident})"
  ],
  "consequent": [
   "  def twbs_ie_hex_str(${0:ident})"
  ]
 },
 {
  "sha": "8c7b1a9f3876b3f064b5d8c4baa40002756fe1f0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-15 06:30:59",
  "file_path": "lib/bootstrap-sass/sass_functions.rb",
  "condition": [
   "      ${0:ident} = (color.${0:ident} * 255).round.to_s(${1:int}).rjust(${2:int}, '${3:tstring_content}')"
  ],
  "consequent": [
   "    alphastr = ${0:ident}.to_s(${1:int}).rjust(${2:int}, '${3:tstring_content}')"
  ]
 },
 {
  "sha": "8c7b1a9f3876b3f064b5d8c4baa40002756fe1f0",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-15 06:30:59",
  "file_path": "lib/bootstrap-sass/sass_functions.rb",
  "condition": [
   "      Sass::Script::String.new(\"${0:tstring_content}#{alpha}#{${1:ident}.send(:${2:ident})[${3:int}..-${3:int}]}\".${4:ident})"
  ],
  "consequent": [
   "    Sass::Script::String.new(\"${0:tstring_content}#{alphastr}#{${1:ident}.send(:${2:ident})[${3:int}..-${3:int}]}\".${4:ident})"
  ]
 },
 {
  "sha": "c58415eef00a708b25f6f7ee32573de038be4a50",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-15 02:26:08",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      File.${0:ident} assets_path, '${1:tstring_content}'    end"
  ],
  "consequent": [
   "      @stylesheets_path ||= File.${0:ident} gem_path, 'vendor', 'assets', '${1:tstring_content}'"
  ]
 },
 {
  "sha": "c58415eef00a708b25f6f7ee32573de038be4a50",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-15 02:26:08",
  "file_path": "lib/bootstrap-sass/sass_functions.rb",
  "condition": [
   "twbs_ie_hex_str"
  ],
  "consequent": [
   "ie_hex_str"
  ]
 },
 {
  "sha": "c58415eef00a708b25f6f7ee32573de038be4a50",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-15 02:26:08",
  "file_path": "lib/bootstrap-sass/sass_functions.rb",
  "condition": [
   "twbs_ie_hex_str"
  ],
  "consequent": [
   "ie_hex_str"
  ]
 },
 {
  "sha": "c58415eef00a708b25f6f7ee32573de038be4a50",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-15 02:26:08",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "              replace_asset_url ${0:ident}, :font"
  ],
  "consequent": [
   "              replace_all ${0:ident}, /url\\(/, 'font-url('"
  ]
 },
 {
  "sha": "c58415eef00a708b25f6f7ee32573de038be4a50",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-15 02:26:08",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "      ${0:ident}.gsub(/${1:tstring_content}/) { |${2:ident}| replace_asset_url ${2:ident}, :image }"
  ],
  "consequent": [
   "      ${0:ident}.gsub(/${1:tstring_content}/) { |${2:ident}| \"background-image: image-url(\\\"#{$1}\\\");\" }"
  ]
 },
 {
  "sha": "efab96f854dc8b08d46297b9af313fbe815124ac",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:47:22",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      @gem_path ||= File.${0:ident} '${1:tstring_content}', File.dirname(__FILE__)"
  ],
  "consequent": [
   "      @gem_path ||= File.${0:ident} File.join('${1:tstring_content}'), File.dirname(__FILE__)"
  ]
 },
 {
  "sha": "a3a73162b93002e29fe4309fa3645184564193df",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:20:07",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      ::Sass.${0:ident} << stylesheets_path"
  ],
  "consequent": [
   "      ::Sass.${0:ident} << File.join(gem_path, 'vendor', 'assets', 'stylesheets')"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    def load!"
  ],
  "consequent": [
   "  def self.load!"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      if compass?"
  ],
  "consequent": [
   "    if compass?"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "        register_compass_extension"
  ],
  "consequent": [
   "      register_compass_extension"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      elsif asset_pipeline?"
  ],
  "consequent": [
   "    elsif asset_pipeline?"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    private    def configure_sass      ::Sass.load_paths << File.join(gem_path, 'vendor', 'assets', 'stylesheets')      # bootstrap requires minimum precision of 10, see https://github.com/thomas-mcdonald/bootstrap-sass/issues/409",
   "      ::Sass::Script::Number.precision = [10, ::Sass::Script::Number.precision].max"
  ],
  "consequent": [
   "    if rails?      require 'sass-rails'      register_rails_engine"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    def gem_path      @gem_path ||= File.expand_path File.join('..'), File.dirname(__FILE__)"
  ],
  "consequent": [
   "    unless rails? || compass?      raise Bootstrap::FrameworkNotFound,            'bootstrap-sass requires either Rails > 3.1 or Compass, neither of which are loaded'"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    def register_compass_extension      styles    = File.${0:ident} ${1:ident}, '${2:tstring_content}', '${3:tstring_content}', '${4:tstring_content}'"
  ],
  "consequent": [
   "    bs_stylesheets = File.${0:ident}(${1:ident}, '${2:tstring_content}', '${3:tstring_content}', '${4:tstring_content}')    ::Sass.load_paths << bs_stylesheets    if ::Sass::Script::Number.precision < 10      # see https://github.com/thomas-mcdonald/bootstrap-sass/issues/409",
   "      ::Sass::Script::Number.precision = 10"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    def register_rails_engine      require 'bootstrap-sass/engine'    end"
  ],
  "consequent": [
   "  private"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    def asset_pipeline?      defined?(::Sprockets)"
  ],
  "consequent": [
   "  def self.gem_path    @gem_path ||= File.expand_path File.join('..'), File.dirname(__FILE__)"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    def compass?      defined?(::Compass)"
  ],
  "consequent": [
   "  def self.asset_pipeline?    defined?(::Sprockets)"
  ]
 },
 {
  "sha": "ab024bc5ccd944c6e176e68a0f318f2961c9f006",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-10 13:12:57",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    def rails?"
  ],
  "consequent": [
   "  def self.compass?    defined?(::Compass)  end  def self.rails?"
  ]
 },
 {
  "sha": "4dfe097817e3f209732153de0df299b1f572d8b1",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-09 07:42:39",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    @gem_path ||= File.${0:ident} File.join('${1:tstring_content}'), File.dirname(__FILE__)"
  ],
  "consequent": [
   "    @gem_path ||= File.${0:ident} File.join('${1:tstring_content}', '${1:tstring_content}'), File.dirname(__FILE__)"
  ]
 },
 {
  "sha": "668b623d218789e4adefec3951a1445aec37ca83",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-09 07:37:49",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    ${0:ident} = File.join(gem_path, '${1:tstring_content}', '${2:tstring_content}', '${3:tstring_content}')"
  ],
  "consequent": [
   "    ${0:ident} = File.expand_path(File.join('..', '${1:tstring_content}', '${2:tstring_content}', '${3:tstring_content}'))"
  ]
 },
 {
  "sha": "668b623d218789e4adefec3951a1445aec37ca83",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-09 07:37:49",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    ${0:ident}    = File.${1:ident} gem_path, '${2:tstring_content}', '${3:tstring_content}', '${4:tstring_content}'"
  ],
  "consequent": [
   "    base = File.${1:ident}(File.dirname(__FILE__), '..')    ${0:ident} = File.${1:ident}(base, '${2:tstring_content}', '${3:tstring_content}', '${4:tstring_content}')"
  ]
 },
 {
  "sha": "668b623d218789e4adefec3951a1445aec37ca83",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-09 07:37:49",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    ${0:ident} = File.${1:ident} gem_path, '${0:tstring_content}'"
  ],
  "consequent": [
   "    ${0:ident} = File.${1:ident}(base, '${0:tstring_content}')    ::Compass::Frameworks.register('bootstrap', :path => base, :stylesheets_directory => styles, :templates_directory => ${0:ident})"
  ]
 },
 {
  "sha": "34d538dc33b302a02e86ccec3e0a93fbf41f0bfa",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-08 14:20:35",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} = ${1:ident} ${0:ident}.gsub(/.*when (.*?) {/, '${2:tstring_content}').gsub(/${3:tstring_content}/, '${4:tstring_content}').gsub(/${5:tstring_content}/, '${6:tstring_content}')"
  ],
  "consequent": [
   "        ${0:ident} = ${1:ident} ${0:ident}.gsub(/.*when \\((.*?)\\) {/, '${2:tstring_content}').gsub(/${3:tstring_content}/, '${4:tstring_content}').gsub(/${5:tstring_content}/, '${6:tstring_content}')"
  ]
 },
 {
  "sha": "34d538dc33b302a02e86ccec3e0a93fbf41f0bfa",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-08 14:20:35",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} ||= \"#{get_selector(${1:ident}).gsub(/&/, selector_for_pos(${2:ident}, ${3:ident}.${4:ident}))}\""
  ],
  "consequent": [
   "        ${0:ident} ||= \"#{get_selector(${1:ident}).sub(/&$/, '')}#{selector_for_pos(${2:ident}, ${3:ident}.${4:ident})}\""
  ]
 },
 {
  "sha": "34d538dc33b302a02e86ccec3e0a93fbf41f0bfa",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-08 14:20:35",
  "file_path": "tasks/converter/less_conversion.rb",
  "condition": [
   "        ${0:ident} \"${1:tstring_content}#{get_selector(${2:ident})}${3:tstring_content}#{${4:ident}}\".tr(\"\\n\", ' ').squeeze(' '), indent_width(${2:ident})"
  ],
  "consequent": [
   "        ${0:ident} \"${1:tstring_content}#{get_selector(${2:ident})}${3:tstring_content}#{${4:ident}}\", indent_width(${2:ident})"
  ]
 },
 {
  "sha": "a8518604b982b581b1a6ca76f8e67e10ca68acca",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-11-01 01:46:07",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "        FileUtils.mkdir_p(\"tmp/#{File.dirname(file)}\")        File.open(\"tmp/#{file}.css\", 'w') { |f|          f.write ${0:ident}.render"
  ],
  "consequent": [
   "        ${0:ident}.render"
  ]
 },
 {
  "sha": "7b86d76b8d2927255ec4bfe33bc80f41012fec09",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-07 00:12:17",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "      @bootstrap_font_files ||= get_paths_by_type('${0:tstring_content}', /${1:tstring_content}/)"
  ],
  "consequent": [
   "      @bootstrap_font_files ||= begin        files = get_json \"#{@git_data_api_host}/#@repo/git/trees/#{get_tree_sha('${0:tstring_content}')}\"        files['tree'].select { |f| f['type'] == 'blob' && f['path'] =~ /${1:tstring_content}/ }.map { |f| f['path'] }      end"
  ]
 },
 {
  "sha": "7b86d76b8d2927255ec4bfe33bc80f41012fec09",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-07 00:12:17",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "      @bootstrap_less_files ||= get_paths_by_type('${0:tstring_content}', /${1:tstring_content}/)"
  ],
  "consequent": [
   "      @bootstrap_less_files ||= begin        files = get_json \"#{@git_data_api_host}/#@repo/git/trees/#{get_tree_sha('${0:tstring_content}')}\"        files['tree'].select { |f| f['type'] == 'blob' && f['path'] =~ /${1:tstring_content}/ }.map { |f| f['path'] }      end"
  ]
 },
 {
  "sha": "7b86d76b8d2927255ec4bfe33bc80f41012fec09",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-07 00:12:17",
  "file_path": "tasks/converter/network.rb",
  "condition": [
   "        ${0:ident} = get_paths_by_type '${1:tstring_content}', /${2:tstring_content}/"
  ],
  "consequent": [
   "        ${0:ident} = get_json \"#{@git_data_api_host}/#@repo/git/trees/#{get_tree_sha('${1:tstring_content}')}\"        ${0:ident} = ${0:ident}['tree'].select { |f| f['type'] == 'blob' && f['path'] =~ /${2:tstring_content}/ }.map { |f| f['path'] }"
  ]
 },
 {
  "sha": "957f11b85df7274f5ff1658fdf100163eadc3d82",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-07 00:06:04",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def save_file(path, ${0:ident}, mode='w')    File.open(path, mode) { |file| file.write(${0:ident}) }"
  ],
  "consequent": [
   "  def process_font_assets    log_status \"Processing fonts...\"    files = read_files('fonts', bootstrap_font_files)    save_at = @save_at[:fonts]    files.each do |name, ${0:ident}|      save_file \"#{save_at}/#{name}\", ${0:ident}"
  ]
 },
 {
  "sha": "1c95e926a11269bd28e8ba1abb08db656eee5599",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-09-29 07:05:08",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      replace_properties(${0:ident}) { |${1:ident}| ${1:ident}.${2:ident}.empty? ? ${1:ident} : \"${3:tstring_content}#{${4:ident}}${5:tstring_content}#{${1:ident}.${2:ident}}${6:tstring_content}\" }"
  ],
  "consequent": [
   "      replace_properties(${0:ident}) { |${1:ident}| \"${3:tstring_content}#{${4:ident}}${5:tstring_content}#{${1:ident}.${2:ident}}${6:tstring_content}\" }"
  ]
 },
 {
  "sha": "1c95e926a11269bd28e8ba1abb08db656eee5599",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-09-29 07:05:08",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      replace_rules(${0:ident}, /.*&[ ,]/) { |${1:ident}| ${2:ident} ${1:ident}, /${3:tstring_content}/, \"${4:tstring_content}#{${5:ident}}${6:tstring_content}\" }"
  ],
  "consequent": [
   "      replace_rules(${0:ident}, /.*[^\\s ]&/) { |${1:ident}| ${2:ident} ${1:ident}, /${3:tstring_content}/, \"${4:tstring_content}#{${5:ident}}${6:tstring_content}\" }"
  ]
 },
 {
  "sha": "6fa811399d9186e42a49814e177e11b8cec53028",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-27 04:33:04",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    unless ${0:ident} || compass?"
  ],
  "consequent": [
   "    if !(${0:ident} || compass?)"
  ]
 },
 {
  "sha": "6fa811399d9186e42a49814e177e11b8cec53028",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-27 04:33:04",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    bs_stylesheets = File.expand_path(File.join('${0:tstring_content}', '${1:tstring_content}', '${2:tstring_content}', '${3:tstring_content}'))"
  ],
  "consequent": [
   "    ${3:ident} = File.expand_path(File.join(\"${0:tstring_content}\", '${1:tstring_content}', '${2:tstring_content}', '${3:tstring_content}'))"
  ]
 },
 {
  "sha": "6fa811399d9186e42a49814e177e11b8cec53028",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-27 04:33:04",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "bs_stylesheets"
  ],
  "consequent": [
   "stylesheets"
  ]
 },
 {
  "sha": "0411a9ea076dda703c22894bd21f484c12e0ba85",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-17 05:00:44",
  "file_path": "templates/project/manifest.rb",
  "condition": [
   "Dir.glob File.expand_path(\"#{${0:ident}}/*.js\", File.dirname(__FILE__)) do |path|  ${1:ident} = File.basename(path)  ${2:ident} \"#{${0:ident}}${3:tstring_content}#{${1:ident}}\", to: \"${4:tstring_content}#{${1:ident}}\""
  ],
  "consequent": [
   "%w(affix alert button carousel collapse dropdown modal popover scrollspy tab tooltip transition).each do |${1:ident}|  ${2:ident} \"#{${0:ident}}${3:tstring_content}#{${1:ident}}.js\", to: \"${4:tstring_content}#{${1:ident}}.js\""
  ]
 },
 {
  "sha": "57dce4c74d7ea7be2b526b27c0ff55aff374ff9d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-17 04:24:42",
  "file_path": "templates/project/manifest.rb",
  "condition": [
   "# SCSS:",
   "stylesheet '_variables.scss.erb', to: '_variables.scss', erb: true"
  ],
  "consequent": [
   "#",
   "# Other Bootstrap assets",
   "basedir = '../../vendor/assets'"
  ]
 },
 {
  "sha": "57dce4c74d7ea7be2b526b27c0ff55aff374ff9d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-10-17 04:24:42",
  "file_path": "templates/project/manifest.rb",
  "condition": [
   "  ${0:ident} \"#{bs_javascripts}/#{${1:ident}}${2:tstring_content}\", to: \"${3:tstring_content}#{${1:ident}}${2:tstring_content}\""
  ],
  "consequent": [
   "  ${0:ident} \"#{basedir}/javascripts/bootstrap/#{${1:ident}}${2:tstring_content}\", :to => \"${3:tstring_content}#{${1:ident}}${2:tstring_content}\""
  ]
 },
 {
  "sha": "cca6f5e121b924dc76cc923b8a82948ab8d75f70",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-09-11 01:01:56",
  "file_path": "test/pages_test.rb",
  "condition": [
   "    ${0:ident} ${1:int}, ${2:ident}.status_code"
  ],
  "consequent": [
   "    ${0:ident} ${2:ident}.status_code, ${1:int}"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @shared_mixins = get_mixin_names(${0:ident}, silent: true)"
  ],
  "consequent": [
   "    @mixins = get_mixin_names(${0:ident}, silent: true)"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        @shared_mixins += get_mixin_names(unindent(unwrap_rule_block(${0:ident})), silent: true).${1:ident} { |${2:ident}| \"#{${3:ident}}${4:tstring_content}#{${2:ident}}\" }"
  ],
  "consequent": [
   "        @mixins += get_mixin_names(unwrap_rule_block(${0:ident}), silent: true).${1:ident} { |${2:ident}| \"#{${3:ident}}${4:tstring_content}#{${2:ident}}\" }"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @shared_mixins.sort!"
  ],
  "consequent": [
   "    @mixins.sort!"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = get_css_selectors(${1:ident}).join(\"${2:tstring_content}\" * ${3:int}).scan(/^\\.([\\w-]+)\\(#{LESS_MIXIN_DEF_ARGS_RE}${4:tstring_content}/).map(&:${5:ident}).${6:ident}.sort"
  ],
  "consequent": [
   "    ${0:ident} = get_css_selectors(${1:ident}).join(\"${2:tstring_content}\" * ${3:int}).scan(/\\.([\\w-]+)\\(#{LESS_MIXIN_DEF_ARGS_RE}${4:tstring_content}/).map(&:${5:ident}).${6:ident}.sort"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = (@shared_mixins + get_mixin_names(${1:ident})).uniq"
  ],
  "consequent": [
   "    ${0:ident} = (@mixins + get_mixin_names(${1:ident})).uniq"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def get_css_selectors(${0:ident}, opts = {})"
  ],
  "consequent": [
   "  def get_css_selectors(${0:ident})"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while ${0:ident}.scan_next(RULE_OPEN_BRACE_RE)"
  ],
  "consequent": [
   "    while (brace = ${0:ident}.scan_next(RULE_OPEN_BRACE_RE))"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      brace_pos = ${0:ident}.pos"
  ],
  "consequent": [
   "      pos     = ${0:ident}.pos"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}   = css_def_pos(${1:ident}, brace_pos+${2:int}, -${2:int})"
  ],
  "consequent": [
   "      ${0:ident} = css_def_pos(${1:ident}, pos, -${2:int})"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = ${1:ident}[${2:ident}.${3:ident}..brace_pos - ${4:int}].dup"
  ],
  "consequent": [
   "      ${0:ident}     = ${1:ident}[${2:ident}.${3:ident}..pos - ${4:int}]"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}.strip! if opts[:${1:ident}]      ${2:ident} << ${0:ident}"
  ],
  "consequent": [
   "      ${2:ident} << ${0:ident}.dup.${1:ident}"
  ]
 },
 {
  "sha": "91d8dc386fa12713f80a655484fbbf43438be95d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 04:12:25",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      sel.dup.strip      ${0:ident}.${1:ident}    = close_brace_pos(${2:ident}, brace_pos, ${3:int}) + ${3:int}"
  ],
  "consequent": [
   "      ${0:ident}.${1:ident}    = close_brace_pos(${2:ident}, ${1:ident} - ${3:int}) + ${3:int}"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  ${0:ident} :@logger, :${1:ident}, :${2:ident}, :${3:ident}, :log_file_info, :${4:ident}, :log_http_get_file, :log_http_get_files, :silence_log"
  ],
  "consequent": [
   "  ${0:ident} :@logger, :${1:ident}, :log_downloading, :${2:ident}, :${3:ident}, :${4:ident}, :log_http_get, :silence_log"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "log_http_get_files"
  ],
  "consequent": [
   "log_downloading"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "log_http_get_files"
  ],
  "consequent": [
   "log_downloading"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "log_http_get_file"
  ],
  "consequent": [
   "log_http_get"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "log_http_get_file"
  ],
  "consequent": [
   "log_http_get"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    log_status \"  Reading shared mixins from mixins.less\"    @mixins = get_mixin_names(${0:ident}, silent: true)"
  ],
  "consequent": [
   "    @mixins = get_mixin_names(${0:ident})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        @mixins += get_mixin_names(unwrap_rule_block(${0:ident}), silent: true).${1:ident} { |${2:ident}| \"#{${3:ident}}${4:tstring_content}#{${2:ident}}\" }"
  ],
  "consequent": [
   "        @mixins += get_mixin_names(unwrap_rule_block ${0:ident}).${1:ident} { |${2:ident}| \"#{${3:ident}}${4:tstring_content}#{${2:ident}}\" }"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def get_mixin_names(${0:ident}, opts = {})"
  ],
  "consequent": [
   "  def get_mixin_names(${0:ident})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    names = get_css_selectors(${0:ident}).join(\"${1:tstring_content}\" * ${2:int}).scan(/\\.([\\w-]+)\\(#{LESS_MIXIN_DEF_ARGS_RE}\\)[ ]*\\{/).map(&:${3:ident}).uniq.sort    log_file_info \"mixin defs: #{names * ', '}\" unless opts[:silent] || names.empty?    names"
  ],
  "consequent": [
   "    mixins      = []    get_css_selectors(${0:ident}).join(\"${1:tstring_content}\" * ${2:int}).scan(/\\.([\\w-]+)\\(.*\\)\\s?\\{?/) do |mixin|      mixins << mixin.${3:ident}    end    mixins"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = (@mixins + get_mixin_names(${1:ident})).uniq"
  ],
  "consequent": [
   "    ${0:ident} = @mixins + get_mixin_names(${1:ident})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def replace_mixins(${0:ident}, mixin_names)"
  ],
  "consequent": [
   "  def replace_mixins(${0:ident}, mixins = @mixins + get_mixin_names(${0:ident}))"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}       = CharStringScanner.new(${1:ident})"
  ],
  "consequent": [
   "    ${0:ident}       = StringScanner.new(${1:ident})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = ${1:ident}.scan_next(${2:ident}))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, ${2:ident}))"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}         = CharStringScanner.new(${1:ident})"
  ],
  "consequent": [
   "    ${0:ident}         = StringScanner.new(${1:ident})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = ${1:ident}.scan_next(RULE_OPEN_BRACE_RE))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, RULE_OPEN_BRACE_RE))"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}.${1:ident}    = close_brace_pos(${2:ident}, ${1:ident} - ${3:int}) + ${3:int}"
  ],
  "consequent": [
   "      ${0:ident}.${1:ident}    = str_to_byte_pos(${2:ident}, close_brace_pos(${2:ident}, ${1:ident} - ${3:int}) + ${3:int})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}        = CharStringScanner.new(${1:ident})"
  ],
  "consequent": [
   "    ${0:ident}        = StringScanner.new(${1:ident})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = ${1:ident}.scan_next(RULE_OPEN_BRACE_RE))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, RULE_OPEN_BRACE_RE))"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}.${1:ident}    = close_brace_pos(${2:ident}, ${0:ident}.${1:ident} - ${3:int}) + ${3:int}"
  ],
  "consequent": [
   "      ${0:ident}.${1:ident}    = str_to_byte_pos(${0:ident}.string, close_brace_pos(${2:ident}, ${0:ident}.${1:ident} - ${3:int}) + ${3:int})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = CharStringScanner.new(${1:ident})"
  ],
  "consequent": [
   "    ${0:ident} = StringScanner.new(${1:ident})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = ${1:ident}.scan_next(/#{SELECTOR_RE}#{RULE_OPEN_BRACE_RE}${2:tstring_content}#{RULE_CLOSE_BRACE_RE}/m))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, /#{SELECTOR_RE}#{RULE_OPEN_BRACE_RE}${2:tstring_content}#{RULE_CLOSE_BRACE_RE}/m))"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = ${1:ident}.pos"
  ],
  "consequent": [
   "      ${0:ident} = byte_to_str_pos(${1:ident}.string, ${1:ident}.pos)"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}     = CharStringScanner.new(${1:ident}[${2:ident}..-${3:int}])"
  ],
  "consequent": [
   "    ${0:ident}     = StringScanner.new(${1:ident}[${2:ident}..-${3:int}])"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = ${1:ident}.scan_next(BRACE_RE))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, BRACE_RE))"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}     = CharStringScanner.new(${1:ident}[${2:int}..${3:ident}].${4:ident})"
  ],
  "consequent": [
   "    ${0:ident}     = StringScanner.new(${1:ident}[${2:int}..${3:ident}].${4:ident})"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = ${1:ident}.scan_next(BRACE_RE_REVERSE))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, BRACE_RE_REVERSE))"
  ]
 },
 {
  "sha": "376b398459b5886418e2c57c8aab8e58eee92ac8",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 03:09:56",
  "file_path": "tasks/converter.rb",
  "condition": [
   "log_http_get_file"
  ],
  "consequent": [
   "log_http_get"
  ]
 },
 {
  "sha": "f3cce170a404286ecbf16b55a123cea2625d6c1d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 01:30:06",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    read_shared_mixins! ${0:ident}['${1:tstring_content}']"
  ],
  "consequent": [
   "    mixins_file = ${0:ident}['${1:tstring_content}']    @mixins = get_mixin_names(mixins_file)    NESTED_MIXINS.each do |selector, prefix|      replace_rules(mixins_file, selector) { |rule|        @mixins += get_mixin_names(unwrap_rule_block rule).map { |name| \"#{prefix}-#{name}\" }        rule      }    end"
  ]
 },
 {
  "sha": "f3cce170a404286ecbf16b55a123cea2625d6c1d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 01:30:06",
  "file_path": "tasks/converter.rb",
  "condition": [
   "replace_file_imports"
  ],
  "consequent": [
   "replace_mixins"
  ]
 },
 {
  "sha": "f3cce170a404286ecbf16b55a123cea2625d6c1d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 01:30:06",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = ${0:ident}.dup    # skip header comment",
   "    ${0:ident} =~ %r(\\A/\\*(.*?)\\*/)m    from = $~ ? $~.to_s.length : 0    ${0:ident}[from..-1] = ${0:ident}[from..-1].        gsub(/${1:tstring_content}/, '${2:tstring_content}')."
  ],
  "consequent": [
   "    ${0:ident} = ${0:ident}.gsub(/${1:tstring_content}/, '${2:tstring_content}')"
  ]
 },
 {
  "sha": "f3cce170a404286ecbf16b55a123cea2625d6c1d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 01:30:06",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        gsub(/${0:tstring_content}/, '${1:tstring_content}')"
  ],
  "consequent": [
   "    less.gsub! /${0:tstring_content}/, '${1:tstring_content}'"
  ]
 },
 {
  "sha": "f3cce170a404286ecbf16b55a123cea2625d6c1d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 01:30:06",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} \" save to: #{@env[:${1:ident}].to_json}\""
  ],
  "consequent": [
   "      ${0:ident} \" save to: SCSS @ #{@env[:${1:ident}][:scss]} JS @ #{@env[:${1:ident}][:js]}\""
  ]
 },
 {
  "sha": "6dc5af03e632689cfc4624d239653fec06c0849c",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-21 00:54:23",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = apply_mixin_parent_selector(${0:ident}, '(?<!&)\\.(visible|hidden)')"
  ],
  "consequent": [
   "        ${0:ident} = apply_mixin_parent_selector(${0:ident}, '(?:[^&]|^)\\.(visible|hidden)')"
  ]
 },
 {
  "sha": "ed4b3776832c1225dc68d8fef24f67084b19d5fb",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 23:07:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident}[${1:ident}] = File.read(\"#{${2:ident}}${3:tstring_content}#{${1:ident}}\", mode: 'rb') || ''"
  ],
  "consequent": [
   "        ${0:ident}[${1:ident}] = File.read(\"#{${2:ident}}${3:tstring_content}#{${1:ident}}\") || ''"
  ]
 },
 {
  "sha": "ed4b3776832c1225dc68d8fef24f67084b19d5fb",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 23:07:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      File.open(\"#{${0:ident}}${1:tstring_content}#{${2:ident}}\", 'wb') { |${3:ident}| ${3:ident}.${4:ident} ${5:ident}}"
  ],
  "consequent": [
   "      File.open(\"#{${0:ident}}${1:tstring_content}#{${2:ident}}\", 'w') { |${3:ident}| ${3:ident}.${4:ident} ${5:ident}}"
  ]
 },
 {
  "sha": "ed4b3776832c1225dc68d8fef24f67084b19d5fb",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 23:07:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      File.read(${0:ident}, mode: 'rb')"
  ],
  "consequent": [
   "      File.read(${0:ident})"
  ]
 },
 {
  "sha": "ed4b3776832c1225dc68d8fef24f67084b19d5fb",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 23:07:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      File.open(${0:ident}, 'wb') { |${1:ident}| ${1:ident}.${2:ident} ${3:ident} }"
  ],
  "consequent": [
   "      File.open(${0:ident}, 'w') { |${1:ident}| ${1:ident}.${2:ident} ${3:ident} }"
  ]
 },
 {
  "sha": "263bcc32f2df7cd11fbfbe1a05b1c2aafd7eaf19",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:38:26",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = ${0:ident}.gsub(/(?!@mixin|@media|@page|@keyframes|@font-face|@-\\w)@/, '${1:tstring_content}')"
  ],
  "consequent": [
   "    ${0:ident} = ${0:ident}.gsub(/(?!@media|@page|@keyframes|@font-face|@-\\w)@/, '${1:tstring_content}')"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = apply_mixin_parent_selector(${0:ident}, '&\\.(visible|hidden)')"
  ],
  "consequent": [
   "        ${0:ident} = apply_mixin_parent_selector(${0:ident}, '\\.(visible|hidden)')"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    cmd = \"${0:tstring_content}#@repo_url${1:tstring_content}#@branch${2:tstring_content}\""
  ],
  "consequent": [
   "    @branch_sha ||= %x[${0:tstring_content}#@repo_url${1:tstring_content}#@branch${2:tstring_content}].chomp"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    file = replace_rules(file, \"${0:tstring_content}#{${1:ident}}\", comments: true) { |${2:ident}, ${3:ident}, ${4:ident}|"
  ],
  "consequent": [
   "    ${4:ident}     = replace_rules(${4:ident}, \"${0:tstring_content}#{${1:ident}}\", comments: true) { |${2:ident}, ${3:ident}|"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "file"
  ],
  "consequent": [
   "css"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} ${1:ident}, '\\s*' + ${2:ident}, comments: false do |${3:ident}, rule_pos, css|      body = unwrap_rule_block(${3:ident}.dup).strip      next ${3:ident} unless body =~ /^@include \\w+/m || body =~ /^@media/ && body =~ /\\{\\s*@include/      ${3:ident} =~ /${4:tstring_content}#{COMMENT_RE}${5:tstring_content}#{SELECTOR_RE})\\{/"
  ],
  "consequent": [
   "    ${0:ident} ${1:ident}, \"(\\s*)#{${2:ident}}\" do |${3:ident}|      next ${3:ident} unless ${3:ident} =~ /{\\s*@include.*?;\\s*}/m      ${3:ident} =~ /\\A\\s+/ # keep indentation",
   "      # unwrap",
   "      ${3:ident} = $~.to_s + ${3:ident}.sub(/${4:tstring_content}#{COMMENT_RE}${5:tstring_content}#{SELECTOR_RE})\\{(.*)\\}/m, '\\3')"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      # take one up selector chain if this is an &. selector",
   "      if ${0:ident}.start_with?('&')        parent_sel = selector_for_pos(css, rule_pos.begin)        ${0:ident}        = parent_sel + ${0:ident}[1..-1]      end      # unwrap, and replace @include",
   "      unindent unwrap_rule_block(${1:ident}).gsub(/${2:tstring_content}/) {        \"#{${3:ident}}#{$1}${4:tstring_content}#{${0:ident}}${5:tstring_content}#{'${6:tstring_content}' if $2 && !$2.${7:ident}}#{$2}${8:tstring_content}\"      }"
  ],
  "consequent": [
   "      # inject param",
   "      ${1:ident}.gsub(/${2:tstring_content}/) { \"#{${3:ident}}#{$1}${4:tstring_content}#{${0:ident}}${5:tstring_content}#{'${6:tstring_content}' if $2 && !$2.${7:ident}}#{$2}${8:tstring_content}\"} .strip"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}[(${0:ident} =~ RULE_OPEN_BRACE_RE) + 1..-1].sub(/\\n?}\\s*\\z/m, '')"
  ],
  "consequent": [
   "    replace_in_selector(${0:ident}, /.*/, '').sub(/}\\s*\\z/m, '')"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def replace_rules(${0:ident}, ${1:ident} = SELECTOR_RE, ${2:ident} = {}, &block)"
  ],
  "consequent": [
   "  def replace_rules(${0:ident}, ${1:ident} = SELECTOR_RE, ${2:ident} = {})"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      positions << (${0:ident} - ${1:ident}.${2:ident}..close_brace_pos(${3:ident}, ${0:ident} - ${4:int}))"
  ],
  "consequent": [
   "      rule_pos       = (${0:ident} - ${1:ident}.${2:ident}..close_brace_pos(${3:ident}, ${0:ident} - ${4:int}))      ${3:ident}[rule_pos] = yield(${3:ident}[rule_pos], rule_pos)"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}    = ${1:ident}.${2:ident} + offset"
  ],
  "consequent": [
   "      ${0:ident} = ${1:ident}.${2:ident} + offset"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}      = ${1:ident}.${2:ident} + offset"
  ],
  "consequent": [
   "      ${0:ident} = ${1:ident}.${2:ident} + offset"
  ]
 },
 {
  "sha": "e372820a1850dc690190aa24edd273e09e9fe907",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-20 22:07:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    def log_http_get(${0:ident}, cached = false)"
  ],
  "consequent": [
   "    def log_http_get(${0:ident})      puts dark cyan \"  GET #{${0:ident}}...\""
  ]
 },
 {
  "sha": "dc0448326d7bc5c525d448e4995bf05336bcdf7b",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 09:18:52",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        \"#{${0:ident}.${1:ident}}${2:tstring_content}#{${3:ident}}#{${0:ident}.${4:ident}}\".gsub(/${5:tstring_content}/, \"${6:tstring_content}\").sub(/;\\)$/, ')')"
  ],
  "consequent": [
   "        \"#{${0:ident}.${1:ident}}${2:tstring_content}#{${3:ident}}#{${0:ident}.${4:ident}}\".gsub(/${5:tstring_content}/, \"${6:tstring_content}\")"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    # read common mixin definitions from mixins.less",
   "    mixins_file = ${0:ident}['${1:tstring_content}']    @mixins = get_mixin_names(mixins_file)"
  ],
  "consequent": [
   "    @mixins = get_mixin_names ${0:ident}['${1:tstring_content}']"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        NESTED_MIXINS.each do |selector, prefix|          ${0:ident} = flatten_mixins(${0:ident}, selector, prefix)        end"
  ],
  "consequent": [
   "        ${0:ident} = flatten_mixins(${0:ident}, '#gradient', 'gradient')"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    get_css_selectors(${0:ident}).join(\"\\n\" * 2).scan(/\\.([\\w-]+)\\(.*\\)\\s?\\{?/) do |${1:ident}|"
  ],
  "consequent": [
   "    ${0:ident}.scan(/\\.([\\w-]+)\\(.*\\)\\s?{?/) do |${1:ident}|"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    new_file = ${0:ident}.gsub(${1:ident}, ${2:ident}, &${3:ident})"
  ],
  "consequent": [
   "    ${0:ident}.gsub(${1:ident}, ${2:ident}, &${3:ident})"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def replace_mixins(${0:ident}, mixins = @mixins + get_mixin_names(${0:ident}))"
  ],
  "consequent": [
   "  def replace_mixins(${0:ident})"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      if ${0:ident} && mixins.include?(\"#{scope}#{${0:ident}.${1:ident}}\")"
  ],
  "consequent": [
   "      if ${0:ident} && @mixins.include?(${0:ident}.${1:ident})"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = byte_to_str_pos ${1:ident}, ${2:ident}.${0:ident}      ${3:ident}       = (${0:ident} - ${4:ident}.${5:ident}..close_brace_pos(${1:ident}, ${0:ident} - ${6:int}))"
  ],
  "consequent": [
   "      ${3:ident}       = (${2:ident}.${0:ident} - ${4:ident}.${5:ident}..close_brace_pos(${1:ident}, ${2:ident}.${0:ident} - ${6:int}))"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = scan_next(${1:ident}, RULE_OPEN_BRACE_RE))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, /#{RULE_OPEN_BRACE_RE}/))"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}.${1:ident}    = str_to_byte_pos(${0:ident}.string, close_brace_pos(${2:ident}, ${0:ident}.${1:ident} - ${3:int}) + ${3:int})"
  ],
  "consequent": [
   "      ${0:ident}.${1:ident}    = close_brace_pos(${2:ident}, ${0:ident}.${1:ident} - ${3:int}) + ${3:int}"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = pos"
  ],
  "consequent": [
   "      ${0:ident} = s.pos"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "          ${0:ident} = s_pos"
  ],
  "consequent": [
   "          ${0:ident} = s.pos"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "          ${0:ident} << (${1:ident} .. s_pos - ${2:ident}.${3:ident} - ${4:int})"
  ],
  "consequent": [
   "          ${0:ident} << (${1:ident} .. s.${0:ident} - ${2:ident}.${3:ident} - ${4:int})"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}[css_def_pos(${0:ident}, ${1:ident}, ${2:ident})].dup.strip"
  ],
  "consequent": [
   "    ${0:ident}[css_def_pos(${0:ident}, ${1:ident}, ${2:ident})].strip"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    return unless ${0:ident}.scan_until(${1:ident})"
  ],
  "consequent": [
   "    return unless ${0:ident}.skip_until(${1:ident})    ${0:ident}.pos -= ${0:ident}.matched_size    ${0:ident}.scan ${1:ident}"
  ]
 },
 {
  "sha": "089174049c83b698b92f483aef146d0fd54efb9f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 06:00:27",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      s = \" #{'${0:tstring_content}' if ${1:ident}}${2:tstring_content}#{${3:ident}.${4:ident}}${5:tstring_content}#{${6:ident}} #{${3:ident} * ' '}${7:tstring_content}\""
  ],
  "consequent": [
   "      puts dark cyan \" #{'${0:tstring_content}' if ${1:ident}}${2:tstring_content}#{${3:ident}.${4:ident}}${5:tstring_content}#{${6:ident}} #{${3:ident} * ' '}${7:tstring_content}\""
  ]
 },
 {
  "sha": "a936bff77e259fa47c97624964e2c4ddb68f0103",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 03:13:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @cache_path = 'tmp/converter-cache'    @logger     = Logger.new(repo: @repo_url, branch: @branch, branch_sha: @branch_sha, save_at: @save_at, cache_path: @cache_path)"
  ],
  "consequent": [
   "    @logger     = Logger.new(repo: @repo_url, branch: @branch, branch_sha: @branch_sha, save_at: @save_at)"
  ]
 },
 {
  "sha": "a936bff77e259fa47c97624964e2c4ddb68f0103",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 03:13:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "          ${0:ident} = open(\"#{${1:ident}}${2:tstring_content}#{${3:ident}}\").read"
  ],
  "consequent": [
   "        ${0:ident} = open(\"#{${1:ident}}${2:tstring_content}#{${3:ident}}\").read        Thread.exclusive {"
  ]
 },
 {
  "sha": "a936bff77e259fa47c97624964e2c4ddb68f0103",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 03:13:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      end.each(&:${0:ident})"
  ],
  "consequent": [
   "      }    end.each(&:${0:ident})"
  ]
 },
 {
  "sha": "a936bff77e259fa47c97624964e2c4ddb68f0103",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-19 03:13:13",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    def log_downloading(${0:ident}, ${1:ident}, cached = false)"
  ],
  "consequent": [
   "    def log_downloading(${0:ident}, ${1:ident})"
  ]
 },
 {
  "sha": "5bf533b803e92042c846dbf80faa4411951bb890",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-15 23:08:46",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      \"#{$1}${0:tstring_content}#{$2.tr('${1:tstring_content}', '${2:tstring_content}')}#{$3}\".sub(/,\\)/, ')')"
  ],
  "consequent": [
   "      \"#{$1}${0:tstring_content}#{$2.tr('${1:tstring_content}', '${2:tstring_content}')}#{$3}\""
  ]
 },
 {
  "sha": "280c3bc33e31f61e476d3cb2ea7b6c8045c9007a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-15 00:38:43",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  # .x { textarea& { ... }}",
   "  # to:",
   "  # .x { ... }",
   "  # textarea.x { ... }",
   "  def extract_nested_rule(${0:ident}, ${1:ident}, ${2:ident} = nil)"
  ],
  "consequent": [
   "  def extract_nested_rule(${0:ident}, ${1:ident}, ${2:ident} = ${1:ident})    log_transform ${1:ident}, ${2:ident}"
  ]
 },
 {
  "sha": "280c3bc33e31f61e476d3cb2ea7b6c8045c9007a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-15 00:38:43",
  "file_path": "tasks/converter.rb",
  "condition": [
   "                          ${0:ident}.${1:ident} { |${2:ident}, ${3:ident}| close_brace_pos(${4:ident}, ${3:ident}.begin, ${5:int}) + ${5:int} },"
  ],
  "consequent": [
   "                          ${0:ident}.${1:ident} { |${2:ident}, ${3:ident}| close_brace_pos(${4:ident}, ${4:ident} =~ RULE_OPEN_BRACE_RE) + ${5:int} },"
  ]
 },
 {
  "sha": "280c3bc33e31f61e476d3cb2ea7b6c8045c9007a",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-15 00:38:43",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = ${1:ident} - (${2:ident}[${3:int}..${1:ident}].${4:ident}.index('${5:tstring_content}') || ${1:ident}) + 1"
  ],
  "consequent": [
   "    ${0:ident} = ${1:ident} - ${2:ident}[${3:int}..${1:ident}].${4:ident}.index('${5:tstring_content}') + 1"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = extract_nested_rule(${0:ident}, 'button&', '${1:tstring_content}')"
  ],
  "consequent": [
   "        ${0:ident} = extract_nested_rule(${0:ident}, '\\s*button&', '${1:tstring_content}')"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = extract_nested_rule(${0:ident}, 'textarea&', '${1:tstring_content}')"
  ],
  "consequent": [
   "        ${0:ident} = extract_nested_rule(${0:ident}, '\\s*textarea&', '${1:tstring_content}')"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}.sub!(/(@mixin [\\w-]+)\\(([\\$\\w\\-,\\s]*)\\)/) { \"#{$1}(#{${1:ident}}#{', ' if $2 && !$2.empty?}#{$2})\" }"
  ],
  "consequent": [
   "      ${0:ident}.sub! /(@mixin [\\w-]+\\()/, \"\\\\1#{${1:ident}}\""
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}     = replace_rules(${0:ident}, \"\\s*#{${1:ident}}\", comments: true) { |${2:ident}, ${3:ident}|"
  ],
  "consequent": [
   "    ${0:ident}     = replace_rules(${0:ident}, ${1:ident}, comments: true) { |${2:ident}, ${3:ident}|"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "                          ${0:ident}.${1:ident} { |${2:ident}, ${3:ident}| close_brace_pos(${4:ident}, ${4:ident} =~ RULE_OPEN_BRACE_RE) + ${5:int} },"
  ],
  "consequent": [
   "                          ${0:ident}.${1:ident} { |${2:ident}, ${3:ident}| ${3:ident}.begin + ${4:ident}[${3:ident}.begin..-${5:int}].index('}') + ${5:int} },"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      # unwrap",
   "      ${0:ident} = $~.${1:ident} + ${0:ident}.sub(/${2:tstring_content}#{COMMENT_RE}${3:tstring_content}#{SELECTOR_RE}${4:tstring_content}/m, '${5:tstring_content}')      cmt, sel  = $1, $2.${6:ident}      # inject param",
   "      ${0:ident}.gsub(/(@include [\\w-]+)\\(([\\$\\w\\-,\\s]*)\\)/) { \"#{cmt}#{$1}('#{sel}${7:tstring_content}#{', ' if $2 && !$2.empty?}#{$2})\"} .${6:ident}"
  ],
  "consequent": [
   "      $~.${1:ident} + ${0:ident}.sub(/${2:tstring_content}#{COMMENT_RE}${3:tstring_content}#{SELECTOR_RE}${4:tstring_content}/m, '${5:tstring_content}').gsub(/(@include [\\w-]+\\()/, \"#{$1}\\\\1'#{$2.${6:ident}}${7:tstring_content}\").${6:ident}"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "close_brace_pos"
  ],
  "consequent": [
   "next_brace_pos"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "close_brace_pos"
  ],
  "consequent": [
   "next_brace_pos"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def close_brace_pos(${0:ident}, from, ${1:ident} = ${2:int})"
  ],
  "consequent": [
   "  def next_brace_pos(${0:ident}, brace_pos)    ${1:ident} = ${2:int}"
  ]
 },
 {
  "sha": "41d2c1d3e72b61eeb8e7051304256d4a573df3d2",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-14 08:42:45",
  "file_path": "tasks/converter.rb",
  "condition": [
   "from"
  ],
  "consequent": [
   "brace_pos"
  ]
 },
 {
  "sha": "04d52241cbceea9c3fa8464c9351554735e2f126",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-12 22:24:51",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      $~.${0:ident} + ${1:ident}.sub(/${2:tstring_content}#{COMMENT_RE}${3:tstring_content}#{SELECTOR_RE}${4:tstring_content}/m, '${5:tstring_content}').gsub(/${6:tstring_content}/, \"#{$1}${7:tstring_content}#{$2.${8:ident}}${9:tstring_content}\").${8:ident}"
  ],
  "consequent": [
   "      $~.${0:ident} + ${1:ident}.sub(/${2:tstring_content}#{COMMENT_RE}${3:tstring_content}#{SELECTOR_RE}${4:tstring_content}/m, '${5:tstring_content}').sub(/${6:tstring_content}/, \"#{$1}${7:tstring_content}#{$2.${8:ident}}${9:tstring_content}\").${8:ident}"
  ]
 },
 {
  "sha": "1685fb137e2b858a6387eb669d32dae104b58929",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-11 00:10:01",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}.${1:ident} /${2:tstring_content}#{Regexp.quote(${3:ident})}${4:tstring_content}#{SCSS_MIXIN_DEF_ARGS_RE}${5:tstring_content}/, '${6:tstring_content}'"
  ],
  "consequent": [
   "      ${0:ident}.${1:ident} /${2:tstring_content}#{Regexp.quote(${3:ident})}${4:tstring_content}#{SCSS_MIXIN_ARGS_RE}${5:tstring_content}/, '${6:tstring_content}'"
  ]
 },
 {
  "sha": "1685fb137e2b858a6387eb669d32dae104b58929",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-11 00:10:01",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      if ${0:ident}.${1:ident} /${2:tstring_content}#{Regexp.quote(${3:ident})}${4:tstring_content}/, '${5:tstring_content}'"
  ],
  "consequent": [
   "      ${0:ident}.${1:ident} /${2:tstring_content}#{Regexp.quote(${3:ident})}${4:tstring_content}/, '${5:tstring_content}'"
  ]
 },
 {
  "sha": "18ad4071ff0a2b82f78c1bd4ba0456aa5ac8ff24",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:43:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "replace_mixin_definitions"
  ],
  "consequent": [
   "replace_mixin_file"
  ]
 },
 {
  "sha": "18ad4071ff0a2b82f78c1bd4ba0456aa5ac8ff24",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:43:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "replace_mixin_definitions"
  ],
  "consequent": [
   "replace_mixin_file"
  ]
 },
 {
  "sha": "18ad4071ff0a2b82f78c1bd4ba0456aa5ac8ff24",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:43:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  # @import \"file.less\" to \"#{target_path}file;\"",
   "  def replace_file_imports(${0:ident}, target_path = 'bootstrap/')    log_transform target_path    ${0:ident}.${1:ident} %r(${2:tstring_content}),              %Q(@import \"#{target_path}\\\\1\";)"
  ],
  "consequent": [
   "  def replace_file_imports(${0:ident})    ${0:ident}.${1:ident}(/${2:tstring_content}/, '@import \"bootstrap/\\1\";');"
  ]
 },
 {
  "sha": "18ad4071ff0a2b82f78c1bd4ba0456aa5ac8ff24",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:43:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "replace_mixin_definitions"
  ],
  "consequent": [
   "replace_mixin_file"
  ]
 },
 {
  "sha": "70933f54ee30aba8f5707c6c54c6a6ea783a89eb",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:30:02",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    def log_downloading(${0:ident}, from)"
  ],
  "consequent": [
   "    def log_downloading(${0:ident})"
  ]
 },
 {
  "sha": "7ce1f3b4964e503858e964168f51793937472ca5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:22:14",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    files = read_files('${0:tstring_content}', ${1:ident})"
  ],
  "consequent": [
   "    read_files('${0:tstring_content}', ${1:ident}).each do |name, file|"
  ]
 },
 {
  "sha": "7ce1f3b4964e503858e964168f51793937472ca5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:22:14",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def get_mixin_names(file)"
  ],
  "consequent": [
   "  def get_mixins_name"
  ]
 },
 {
  "sha": "7ce1f3b4964e503858e964168f51793937472ca5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:22:14",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    file.scan(/${0:tstring_content}/) do |${1:ident}|"
  ],
  "consequent": [
   "    less_mixins = open(\"#{GIT_RAW}/#@repo/#@branch_sha/less/mixins.less\").read    less_mixins.scan(/${0:tstring_content}/) do |${1:ident}|"
  ]
 },
 {
  "sha": "7ce1f3b4964e503858e964168f51793937472ca5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 09:22:14",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    JSON.${0:ident} get_file(${1:ident})  end"
  ],
  "consequent": [
   "    JSON.${0:ident} open(${1:ident}).read"
  ]
 },
 {
  "sha": "2aff0448ca98c2983278038140f61463f550f5d7",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 08:36:20",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} ${1:ident} status"
  ],
  "consequent": [
   "      ${0:ident} ${1:ident} dark status"
  ]
 },
 {
  "sha": "afe8f8c23b8584b34a7bcd368a690aacd3cb38c1",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 07:44:05",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @save_at    = { js: 'vendor/assets/javascripts/bootstrap', scss: 'vendor/assets/stylesheets/bootstrap' }    @save_at.each { |_,v| FileUtils.mkdir_p(v) }    @logger     = Logger.new(repo: @repo_url, branch: @branch, branch_sha: @branch_sha, save_at: @save_at)"
  ],
  "consequent": [
   "    @logger     = Logger.new(repo: @repo_url, branch: @branch, branch_sha: @branch_sha)"
  ]
 },
 {
  "sha": "afe8f8c23b8584b34a7bcd368a690aacd3cb38c1",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 07:44:05",
  "file_path": "tasks/converter.rb",
  "condition": [
   "sub"
  ],
  "consequent": [
   "gsub"
  ]
 },
 {
  "sha": "f20d038519feca6507686c74058897f8cadb34f6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 07:21:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  ${0:ident} :@logger, :${1:ident}, :log_downloading, :log_processing, :${2:ident}, :log_processed"
  ],
  "consequent": [
   "  ${0:ident} :@logger, :${1:ident}, :log_file_status, :${2:ident}"
  ]
 },
 {
  "sha": "f20d038519feca6507686c74058897f8cadb34f6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 07:21:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      log_processing name"
  ],
  "consequent": [
   "      log_file_status name, :processing"
  ]
 },
 {
  "sha": "f20d038519feca6507686c74058897f8cadb34f6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 07:21:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      # log_processing name",
   "      save_file(\"#{save_at}/#{${0:ident}}\", ${1:ident})"
  ],
  "consequent": [
   "      log_file_status ${0:ident}, :processing      save_file(\"vendor/assets/javascripts/bootstrap/#{${0:ident}}\", ${1:ident})"
  ]
 },
 {
  "sha": "f20d038519feca6507686c74058897f8cadb34f6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 07:21:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} \"#{cyan \"    #{${1:ident}[${2:int}][/${3:tstring_content}/][${2:int}..-${4:int}]}\"}#{cyan \"${5:tstring_content}#{${6:ident} * '${7:tstring_content}'}\" unless ${6:ident}.empty?}\""
  ],
  "consequent": [
   "      ${0:ident} dark(\"     #{bold ${1:ident}[${2:int}][/${3:tstring_content}/][${2:int}..-${4:int}]}\") + dark(\"${5:tstring_content}#{${6:ident} * '${7:tstring_content}'}\")"
  ]
 },
 {
  "sha": "f20d038519feca6507686c74058897f8cadb34f6",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 07:21:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    def log_downloading(files)      ${0:ident} dark bold \"  downloading #{files.length} files: #{files * ' '}...\"    end    def log_processing(name)      ${0:ident} ${1:ident} \"${2:tstring_content}#{File.basename(name)}\"    end    def log_processed(name)      ${0:ident} ${3:ident} \"    #{name.ljust(62)}\""
  ],
  "consequent": [
   "    def log_file_status(file, status)      status, color = {downloading: ['\u2193  ', :cyan], processing: ['\u27f3  ', :${1:ident}], processed: ['\u2713  ', :${3:ident}]}[status]      ${0:ident} send(color, \"${2:tstring_content}#{status}${2:tstring_content}#{File.basename(file)}\")"
  ]
 },
 {
  "sha": "14bf452b2f8bee9355b70348c2146768eaf59d2d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 06:37:34",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = replace_ms_filters(${0:ident})"
  ],
  "consequent": [
   "        ${0:ident} = ${0:ident}.gsub(            /filter: e\\(%\\(\"progid:DXImageTransform.Microsoft.gradient\\(startColorstr='%d', endColorstr='%d', GradientType=(\\d)\\)\",argb\\(([\\-$\\w]+)\\),argb\\(([\\-$\\w]+)\\)\\)\\);/,            %Q(filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='\\#{ie-hex-str(\\\\2)}', endColorstr='\\#{ie-hex-str(\\\\3)}', GradientType=\\\\1);)        )"
  ]
 },
 {
  "sha": "1ee0f6df5660ad7c079a230ea711f8ea86bc9b17",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 06:22:54",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    log_status \"Processing stylesheets...\""
  ],
  "consequent": [
   "    puts \"\\nProcessing stylesheets...\""
  ]
 },
 {
  "sha": "1ee0f6df5660ad7c079a230ea711f8ea86bc9b17",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 06:22:54",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    log_status \"Processing javascripts...\""
  ],
  "consequent": [
   "    puts \"\\nProcessing javascripts...\""
  ]
 },
 {
  "sha": "1ee0f6df5660ad7c079a230ea711f8ea86bc9b17",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-05 06:22:54",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    log_file_status ${0:ident}, :processed"
  ],
  "consequent": [
   "    puts \"Saved #{${0:ident}}\\n\""
  ]
 },
 {
  "sha": "4e19ad40c976c318d84a35a7c0b8f97c49c57b2d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-04 10:55:35",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = File.read(${1:ident}).sub(/BOOTSTRAP_SHA\\s*=\\s*['\"][\\w]+['\"]/, \"${2:tstring_content}#@branch_sha${3:tstring_content}\")"
  ],
  "consequent": [
   "    get_branch_sha    ${0:ident} = File.read(${1:ident}).sub(/BOOTSTRAP_SHA\\s*=\\s*['\"][\\w+]['\"]/, \"${2:tstring_content}#@branch_sha${3:tstring_content}\")"
  ]
 },
 {
  "sha": "b07406189f2a12e3bdb07960cc228f22beee8b0f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:31:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @branch_sha ||= %x[git ls-remote '#@repo_url${0:tstring_content}#@branch${1:tstring_content}].chomp"
  ],
  "consequent": [
   "    @branch_sha ||= %x[git ls-remote 'https://github.com/#@repo${0:tstring_content}#@branch${1:tstring_content}].chomp"
  ]
 },
 {
  "sha": "b07406189f2a12e3bdb07960cc228f22beee8b0f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:31:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @trees ||= get_json(\"#{GIT_DATA}${0:tstring_content}#@repo${1:tstring_content}#@branch_sha\")"
  ],
  "consequent": [
   "    @trees ||= JSON.parse(open(\"#{GIT_DATA}${0:tstring_content}#@repo${1:tstring_content}#@branch_sha\").read)"
  ]
 },
 {
  "sha": "b07406189f2a12e3bdb07960cc228f22beee8b0f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:31:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = get_json \"#{GIT_DATA}${1:tstring_content}#@repo${2:tstring_content}#{get_tree_sha('${3:tstring_content}')}\""
  ],
  "consequent": [
   "      ${0:ident} = open(\"#{GIT_DATA}${1:tstring_content}#@repo${2:tstring_content}#{get_tree_sha('${3:tstring_content}')}\").read      ${0:ident} = JSON.parse ${0:ident}"
  ]
 },
 {
  "sha": "b07406189f2a12e3bdb07960cc228f22beee8b0f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:31:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = get_json \"#{GIT_DATA}${1:tstring_content}#@repo${2:tstring_content}#{get_tree_sha('${3:tstring_content}')}\""
  ],
  "consequent": [
   "      ${0:ident} = open(\"#{GIT_DATA}${1:tstring_content}#@repo${2:tstring_content}#{get_tree_sha('${3:tstring_content}')}\").read      ${0:ident} = JSON.parse ${0:ident}"
  ]
 },
 {
  "sha": "6745e6b9687ed6874cabd7500c224ebbb1494b09",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:22:54",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @branch_sha = get_branch_sha    @mixins     = get_mixins_name"
  ],
  "consequent": [
   "    @mixins = get_mixins_name"
  ]
 },
 {
  "sha": "6745e6b9687ed6874cabd7500c224ebbb1494b09",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:22:54",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    get_trees['${0:tstring_content}'].${1:ident} { |${2:ident}| ${2:ident}['${3:tstring_content}'] == ${4:ident} }['${5:tstring_content}']"
  ],
  "consequent": [
   "    trees = open(\"https://api.github.com/repos/#@repo/git/trees/#@branch\").read    trees = JSON.parse trees    trees['${0:tstring_content}'].${1:ident}{|${2:ident}| ${2:ident}['${3:tstring_content}'] == ${4:ident}}['${5:tstring_content}']"
  ]
 },
 {
  "sha": "6745e6b9687ed6874cabd7500c224ebbb1494b09",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:22:54",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = open(\"#{GIT_DATA}/#@repo${1:tstring_content}#{get_tree_sha('${2:tstring_content}')}\").read"
  ],
  "consequent": [
   "      ${0:ident} = open(\"https://api.github.com/repos/#@repo${1:tstring_content}#{get_tree_sha('${2:tstring_content}')}\").read"
  ]
 },
 {
  "sha": "6745e6b9687ed6874cabd7500c224ebbb1494b09",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:22:54",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = open(\"#{GIT_DATA}/#@repo${1:tstring_content}#{get_tree_sha('${2:tstring_content}')}\").read"
  ],
  "consequent": [
   "      ${0:ident} = open(\"https://api.github.com/repos/#@repo${1:tstring_content}#{get_tree_sha('${2:tstring_content}')}\").read"
  ]
 },
 {
  "sha": "6745e6b9687ed6874cabd7500c224ebbb1494b09",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 16:22:54",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = open(\"#{GIT_RAW}${1:tstring_content}#@repo${1:tstring_content}#@branch_sha${2:tstring_content}\").read"
  ],
  "consequent": [
   "    ${0:ident} = open(\"https://raw.github.com/#@repo${1:tstring_content}#@branch${2:tstring_content}\").read"
  ]
 },
 {
  "sha": "d5ccfc897678e2e28d3856538c3ffb53131c2b10",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 08:58:43",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub!(/\\$\\{([^}]+)\\}/, '${1:tstring_content}') # Get rid of @{} escape"
  ],
  "consequent": [
   "    ${0:ident}.gsub!(/\\${([^}]+)}/, '${1:tstring_content}') # Get rid of @{} escape"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  private"
  ],
  "consequent": [
   "private"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = open(\"#{full_path}/#{name}\").read"
  ],
  "consequent": [
   "        ${0:ident} = open(url).read"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "          ${0:ident} \"  \u2193   #{name}\""
  ],
  "consequent": [
   "          ${0:ident} \"GET #{url}\""
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    replace_rules(${0:ident}, '^[ \\t]*@mixin\\s*' + ${1:ident}) do |${2:ident}|"
  ],
  "consequent": [
   "    replace_rules(${0:ident}, '\\s*@mixin\\s*' + ${1:ident}) do |${2:ident}|"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      # wrap properties in #{$parent} { ... }",
   "      replace_properties(${0:ident}) { |${1:ident}| \"${2:tstring_content}#{${3:ident}}${4:tstring_content}#{${1:ident}.${5:ident}} }\\n  \" }"
  ],
  "consequent": [
   "      replace_properties(${0:ident}) { |${1:ident}| \"${2:tstring_content}#{${3:ident}}${4:tstring_content}#{${1:ident}.${5:ident}} }\\n\" }"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      # change nested& rules to nested#{$parent}",
   "      replace_rules(${0:ident}, /.*[^\\s ]&/) { |${1:ident}| ${2:ident} ${1:ident}, /${3:tstring_content}/, \"${4:tstring_content}#{${5:ident}}${6:tstring_content}\" }"
  ],
  "consequent": [
   "      replace_rules(${0:ident}) { |${1:ident}| ${2:ident} ${1:ident}, /${3:tstring_content}/, \"${4:tstring_content}#{${5:ident}}${6:tstring_content}\" }"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    matches = []    # first find the rules, and remove them",
   "    ${0:ident}     = replace_rules(${0:ident}, ${1:ident}, comments: true) { |${2:ident}, ${3:ident}|      matches << [${2:ident}, ${3:ident}]      indent \"// [converter] extracted #{get_selector(${2:ident})} to #{new_selector}\", indent_width(${2:ident})    }"
  ],
  "consequent": [
   "    ${2:ident} = ${3:ident} = nil    ${0:ident} = replace_rules(${0:ident}, ${1:ident}) { |r, p| ${2:ident} = r; ${3:ident} = p; '' }"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    matches.each do |m|      m[0].sub! /(#{COMMENT_RE}*)^(\\s*).*?(\\s*){/m, \"${0:tstring_content}#{${1:ident}}${2:tstring_content}\""
  ],
  "consequent": [
   "    rule = rule.sub /^(#{COMMENTS_RE})?(\\s*).*?(\\s*){/m, \"${0:tstring_content}#{${1:ident}}${2:tstring_content}\"    css.insert pos.begin + css[pos.begin..-1].index('}') + 1,               \"\\n\" + unindent(rule)"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      $~.${0:ident} + ${1:ident}.sub(/${2:tstring_content}#{COMMENT_RE}*)(#{SELECTOR_RE})\\{(.*)\\}/m, '${3:tstring_content}').sub(/${4:tstring_content}/, \"#{$1}${5:tstring_content}#{$2.${6:ident}}${7:tstring_content}\").${6:ident}"
  ],
  "consequent": [
   "      $~.${0:ident} + ${1:ident}.sub(/${2:tstring_content}#{COMMENTS_RE})?(#{SELECTOR_RE}){(.*)}/m, '${3:tstring_content}').sub(/${4:tstring_content}/, \"#{$1}${5:tstring_content}#{$2.${6:ident}}${7:tstring_content}\").${6:ident}"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} unwrap_rule_block(${1:ident}).gsub(/${2:tstring_content}/, \"${3:tstring_content}#{${4:ident}}${5:tstring_content}\")"
  ],
  "consequent": [
   "      ${0:ident}(unwrap_rule_block(${1:ident}).gsub /${2:tstring_content}/, \"${3:tstring_content}#{${4:ident}}${5:tstring_content}\")"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = ${1:ident}.scan(/\\.([\\w-]+)\\(.*\\)\\s?\\{?/).first"
  ],
  "consequent": [
   "      ${0:ident} = ${1:ident}.scan(/\\.([\\w-]+)\\(.*\\)\\s?{?/).first"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        \"#{${0:ident}.${1:ident}}${2:tstring_content}#{${3:ident}}#{${0:ident}.${4:ident}}\".gsub(/${5:tstring_content}/, \"${6:tstring_content}\")"
  ],
  "consequent": [
   "        \"#{${0:ident}.${1:ident}}${2:tstring_content}#{${3:ident}}#{${0:ident}.${4:ident}}\".gsub(/${5:tstring_content}/,'${6:tstring_content}')"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    replace_in_selector(${0:ident}, /${1:tstring_content}/, '').sub(/}\\s*\\z/m, '')"
  ],
  "consequent": [
   "    replace_in_selector(${0:ident}, /${1:tstring_content}/, '').sub(/}\\s*$/m, '')"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def replace_rules(${0:ident}, ${1:ident} = SELECTOR_RE, ${2:ident} = {})"
  ],
  "consequent": [
   "  def replace_rules(${0:ident}, ${1:ident} = '\\s*', ${2:ident} = {})"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}    = ${0:ident}.dup"
  ],
  "consequent": [
   "    ${0:ident} = ${0:ident}.dup"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}       = StringScanner.new(${1:ident})"
  ],
  "consequent": [
   "    ${0:ident} = StringScanner.new(${1:ident})"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = /#{COMMENT_RE}*^#{rule_re}/"
  ],
  "consequent": [
   "      ${0:ident} = /^(?:#{COMMENTS_RE})?#{rule_prefix}[^{]*{/"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = /${1:tstring_content}#{rule_re}/"
  ],
  "consequent": [
   "      ${0:ident} = /${1:tstring_content}#{rule_prefix}[^{]*{/"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}       = (${1:ident}.${2:ident} - ${3:ident}.${4:ident}..next_brace_pos(${5:ident}, ${1:ident}.${2:ident} - ${6:int}))"
  ],
  "consequent": [
   "      ${0:ident} = (${1:ident}.${2:ident} - ${3:ident}.${4:ident}..next_brace_pos(${5:ident}, ${1:ident}.${2:ident} - ${6:int}))      rule_block = ${5:ident}[${0:ident}]"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}        = StringScanner.new(${1:ident})"
  ],
  "consequent": [
   "    ${0:ident} = StringScanner.new(${1:ident})"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = scan_next(${1:ident}, /#{RULE_OPEN_BRACE_RE}/))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, /\\{/))"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident}.${1:ident}    = next_brace_pos(${2:ident}, ${0:ident}.${1:ident} - ${3:int}) + ${3:int}"
  ],
  "consequent": [
   "      ${0:ident}.${1:ident} = next_brace_pos(${2:ident}, ${0:ident}.${1:ident} - ${3:int}) + ${3:int}"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    replace_substrings_at(${0:ident}, ${1:ident}) { |s| s.gsub(${2:ident}, ${3:ident}) }"
  ],
  "consequent": [
   "    # insert replacements",
   "    insert_sub(${0:ident}, ${1:ident}) { |${0:ident}, p| ${0:ident}[p].gsub(${2:ident}, ${3:ident}) }"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = scan_next(${1:ident}, /#{SELECTOR_RE}#{RULE_OPEN_BRACE_RE}|#{RULE_CLOSE_BRACE_RE}/m))      ${2:ident} += (${0:ident} == '}' ? -1 : +1)      if ${2:ident} == 1"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, /#{SELECTOR_RE}(?![#])\\{\\n?|\\}/))      if ${2:ident}.zero?"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    replace_substrings_at ${0:ident}, ${1:ident}, &block"
  ],
  "consequent": [
   "    insert_sub(${0:ident}, ${1:ident}) { |${0:ident}, p| yield(${0:ident}[p]) }"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}     = StringScanner.new(${1:ident}[${2:ident}..-${3:int}])"
  ],
  "consequent": [
   "    ${0:ident} = StringScanner.new(${1:ident}[${2:ident}..-${3:int}])"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.each_with_index do |${1:ident}, i|"
  ],
  "consequent": [
   "    ${0:ident}.each do |${1:ident}|      ${1:ident} = (${1:ident}.begin + offset .. ${1:ident}.end + offset)      r = block.call(css, ${1:ident})"
  ]
 },
 {
  "sha": "b80b9b5604c446b240a74c33d2c570d2776b6317",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-03 07:22:57",
  "file_path": "tasks/converter.rb",
  "condition": [
   "text"
  ],
  "consequent": [
   "css"
  ]
 },
 {
  "sha": "dc1249eb0a86c4a2c4a1d13aa962c7943aa59243",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 23:02:46",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(/(?![\\-$@.])spin(?!-)/, '${1:tstring_content}')"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/spin/, '${1:tstring_content}')"
  ]
 },
 {
  "sha": "1356701ad7e175681131dd91060c0548ff962e23",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 09:01:02",
  "file_path": "tasks/converter.rb",
  "condition": [
   "unwrap_rule_block"
  ],
  "consequent": [
   "unwrape_rule_block"
  ]
 },
 {
  "sha": "1356701ad7e175681131dd91060c0548ff962e23",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 09:01:02",
  "file_path": "tasks/converter.rb",
  "condition": [
   "unwrap_rule_block"
  ],
  "consequent": [
   "unwrape_rule_block"
  ]
 },
 {
  "sha": "99508967df3e8b133e78d6f3f169f790496ccee5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 08:58:26",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      $~.${0:ident} + ${1:ident}.sub(/${2:tstring_content}#{COMMENTS_RE})?(#{SELECTOR_RE}${3:tstring_content}/m, '\\3').sub(/${4:tstring_content}/, \"#{$1}${5:tstring_content}#{$2.${6:ident}}${7:tstring_content}\").${6:ident}"
  ],
  "consequent": [
   "      $~.${0:ident} + ${1:ident}.sub(/${2:tstring_content}#{SELECTOR_RE}${3:tstring_content}/m, '\\2').sub(/${4:tstring_content}/, \"${5:tstring_content}#{$1.${6:ident}}${7:tstring_content}\").${6:ident}"
  ]
 },
 {
  "sha": "99508967df3e8b133e78d6f3f169f790496ccee5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 08:58:26",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      unindent(unwrape_rule_block(${0:ident}).${1:ident} /${2:tstring_content}/, \"${3:tstring_content}#{${4:ident}}${5:tstring_content}\")"
  ],
  "consequent": [
   "      unwrapped = ${0:ident}.split(\"\\n\")[1..-2] * \"\\n\"      unindent(unwrapped.${1:ident} /${2:tstring_content}/, \"${3:tstring_content}#{${4:ident}}${5:tstring_content}\")"
  ]
 },
 {
  "sha": "99508967df3e8b133e78d6f3f169f790496ccee5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 08:58:26",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def replace_rules(${0:ident}, ${1:ident} = '${2:tstring_content}', options = {})"
  ],
  "consequent": [
   "  def replace_rules(${0:ident}, ${1:ident} = '${2:tstring_content}')"
  ]
 },
 {
  "sha": "99508967df3e8b133e78d6f3f169f790496ccee5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 08:58:26",
  "file_path": "tasks/converter.rb",
  "condition": [
   "rule_block"
  ],
  "consequent": [
   "group"
  ]
 },
 {
  "sha": "99508967df3e8b133e78d6f3f169f790496ccee5",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 08:58:26",
  "file_path": "tasks/converter.rb",
  "condition": [
   "rule_block"
  ],
  "consequent": [
   "group"
  ]
 },
 {
  "sha": "d12c606ba513507b68788aaf54fca9f551bb7c9b",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 02:10:50",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = extract_nested_rule(${0:ident}, '${1:tstring_content}', 'button.close')"
  ],
  "consequent": [
   "        btn_rules = nil        ${0:ident} = replace_rules(${0:ident}, '${1:tstring_content}') { |rules| btn_rules = rules; '' } +                unindent(replace_in_selector(btn_rules, /&/, '.close'), 2)"
  ]
 },
 {
  "sha": "8fcc4d1d3676194ae8476ecc0833702b10818d29",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 01:45:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = flatten_mixins(${0:ident}, '${1:tstring_content}', 'gradient')"
  ],
  "consequent": [
   "        ${0:ident} = flatten_mixins(${0:ident}, '${1:tstring_content}')"
  ]
 },
 {
  "sha": "8fcc4d1d3676194ae8476ecc0833702b10818d29",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 01:45:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      replace_rules(${0:ident}) { |${1:ident}| ${2:ident} ${1:ident}, /${3:tstring_content}/, \"${4:tstring_content}#{${5:ident}}${6:tstring_content}\" }"
  ],
  "consequent": [
   "      replace_rules(${0:ident}) { |${1:ident}| ${2:ident} ${1:ident} , /${3:tstring_content}/, \"${4:tstring_content}#{${5:ident}}${6:tstring_content}\" }"
  ]
 },
 {
  "sha": "8fcc4d1d3676194ae8476ecc0833702b10818d29",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 01:45:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def flatten_mixins(${0:ident}, ${1:ident}, prefix)"
  ],
  "consequent": [
   "  def flatten_mixins(${0:ident}, ${1:ident})"
  ]
 },
 {
  "sha": "8fcc4d1d3676194ae8476ecc0833702b10818d29",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 01:45:17",
  "file_path": "tasks/converter.rb",
  "condition": [
   "prefix"
  ],
  "consequent": [
   "container"
  ]
 },
 {
  "sha": "376b2c623cba6b01e1363cbf29555b851c1a5ff1",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 01:06:22",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = apply_mixin_parent_selector(${0:ident}, '\\.(visible|hidden)')"
  ],
  "consequent": [
   "        # .visible-sm { @include responsive-visibility() }",
   "        # =>",
   "        # @include responsive-visibility('.visible-sm')",
   "        ${0:ident} = replace_rules ${0:ident}, '(\\s*)\\.(visible|hidden)-' do |rule|          next rule unless rule =~ /@include/          rule =~ /\\A\\s+/ # keep indentation",
   "          $~.to_s + rule.sub(/(#{SELECTOR_RE}){(.*)}/m, '\\2').sub(/(@include [\\w-]+\\()/, \"\\\\1'#{$1.strip}'\").strip        end"
  ]
 },
 {
  "sha": "6743667e1f915e03289880292d78d05d6362800f",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-08-01 00:04:30",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    while (${0:ident} = scan_next(${1:ident}, BRACE_RE))"
  ],
  "consequent": [
   "    while (${0:ident} = scan_next(${1:ident}, brace_re))"
  ]
 },
 {
  "sha": "c73d1a8db3249a48fc01774cf0f9062e5dd9eec7",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 23:02:19",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = flatten_mixins(${0:ident}, '#gradient')"
  ],
  "consequent": [
   "        ${0:ident} = flatten_mixins(${0:ident}, 'gradient')"
  ]
 },
 {
  "sha": "c73d1a8db3249a48fc01774cf0f9062e5dd9eec7",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 23:02:19",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} ${1:ident}, Regexp.escape(container) do |${2:ident}|"
  ],
  "consequent": [
   "    ${0:ident} ${1:ident}, Regexp.escape('#' + parent) do |${2:ident}|"
  ]
 },
 {
  "sha": "c73d1a8db3249a48fc01774cf0f9062e5dd9eec7",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 23:02:19",
  "file_path": "tasks/converter.rb",
  "condition": [
   "container"
  ],
  "consequent": [
   "parent"
  ]
 },
 {
  "sha": "e312899109f5cc0fb4995af185e4b45c6b900168",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 05:08:49",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    read_files('less', ${0:ident}).${1:ident} do |${2:ident}, ${3:ident}|"
  ],
  "consequent": [
   "    ${0:ident}.${1:ident} do |${2:ident}|      ${3:ident} = open(\"https://raw.github.com/#@repo/#@branch/less/#{${2:ident}}\").read"
  ]
 },
 {
  "sha": "e312899109f5cc0fb4995af185e4b45c6b900168",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 05:08:49",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    read_files('js', ${0:ident}).${1:ident} do |${2:ident}, ${3:ident}|"
  ],
  "consequent": [
   "    ${0:ident}.${1:ident} do |${2:ident}|      ${3:ident} = open(\"https://raw.github.com/#@repo/#@branch/js/#{${2:ident}}\").read"
  ]
 },
 {
  "sha": "e312899109f5cc0fb4995af185e4b45c6b900168",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 05:08:49",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      save_file(\"${0:tstring_content}#{${1:ident}}\", ${2:ident})"
  ],
  "consequent": [
   "      path = \"${0:tstring_content}#{${1:ident}}\"      save_file(path, ${2:ident})"
  ]
 },
 {
  "sha": "e312899109f5cc0fb4995af185e4b45c6b900168",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 05:08:49",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @bootstrap_less_files ||= begin      ${0:ident} = open(\"${1:tstring_content}#@repo${2:tstring_content}#{get_tree_sha('${3:tstring_content}')}\").read"
  ],
  "consequent": [
   "    ${0:ident} = open(\"${1:tstring_content}#@repo${2:tstring_content}#{get_tree_sha('${3:tstring_content}')}\").read"
  ]
 },
 {
  "sha": "e312899109f5cc0fb4995af185e4b45c6b900168",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 05:08:49",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    @bootstrap_js_files ||= begin      ${0:ident} = open(\"${1:tstring_content}#@repo${2:tstring_content}#{get_tree_sha('${3:tstring_content}')}\").read"
  ],
  "consequent": [
   "    ${0:ident} = open(\"${1:tstring_content}#@repo${2:tstring_content}#{get_tree_sha('${3:tstring_content}')}\").read"
  ]
 },
 {
  "sha": "e312899109f5cc0fb4995af185e4b45c6b900168",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 05:08:49",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        case f"
  ],
  "consequent": [
   "      case f"
  ]
 },
 {
  "sha": "5398ae9f54d2e3f31cc3ac44722ccdf98062df76",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 01:02:33",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(/^(\\s*)\\.([\\w-]+\\(.*\\))(\\s*\\{)/) { |match|"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/^(\\s*)\\.([\\w-]+\\(.*\\))(\\s*{)/, '\\1@mixin \\2\\3')"
  ]
 },
 {
  "sha": "4f218d6aaa6bc39dac35ec260f4933f626287562",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-31 00:07:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = ${0:ident}.gsub(/${1:tstring_content}/, '${2:tstring_content}')"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/${1:tstring_content}/, '${2:tstring_content}')"
  ]
 },
 {
  "sha": "9f22e0558e37d6152767d8ffea092cf1204b5e4d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-30 23:05:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = open(\"https://raw.github.com/#@repo/#@branch${1:tstring_content}#{${2:ident}}\").read"
  ],
  "consequent": [
   "      ${0:ident} = open(\"https://raw.github.com/twitter/bootstrap/#{@branch}${1:tstring_content}#{${2:ident}}\").read"
  ]
 },
 {
  "sha": "9f22e0558e37d6152767d8ffea092cf1204b5e4d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-30 23:05:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = open(\"https://raw.github.com/#@repo/#@branch${1:tstring_content}#{${2:ident}}\").read"
  ],
  "consequent": [
   "      ${0:ident} = open(\"https://raw.github.com/twitter/bootstrap/#{@branch}${1:tstring_content}#{${2:ident}}\").read"
  ]
 },
 {
  "sha": "9f22e0558e37d6152767d8ffea092cf1204b5e4d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-30 23:05:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = open(\"https://api.github.com/repos/#@repo/git/trees/#@branch\").read"
  ],
  "consequent": [
   "    ${0:ident} = open(\"https://api.github.com/repos/twitter/bootstrap/git/trees/#{@branch}\").read"
  ]
 },
 {
  "sha": "9f22e0558e37d6152767d8ffea092cf1204b5e4d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-30 23:05:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = open(\"https://api.github.com/repos/#@repo/git/trees/#{get_tree_sha('${1:tstring_content}')}\").read"
  ],
  "consequent": [
   "    ${0:ident} = open(\"https://api.github.com/repos/twitter/bootstrap/git/trees/#{get_tree_sha('${1:tstring_content}')}\").read"
  ]
 },
 {
  "sha": "9f22e0558e37d6152767d8ffea092cf1204b5e4d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-30 23:05:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = open(\"https://api.github.com/repos/#@repo/git/trees/#{get_tree_sha('${1:tstring_content}')}\").read"
  ],
  "consequent": [
   "    ${0:ident} = open(\"https://api.github.com/repos/twitter/bootstrap/git/trees/#{get_tree_sha('${1:tstring_content}')}\").read"
  ]
 },
 {
  "sha": "9f22e0558e37d6152767d8ffea092cf1204b5e4d",
  "author": "Gleb Mazovetskiy",
  "created_at": "2013-07-30 23:05:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = open(\"https://raw.github.com/#@repo/#@branch${1:tstring_content}\").read"
  ],
  "consequent": [
   "    ${0:ident} = open(\"https://raw.github.com/twitter/bootstrap/#{@branch}${1:tstring_content}\").read"
  ]
 },
 {
  "sha": "c22add45743a348c4323b966f90efb08235db410",
  "author": "Morton Jonuschat",
  "created_at": "2013-07-29 01:21:05",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(/(\\W)e\\(%\\(\"?([^\"]*)\"?\\)\\)/, '${1:tstring_content}') # Get rid of e(%(\"\")) escape"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/(\\W)e\\(%\\((.*)\\)\\)/, '${1:tstring_content}') # Get rid of e(%(\"\")) escape"
  ]
 },
 {
  "sha": "368bd4bccf49efa5caac493cd16e29bedbbf545a",
  "author": "Peter Gumeson",
  "created_at": "2013-07-17 15:29:41",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = ${0:ident}.scan(/${1:tstring_content}/).join('${2:tstring_content}') + '${2:tstring_content}'"
  ],
  "consequent": [
   "        ${0:ident} = 'twbs-' + ${0:ident}.scan(/${1:tstring_content}/).join('${2:tstring_content}')      else"
  ]
 },
 {
  "sha": "368bd4bccf49efa5caac493cd16e29bedbbf545a",
  "author": "Peter Gumeson",
  "created_at": "2013-07-17 15:29:41",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(/${1:tstring_content}/, '\\1@mixin \\2\\3')"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/${1:tstring_content}/, '\\1@mixin twbs-\\2\\3')"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      ${0:ident} = open(\"${1:tstring_content}#{@branch}${2:tstring_content}#{${3:ident}}\").read"
  ],
  "consequent": [
   "      unless ['bootstrap.less', 'responsive.less'].include?(${3:ident})        ${0:ident} = open(\"${1:tstring_content}#{@branch}${2:tstring_content}#{${3:ident}}\").read"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "      case name"
  ],
  "consequent": [
   "        case name"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = replace_vars(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = replace_vars(${0:ident})"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = replace_escaping(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = replace_escaping(${0:ident})"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = replace_mixin_file(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = replace_mixin_file(${0:ident})"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = replace_mixins(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = replace_mixins(${0:ident})"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = replace_mixin_file(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = replace_mixin_file(${0:ident})"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = convert_to_scss(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = convert_to_scss(${0:ident})"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = convert_to_scss(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = convert_to_scss(${0:ident})"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = insert_default_vars(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = insert_default_vars(${0:ident})"
  ]
 },
 {
  "sha": "0aeef75154154f7bf48db42a79623bb957fd73f7",
  "author": "Peter Gumeson",
  "created_at": "2013-06-16 08:30:44",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = convert_to_scss(${0:ident})"
  ],
  "consequent": [
   "          ${0:ident} = convert_to_scss(${0:ident})        end"
  ]
 },
 {
  "sha": "df3669875db19eaea53c95bb0082c7f8d6ab75a3",
  "author": "Peter Gumeson",
  "created_at": "2013-06-14 05:58:34",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def initialize(${0:ident})"
  ],
  "consequent": [
   "  def initialize(${0:ident} = 'master')"
  ]
 },
 {
  "sha": "f6efac3363218ac11ee13b059020fa50aade39e8",
  "author": "Peter Gumeson",
  "created_at": "2013-06-14 04:29:03",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(/^(\\$.+);/, '${1:tstring_content}')"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/^(\\$.+);$/, '${1:tstring_content}')"
  ]
 },
 {
  "sha": "3292d3238281de74c713f905be411eeba88914d1",
  "author": "Peter Gumeson",
  "created_at": "2013-06-14 04:09:18",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = ${0:ident}.gsub(/${1:tstring_content}/, '${2:tstring_content}') # Get rid of ~\"\" escape"
  ],
  "consequent": [
   "    ${0:ident} = ${0:ident}.gsub(/${1:tstring_content}/, '${2:tstring_content}') # Get rid of ~ escape"
  ]
 },
 {
  "sha": "91a628ffa080901cc5ea4e9ec758eb0b8a786916",
  "author": "Tristan Harward",
  "created_at": "2013-06-01 03:23:31",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "      ${0:ident}[:importer].context"
  ],
  "consequent": [
   "      ${0:ident}[:custom][:sprockets_context]"
  ]
 },
 {
  "sha": "53e1e3ea52c798ea3008823045b5d7c46c84c84f",
  "author": "Peter Gumeson",
  "created_at": "2013-05-29 15:39:29",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(/^(\\s*)\\.([\\w-]+\\(.*\\))(\\s*{)/, '\\1@mixin twbs-\\2\\3')"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/^\\.([\\w-]+\\(.*\\)\\s?{?)$/, '@mixin twbs-\\1')"
  ]
 },
 {
  "sha": "f967528adb9b2507ad0eecafcab6657019e37f80",
  "author": "Peter Gumeson",
  "created_at": "2013-05-29 12:50:03",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = /(\\s*)(([#|\\.][\\w-]+\\s*>\\s*)*)\\.([\\w-]+\\(.*\\))\\s*{?/    ${1:ident}.gsub(${0:ident}) do |match|      matches = match.scan(${0:ident}).flatten      scope = matches[1] || ''      if scope != ''        scope = 'twbs-' + scope.scan(/[\\w-]+/).join('-')      else        scope = 'twbs'      end      \"#{matches.first}@include #{scope}-#{matches.last}\"    end"
  ],
  "consequent": [
   "    ${0:ident} = /\\.([\\w-]+\\(.*\\))\\s?{?/    ${1:ident}.gsub(${0:ident}, '@include twbs-\\1')"
  ]
 },
 {
  "sha": "c9dfc0817cc5fd5d3149a0364b7a3ee535782cb3",
  "author": "Peter Gumeson",
  "created_at": "2013-05-29 06:30:05",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(${1:ident}, '@include twbs-\\1')"
  ],
  "consequent": [
   "    ${0:ident}.gsub(${1:ident}, '@include bootstrap-\\1')"
  ]
 },
 {
  "sha": "c9dfc0817cc5fd5d3149a0364b7a3ee535782cb3",
  "author": "Peter Gumeson",
  "created_at": "2013-05-29 06:30:05",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(/${1:tstring_content}/, '@mixin twbs-\\1')"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/${1:tstring_content}/, '@mixin bootstrap-\\1')"
  ]
 },
 {
  "sha": "4ad50ce13d09de138b765f8d12efb31f4791417c",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 16:36:55",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident}.gsub(/(?!@media|@page|@keyframes|@font-face|@-\\w)@/, '${1:tstring_content}')"
  ],
  "consequent": [
   "    ${0:ident}.gsub(/(?!@media|@-\\w)@/, '${1:tstring_content}')  end"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    process_stylesheet_assets    process_javascript_assets  end"
  ],
  "consequent": [
   "    @files.each do |name|"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "convert_to_scss"
  ],
  "consequent": [
   "convert"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "convert_to_scss"
  ],
  "consequent": [
   "convert"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "convert_to_scss"
  ],
  "consequent": [
   "convert"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "        ${0:ident} = ${0:ident}.gsub(/\\.less$/, '.scss')        path = \"vendor/assets/stylesheets/bootstrap/_#{${0:ident}}\"        save_file(path, ${1:ident})"
  ],
  "consequent": [
   "        save_file(${0:ident}, ${1:ident})"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def process_javascript_assets    puts \"\\nProcessing javascripts...\"    bootstrap_js_files.each do |name|      file = open(\"https://raw.github.com/twitter/bootstrap/#{@branch}/js/#{name}\").read      path = \"vendor/assets/javascripts/bootstrap/#{name}\"      save_file(path, file)    end"
  ],
  "consequent": [
   "private"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    # Update javascript manifest",
   "    content = ''    bootstrap_js_files.each do |name|      name = name.gsub(/\\.js$/, '')      content << \"//= require bootstrap/#{name}\\n\"    end    ${0:ident} = \"vendor/assets/javascripts/bootstrap.js\"    save_file(${0:ident}, content)"
  ],
  "consequent": [
   "  # Get the sha of less branch",
   "  def get_tree_sha    trees = open(\"https://api.github.com/repos/twitter/bootstrap/git/trees/#{@branch}\").read    trees = JSON.parse trees    trees['tree'].find{|t| t['${0:tstring_content}'] == 'less'}['sha']"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "private  # Get the sha of a dir",
   "  def get_tree_sha(dir)    trees = open(\"https://api.github.com/repos/twitter/bootstrap/git/trees/#{@branch}\").read    trees = JSON.parse trees    trees['tree'].find{|t| t['path'] == dir}['sha']  end  def bootstrap_less_files"
  ],
  "consequent": [
   "  def get_less_files"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} = open(\"${1:tstring_content}#{get_tree_sha('less')}\").read"
  ],
  "consequent": [
   "    ${0:ident} = open(\"${1:tstring_content}#{get_tree_sha}\").read"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "convert_to_scss"
  ],
  "consequent": [
   "convert"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "  def save_file(path, ${0:ident}, mode='w')"
  ],
  "consequent": [
   "  def save_file(name, ${0:ident})"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    File.open(path, mode) { |file| file.write(${0:ident}) }"
  ],
  "consequent": [
   "    name = name.gsub(/\\.less/, '')    f = File.open(\"vendor/assets/stylesheets/bootstrap/_#{name}.scss\", \"w+\")    f.write(${0:ident})    f.close"
  ]
 },
 {
  "sha": "ad8cc1ecd4fbba6655a54baa9f09ec2e0b96fc1a",
  "author": "Peter Gumeson",
  "created_at": "2013-05-25 08:59:48",
  "file_path": "tasks/converter.rb",
  "condition": [
   "    ${0:ident} \"Saved #{path}${1:tstring_content}\""
  ],
  "consequent": [
   "    ${0:ident} \"Converted #{name}${1:tstring_content}\""
  ]
 },
 {
  "sha": "8dabf1caef4dadce2006a1e14465f7f9fded4564",
  "author": "gleb",
  "created_at": "2013-04-19 06:18:15",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "    ${0:ident}[:sprockets][:context]"
  ],
  "consequent": [
   "    ${0:ident}[:custom][:sprockets_context]"
  ]
 },
 {
  "sha": "26a30c1f9d60f069de1a12bcb72b128889b8701e",
  "author": "gleb",
  "created_at": "2013-04-19 06:18:15",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "    ${0:ident}[:sprockets][:context]"
  ],
  "consequent": [
   "    ${0:ident}[:custom][:sprockets_context]"
  ]
 },
 {
  "sha": "3e40c4caea4a7324107ecd034feb067d50226057",
  "author": "Tristan Harward",
  "created_at": "2013-03-22 02:06:19",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "  def image_path(source, options = {})    if defined?(::Sprockets)      ::Sass::Script::String.new sprockets_context.image_path(source.value).to_s, :string    elsif defined?(::Compass)"
  ],
  "consequent": [
   "  # Define image_path for Compass to allow use of sprites without url() wrapper.",
   "  def image_path(asset)    if defined?(::Compass)"
  ]
 },
 {
  "sha": "3e40c4caea4a7324107ecd034feb067d50226057",
  "author": "Tristan Harward",
  "created_at": "2013-03-22 02:06:19",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "gsub"
  ],
  "consequent": [
   "asset"
  ]
 },
 {
  "sha": "2be2d7d13074d16ea6ca0856cc298dcc6146c449",
  "author": "Tristan Harward",
  "created_at": "2013-03-22 00:26:25",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    if compass?"
  ],
  "consequent": [
   "    if compass? && asset_pipeline?      register_compass_extension      register_rails_engine    elsif compass?      # Only require compass extension if a standalone project"
  ]
 },
 {
  "sha": "2be2d7d13074d16ea6ca0856cc298dcc6146c449",
  "author": "Tristan Harward",
  "created_at": "2013-03-22 00:26:25",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    end    if !(rails? || compass?)"
  ],
  "consequent": [
   "      require 'bootstrap-sass/rails_functions'    else"
  ]
 },
 {
  "sha": "dea455010660daec5a986187f2de0425d0f8a3e3",
  "author": "John Albin Wilkins",
  "created_at": "2013-02-19 03:26:45",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    ::Compass::Frameworks.register('${0:tstring_content}', :path => base, :${1:ident} => ${2:ident}, :${3:ident} => ${4:ident})"
  ],
  "consequent": [
   "    ::Compass::Frameworks.register('${0:tstring_content}', :${1:ident} => ${2:ident}, :${3:ident} => ${4:ident})"
  ]
 },
 {
  "sha": "5b17751454a396b1d6a1c2de493b69dfa40a6c18",
  "author": "Tristan Harward",
  "created_at": "2013-02-16 09:42:23",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    ::Sass.${0:ident} << stylesheets"
  ],
  "consequent": [
   "    Sass.${0:ident} << stylesheets"
  ]
 },
 {
  "sha": "2fc8201565b7e95d0ca1705c71597b192035603d",
  "author": "Tristan Harward",
  "created_at": "2012-11-02 00:22:08",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "    if defined?(::Compass)      image_url(${0:ident}, Sass::Script::Bool.new(true))"
  ],
  "consequent": [
   "    image_url(${0:ident}, Sass::Script::Bool.new(true))"
  ]
 },
 {
  "sha": "2cca8870c2ce84c4af283b99f21bb4b68c6954ce",
  "author": "Tristan Harward",
  "created_at": "2012-11-02 00:06:04",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "  def image_path(${0:ident})"
  ],
  "consequent": [
   "    def image_path(${0:ident})"
  ]
 },
 {
  "sha": "2cca8870c2ce84c4af283b99f21bb4b68c6954ce",
  "author": "Tristan Harward",
  "created_at": "2012-11-02 00:06:04",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "    image_url(${0:ident}, Sass::Script::Bool.new(true))"
  ],
  "consequent": [
   "      image_url(${0:ident}, Sass::Script::Bool.new(true))    end"
  ]
 },
 {
  "sha": "a7369e809df7833a59731acbf619f372b9eb81e1",
  "author": "Tristan Harward",
  "created_at": "2012-11-01 23:56:58",
  "file_path": "lib/bootstrap-sass/compass_functions.rb",
  "condition": [
   "module Compass::SassExtensions::Functions::Urls  module ImageUrl    # Define image_path for Compass to allow use of sprites without url() wrapper.",
   "    def image_path(${0:ident})      image_url(${0:ident}, Sass::Script::Bool.new(true))    end"
  ],
  "consequent": [
   "module Sass::Script::Functions  # Define asset_url for Compass to allow use of sprites.",
   "  def asset_url(${0:ident}, type)    asset_sans_quotes = ${0:ident}.value.gsub('\"', '')    path = Sass::Script::String.new(\"/#{type}s/#{asset_sans_quotes}\", :string)    Sass::Script::String.new(\"url(#{path})\")"
  ]
 },
 {
  "sha": "349cd8ed4e52011ecaca16ffece99eab7502e14c",
  "author": "Thomas McDonald",
  "created_at": "2012-06-04 19:45:25",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "    %w(bootstrap bootstrap-responsive).each do |file|      ${0:ident} = Sass::Engine.for_file(\"#{${1:ident}}/_#{file}.scss\", syntax: :${2:ident}, load_paths: [${1:ident}])"
  ],
  "consequent": [
   "    ${0:ident} = Sass::Engine.for_file(\"#{${1:ident}}/_bootstrap.scss\", syntax: :${2:ident}, load_paths: [${1:ident}])"
  ]
 },
 {
  "sha": "349cd8ed4e52011ecaca16ffece99eab7502e14c",
  "author": "Thomas McDonald",
  "created_at": "2012-06-04 19:45:25",
  "file_path": "test/compilation_test.rb",
  "condition": [
   "        ${0:ident}.render"
  ],
  "consequent": [
   "      ${0:ident}.render"
  ]
 },
 {
  "sha": "2a9d9bf4fb9eddca87396477dd9ea93ec5d3b985",
  "author": "Thomas McDonald",
  "created_at": "2012-05-11 22:39:47",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      register_rails_engine"
  ],
  "consequent": [
   "      require 'bootstrap-sass/engine'"
  ]
 },
 {
  "sha": "2a9d9bf4fb9eddca87396477dd9ea93ec5d3b985",
  "author": "Thomas McDonald",
  "created_at": "2012-05-11 22:39:47",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "  def self.register_rails_engine    require 'bootstrap-sass/engine'"
  ],
  "consequent": [
   "  def self.compass?    defined?(::Compass)"
  ]
 },
 {
  "sha": "1503314ca285f4188eb81251f457a741ece858f4",
  "author": "Thomas McDonald",
  "created_at": "2012-05-07 03:11:47",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "      register_compass_extension"
  ],
  "consequent": [
   "      base = File.join(File.dirname(__FILE__), '..')      styles = File.join(base, 'vendor', 'assets', 'stylesheets')      templates = File.join(base, 'templates')      ::Compass::Frameworks.register('bootstrap', :stylesheets_directory => styles, :templates_directory => templates)"
  ]
 },
 {
  "sha": "d68959b70823ebe5076ced99c241ac227450aa3a",
  "author": "Thomas McDonald",
  "created_at": "2012-05-07 03:04:49",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    if compass?"
  ],
  "consequent": [
   "    if asset_pipeline?      require 'sass-rails' # See: https://github.com/thomas-mcdonald/bootstrap-sass/pull/4",
   "      require 'bootstrap-sass/engine'      require 'bootstrap-sass/rails_extentions'    elsif compass?"
  ]
 },
 {
  "sha": "60baf08a85e456c08a15d364085e50ad9c423e65",
  "author": "Thomas McDonald",
  "created_at": "2012-04-09 04:17:26",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    elsif compass?"
  ],
  "consequent": [
   "    end    if compass?"
  ]
 },
 {
  "sha": "c637c73aabd857c58ffce673bef2f4d66295e3cf",
  "author": "Thomas McDonald",
  "created_at": "2012-04-09 04:00:11",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "asset_pipeline?"
  ],
  "consequent": [
   "rails_asset_pipeline?"
  ]
 },
 {
  "sha": "c637c73aabd857c58ffce673bef2f4d66295e3cf",
  "author": "Thomas McDonald",
  "created_at": "2012-04-09 04:00:11",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "asset_pipeline?"
  ],
  "consequent": [
   "rails_asset_pipeline?"
  ]
 },
 {
  "sha": "0cea6384c87fc88ba3503999ed808f3f833c7b43",
  "author": "Thomas McDonald",
  "created_at": "2012-04-09 02:39:34",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "    end    if compass?"
  ],
  "consequent": [
   "    elsif compass?"
  ]
 },
 {
  "sha": "711f3b36c8f3c0d180b7acf86f242bb9f62047a1",
  "author": "Hendy Tanata",
  "created_at": "2012-04-04 18:54:49",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "rails_asset_pipeline?"
  ],
  "consequent": [
   "rails?"
  ]
 },
 {
  "sha": "711f3b36c8f3c0d180b7acf86f242bb9f62047a1",
  "author": "Hendy Tanata",
  "created_at": "2012-04-04 18:54:49",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "  def self.rails_asset_pipeline?    defined?(::Rails) && ::Rails.version >= '3.1.0'"
  ],
  "consequent": [
   "  def self.rails?    defined?(::Rails)"
  ]
 },
 {
  "sha": "4ae4653ff6e272ff6f477aa9af0e5eeba11e4de7",
  "author": "Thomas McDonald",
  "created_at": "2012-02-06 22:38:26",
  "file_path": "bootstrap-sass.gemspec",
  "condition": [
   "  ${0:ident}.add_development_dependency 'compass'  ${0:ident}.add_development_dependency '${1:tstring_content}', '${2:tstring_content}'"
  ],
  "consequent": [
   "  ${0:ident}.add_dependency '${1:tstring_content}', '${2:tstring_content}'"
  ]
 },
 {
  "sha": "4ae4653ff6e272ff6f477aa9af0e5eeba11e4de7",
  "author": "Thomas McDonald",
  "created_at": "2012-02-06 22:38:26",
  "file_path": "lib/bootstrap-sass.rb",
  "condition": [
   "  # Inspired by Kaminari",
   "  def self.load!    if rails?      require 'sass-rails' # See: https://github.com/thomas-mcdonald/bootstrap-sass/pull/4",
   "      require 'bootstrap-sass/engine'    elsif compass?      require 'bootstrap-sass/compass_extensions'      base = File.join(File.dirname(__FILE__), '..')      styles = File.join(base, 'vendor', 'assets', 'stylesheets')      templates = File.join(base, 'templates')      ::Compass::Frameworks.register('bootstrap', :stylesheets_directory => styles, :templates_directory => templates)    else      raise Bootstrap::FrameworkNotFound, \"bootstrap-sass requires either Rails or Compass, neither of which are loaded\""
  ],
  "consequent": [
   "      paths[\"config/initializers\"] << 'lib/bootstrap-sass/config'"
  ]
 }
]