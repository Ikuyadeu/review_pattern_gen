[
 {
  "repository": "matz/streem",
  "sha": "8673c84c6102b6da06d897d6e3be6580bb71bb79",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2018-05-01 15:21:43",
  "condition": [
   "if (!io->write_stream) {"
  ],
  "consequent": [
   "if (io->write_stream) {",
   "}",
   "else {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5a160f73a2ebab703203e6cfc98737c5ad6e5ef3",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-06-24 02:45:03",
  "condition": [
   "if (p == NULL) {"
  ],
  "consequent": [
   "if (p == NULL) return -1;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8071b97480ee42965834384c77c1729f9449654f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-06-24 02:33:24",
  "condition": [
   "p = realloc(_epoll_events, sizeof(struct epoll_event) * _num_epoll_events);"
  ],
  "consequent": [
   "_epoll_events = realloc(_epoll_events, sizeof(struct epoll_event) * _num_epoll_events);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8071b97480ee42965834384c77c1729f9449654f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-06-24 02:33:24",
  "condition": [
   "p = realloc(buf, capa);"
  ],
  "consequent": [
   "buf = realloc(buf, capa);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct slice_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct count_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct cycle_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct take_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct uniq_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct rbk_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct minmax_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct reduce_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct repeat_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "struct map_data* d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "struct map_data* d = malloc(sizeof(struct map_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct seq_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1e61ea431ba8e940700b9c930a48a06b51f29515",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-25 10:26:44",
  "condition": [
   "d = malloc(sizeof(*d));"
  ],
  "consequent": [
   "d = malloc(sizeof(struct map_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2523b3808a16683b85fb2e1a92cfdac1942e9d87",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-24 23:49:19",
  "condition": [
   "if (!strm_value_eq(val, d->v)) {",
   "  d->last = data;",
   "  d->v = val;",
   "  strm_emit(strm, data, NULL);",
   "}",
   "return STRM_OK;"
  ],
  "consequent": [
   "return iter_uniq(strm, data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2523b3808a16683b85fb2e1a92cfdac1942e9d87",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-24 23:49:19",
  "condition": [
   "  return STRM_NG;",
   "}",
   "if (!d->init) {",
   "  d->init = TRUE;",
   "  d->last = data;",
   "  d->v = val;",
   "  strm_emit(strm, data, NULL);",
   "  return STRM_OK;"
  ],
  "consequent": [
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2523b3808a16683b85fb2e1a92cfdac1942e9d87",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-24 23:49:19",
  "condition": [
   "if (strm_funcall(strm, d->func, 1, &data, &val) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(strm, d->func, 1, &data, &data) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8ca6b95ac869c98f1542d148debbfee703109ad0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2017-01-24 23:30:56",
  "condition": [
   "return iter_uniq(strm, data);"
  ],
  "consequent": [
   "if (!d->init) {",
   "  d->init = TRUE;",
   "  d->last = data;",
   "  strm_emit(strm, data, NULL);",
   "  return STRM_OK;",
   "}",
   "if (!strm_value_eq(data, d->last)) {",
   "  d->last = data;",
   "  strm_emit(strm, data, NULL);",
   "}",
   "return STRM_OK;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "88684e0a63279510e3c1acfad72551832b4235b8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 20:51:58",
  "condition": [
   "return strm_nil_value();"
  ],
  "consequent": [
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "88684e0a63279510e3c1acfad72551832b4235b8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 20:51:58",
  "condition": [
   "     double x, t;",
   "     if (!strm_number_p(v[i])) {",
   "       return STRM_NG;",
   "     }",
   "     x = strm_value_float(v[i]);"
  ],
  "consequent": [
   "double x = strm_value_float(v[i]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "88684e0a63279510e3c1acfad72551832b4235b8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 20:51:58",
  "condition": [
   "t = sum + x;"
  ],
  "consequent": [
   "double t = sum + x;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "66bac3746643e75c97a76f06f5b8a31ef57ef56b",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 12:37:36",
  "condition": [
   "double x = strm_value_float(v[i]);"
  ],
  "consequent": [
   "double y = strm_value_float(v[i]) - c;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "66bac3746643e75c97a76f06f5b8a31ef57ef56b",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 12:37:36",
  "condition": [
   "t = sum + x;"
  ],
  "consequent": [
   "t = sum + y;",
   "c = (t - sum) - y;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "66bac3746643e75c97a76f06f5b8a31ef57ef56b",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 12:37:36",
  "condition": [
   "double t = sum + x;"
  ],
  "consequent": [
   "double t = sum + y;",
   "c = (t - sum) - y;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "66bac3746643e75c97a76f06f5b8a31ef57ef56b",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 12:37:36",
  "condition": [
   "double x, t;"
  ],
  "consequent": [
   "double f, y, t;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "66bac3746643e75c97a76f06f5b8a31ef57ef56b",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 12:37:36",
  "condition": [
   "x = strm_value_float(val);"
  ],
  "consequent": [
   "f = strm_value_float(val);",
   "y = f - c;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "66bac3746643e75c97a76f06f5b8a31ef57ef56b",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-29 12:37:36",
  "condition": [
   "if (argc == 1) {"
  ],
  "consequent": [
   "if (argc == 0) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "442c511dc21c9fed9b6032af704c76d56234184f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-07 22:52:02",
  "condition": [
   "strm_emit(strm, strm_float_value((d->sum+d->c)/d->num), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_float_value(d->sum/d->num), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "442c511dc21c9fed9b6032af704c76d56234184f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-07 22:52:02",
  "condition": [
   "double x, t;"
  ],
  "consequent": [
   "double f, y, t;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "442c511dc21c9fed9b6032af704c76d56234184f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-07 22:52:02",
  "condition": [
   "t = d->sum + x;"
  ],
  "consequent": [
   "t = d->sum + y;",
   "d->c = (t - d->sum) - y;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "442c511dc21c9fed9b6032af704c76d56234184f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-07 22:52:02",
  "condition": [
   "x = strm_value_float(data);"
  ],
  "consequent": [
   "f = strm_value_float(data);",
   "y = f - d->c;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "442c511dc21c9fed9b6032af704c76d56234184f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-07 22:52:02",
  "condition": [
   "strm_emit(strm, strm_float_value(d->sum+d->c), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_float_value(d->sum), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "37bf41d79569eb2bf1da9ed2763f04947e1f1554",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-05 04:13:58",
  "condition": [
   "n = strm_var_get(ns, name, &m);",
   "if (n == STRM_NG) {",
   "  if (argc > 0 && strm_array_p(argv[0])) {",
   "    m = strm_str_value(name);"
  ],
  "consequent": [
   "if (ns == strm_ns_array && argc == 1 && strm_array_p(argv[0])) {",
   "  m = strm_str_value(name);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "37bf41d79569eb2bf1da9ed2763f04947e1f1554",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-05 04:13:58",
  "condition": [
   "}"
  ],
  "consequent": [
   "}",
   "else {",
   "  n = strm_var_get(ns, name, &m);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "37bf41d79569eb2bf1da9ed2763f04947e1f1554",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-12-05 04:13:58",
  "condition": [
   "if (n == STRM_OK && argc == 1) return STRM_OK;"
  ],
  "consequent": [
   "if (n == STRM_OK) return STRM_OK;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5e73da87f8704d0d1b550a74ba7f0e7e9cdf93f9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-11-29 18:02:49",
  "condition": [
   "strm_value args[3];"
  ],
  "consequent": [
   "strm_value args[2];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5e73da87f8704d0d1b550a74ba7f0e7e9cdf93f9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-11-29 18:02:49",
  "condition": [
   "args[0] = k;",
   "args[1] = kh_value(d->tbl, i);"
  ],
  "consequent": [
   "args[0] = kh_value(d->tbl, i);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5e73da87f8704d0d1b550a74ba7f0e7e9cdf93f9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-11-29 18:02:49",
  "condition": [
   "if (strm_funcall(strm, d->func, 3, args, &v) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(strm, d->func, 2, args, &v) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5e73da87f8704d0d1b550a74ba7f0e7e9cdf93f9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-11-29 18:02:49",
  "condition": [
   "args[2] = v;"
  ],
  "consequent": [
   "args[1] = v;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7256a257b0c224cdbd143f202d6d80b26303f4f2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-11-16 07:48:43",
  "condition": [
   "pend = b + plen;"
  ],
  "consequent": [
   "pend = strm_str_ptr(str) + strm_str_len(str);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7256a257b0c224cdbd143f202d6d80b26303f4f2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-11-16 07:48:43",
  "condition": [
   "p = t = b;"
  ],
  "consequent": [
   "t = p = strm_str_ptr(str);",
   "pend = p + strm_str_len(str) - slen;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7256a257b0c224cdbd143f202d6d80b26303f4f2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-11-16 07:48:43",
  "condition": [
   "b = t = p;"
  ],
  "consequent": [
   "t = p;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ad3539af103b8803f2a7377e15c6e6d517399213",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-09-12 22:31:27",
  "condition": [
   "move_cursor(d->llen+1-line, n);"
  ],
  "consequent": [
   "move_cursor(d->llen+2-line, n);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ad3539af103b8803f2a7377e15c6e6d517399213",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-09-12 22:31:27",
  "condition": [
   "move_cursor(i+2, d->dlen+1);"
  ],
  "consequent": [
   "move_cursor(i+3, d->dlen+1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e4b320d32784ad1cfff743296a463bfaad578a03",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-09-13 00:44:13",
  "condition": [
   "void* map = mmap(NULL, st.st_size, PROT_READ, MAP_PRIVATE, buf->fd, 0);"
  ],
  "consequent": [
   "buf->buf = mmap(NULL, st.st_size, PROT_READ, MAP_PRIVATE, buf->fd, 0);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e4b320d32784ad1cfff743296a463bfaad578a03",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-09-13 00:44:13",
  "condition": [
   "}",
   "else {",
   "  buf->buf = buf->beg = map;",
   "  buf->end = map + st.st_size;"
  ],
  "consequent": [
   "buf->end = buf->buf + st.st_size;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e4b320d32784ad1cfff743296a463bfaad578a03",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-09-13 00:44:13",
  "condition": [
   "buf->beg = buf->end = buf->buf;"
  ],
  "consequent": [
   "buf->beg = buf->buf;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e4b320d32784ad1cfff743296a463bfaad578a03",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-09-13 00:44:13",
  "condition": [
   "if (map == MAP_FAILED) {"
  ],
  "consequent": [
   "if (buf->buf != MAP_FAILED) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "53c7bbda6646e8ca7ae9c9a9c38f313e40692999",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 16:30:26",
  "condition": [
   "strm_state* ns = strm_ary_ns(v);"
  ],
  "consequent": [
   "strm_state* ns = strm_value_ns(v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd427b6ad0216847591407857fffa354185c4f45",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 15:54:38",
  "condition": [
   "return exec_var_stdev(strm, argc, args, ret, mode_variance);"
  ],
  "consequent": [
   "return exec_var_stdev(strm, argc, args, ret, FALSE);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd427b6ad0216847591407857fffa354185c4f45",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 15:54:38",
  "condition": [
   "  break;",
   "case mode_variance:"
  ],
  "consequent": [
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "var_finish(strm_stream* strm, strm_value data)",
   "{",
   "  struct stdev_data* d = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd427b6ad0216847591407857fffa354185c4f45",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 15:54:38",
  "condition": [
   "return exec_var_stdev(strm, argc, args, ret, mode_stdev);"
  ],
  "consequent": [
   "return exec_var_stdev(strm, argc, args, ret, TRUE);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd427b6ad0216847591407857fffa354185c4f45",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 15:54:38",
  "condition": [
   "exec_var_stdev(strm_stream* strm, int argc, strm_value* args, strm_value* ret, enum stdev_mode mode)"
  ],
  "consequent": [
   "exec_var_stdev(strm_stream* strm, int argc, strm_value* args, strm_value* ret, int stdev)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd427b6ad0216847591407857fffa354185c4f45",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 15:54:38",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_stdev, stdev_finish, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_stdev,",
   "                                         stdev ? stdev_finish : var_finish, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd427b6ad0216847591407857fffa354185c4f45",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 15:54:38",
  "condition": [
   " double s;",
   " switch (d->mode) {",
   " case mode_stdev:",
   "   s = sqrt(d->s2 / (d->num-1));"
  ],
  "consequent": [
   "double s = sqrt(d->s2 / (d->num-1));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd427b6ad0216847591407857fffa354185c4f45",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 15:54:38",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_stdevf, stdev_finish, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_stdevf,",
   "                                         stdev ? stdev_finish : var_finish, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd427b6ad0216847591407857fffa354185c4f45",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 15:54:38",
  "condition": [
   "s = d->s2 / (d->num-1);"
  ],
  "consequent": [
   "double s = d->s2 / (d->num-1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "x = strm_value_float(val);"
  ],
  "consequent": [
   "x = strm_value_flt(val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_value strm_float_value(double);"
  ],
  "consequent": [
   "strm_value strm_flt_value(double);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "b = strm_value_float(bv->v);"
  ],
  "consequent": [
   "b = strm_value_flt(bv->v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*val = strm_float_value(((node_float*)np)->value);"
  ],
  "consequent": [
   "*val = strm_flt_value(((node_float*)np)->value);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "double y = strm_value_float(v[i]) - c;"
  ],
  "consequent": [
   "double y = strm_value_flt(v[i]) - c;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "type = TYPE_FLOAT;"
  ],
  "consequent": [
   "type = TYPE_FLT;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(pow(x, y));"
  ],
  "consequent": [
   "*ret = strm_flt_value(pow(x, y));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(s2);"
  ],
  "consequent": [
   "*ret = strm_flt_value(s2);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "double x = strm_value_float(v[i]);"
  ],
  "consequent": [
   "double x = strm_value_flt(v[i]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_emit(strm, strm_float_value(d->n), gen_seq);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(d->n), gen_seq);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_emit(strm, strm_float_value(d->sum), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(d->sum), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if (n == strm_value_float(val))"
  ],
  "consequent": [
   "if (n == strm_value_flt(val))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(cos(f));"
  ],
  "consequent": [
   "*ret = strm_flt_value(cos(f));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if (type == TYPE_FLOAT) { /* second dot */"
  ],
  "consequent": [
   "if (type == TYPE_FLT) { /* second dot */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "double y = strm_value_float(p[next]);"
  ],
  "consequent": [
   "double y = strm_value_flt(p[next]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_float_value(double f)"
  ],
  "consequent": [
   "strm_flt_value(double f)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_emit(strm, strm_float_value(f), gen_rand);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(f), gen_rand);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "dx = strm_value_float(dv[0]) - sx; sx += dx / (i+1);"
  ],
  "consequent": [
   "dx = strm_value_flt(dv[0]) - sx; sx += dx / (i+1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "return strm_to_float(v);"
  ],
  "consequent": [
   "return strm_to_flt(v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_emit(strm, strm_float_value(s), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(s), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "int strm_float_p(strm_value);"
  ],
  "consequent": [
   "int strm_flt_p(strm_value);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "d = strm_value_float(args[1]);"
  ],
  "consequent": [
   "d = strm_value_flt(args[1]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_to_float(strm_value v)"
  ],
  "consequent": [
   "strm_to_flt(strm_value v)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(strm_value_float(x)-strm_value_float(y));"
  ],
  "consequent": [
   "*ret = strm_flt_value(strm_value_flt(x)-strm_value_flt(y));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*p = strm_value_float(ff);"
  ],
  "consequent": [
   "*p = strm_value_flt(ff);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "double x = strm_value_float(v);"
  ],
  "consequent": [
   "double x = strm_value_flt(v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "f = strm_value_float(args[0]);"
  ],
  "consequent": [
   "f = strm_value_flt(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(func(x*f)/f);\\"
  ],
  "consequent": [
   "*ret = strm_flt_value(func(x*f)/f);\\"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "double a = strm_value_float(x);"
  ],
  "consequent": [
   "double a = strm_value_flt(x);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "else if (strm_float_p(v)) {"
  ],
  "consequent": [
   "else if (strm_flt_p(v)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "a = strm_value_float(av->v);"
  ],
  "consequent": [
   "a = strm_value_flt(av->v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_var_def(state, \"PI\", strm_float_value(M_PI));"
  ],
  "consequent": [
   "strm_var_def(state, \"PI\", strm_flt_value(M_PI));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_emit(strm, strm_float_value(d->sum/d->num), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(d->sum/d->num), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(tan(f));"
  ],
  "consequent": [
   "*ret = strm_flt_value(tan(f));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "f = strm_value_float(e);"
  ],
  "consequent": [
   "f = strm_value_flt(e);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "args[1] = strm_float_value(-d);"
  ],
  "consequent": [
   "args[1] = strm_flt_value(-d);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "case TYPE_FLOAT:"
  ],
  "consequent": [
   "case TYPE_FLT:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "double strm_value_float(strm_value);"
  ],
  "consequent": [
   "double strm_value_flt(strm_value);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "assert(strm_float_p(v));"
  ],
  "consequent": [
   "assert(strm_flt_p(v));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if (strm_float_p(args[0])) {"
  ],
  "consequent": [
   "if (strm_flt_p(args[0])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "dx = strm_value_float(v[0]) - d->sx; d->sx += dx / d->n;"
  ],
  "consequent": [
   "dx = strm_value_flt(v[0]) - d->sx; d->sx += dx / d->n;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "double x = strm_value_float(data);"
  ],
  "consequent": [
   "double x = strm_value_flt(data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(-strm_value_float(args[0]));"
  ],
  "consequent": [
   "*ret = strm_flt_value(-strm_value_flt(args[0]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "dy = strm_value_float(dv[1]) - sy; sy += dy / (i+1);"
  ],
  "consequent": [
   "dy = strm_value_flt(dv[1]) - sy; sy += dy / (i+1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(sqrt(strm_value_float(args[0])));"
  ],
  "consequent": [
   "*ret = strm_flt_value(sqrt(strm_value_flt(args[0])));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "dy = strm_value_float(v[1]) - d->sy; d->sy += dy / d->n;"
  ],
  "consequent": [
   "dy = strm_value_flt(v[1]) - d->sy; d->sy += dy / d->n;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "TYPE_FLOAT,                  /* float */"
  ],
  "consequent": [
   "TYPE_FLT,                    /* float */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(sin(f));"
  ],
  "consequent": [
   "*ret = strm_flt_value(sin(f));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_emit(strm, strm_float_value(f), gen_rnorm);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(f), gen_rnorm);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(sum);"
  ],
  "consequent": [
   "*ret = strm_flt_value(sum);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(d);"
  ],
  "consequent": [
   "*ret = strm_flt_value(d);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if (strm_float_p(val)) {"
  ],
  "consequent": [
   "if (strm_flt_p(val)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "f = strm_value_float(data);"
  ],
  "consequent": [
   "f = strm_value_flt(data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(timeval_to_num(&t->tv));"
  ],
  "consequent": [
   "*ret = strm_flt_value(timeval_to_num(&t->tv));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "return strm_float_value((x + y)/2);"
  ],
  "consequent": [
   "return strm_flt_value((x + y)/2);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "double b = strm_value_float(y);"
  ],
  "consequent": [
   "double b = strm_value_flt(y);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_float_p(strm_value v)"
  ],
  "consequent": [
   "strm_flt_p(strm_value v)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "return strm_float_value(f);"
  ],
  "consequent": [
   "return strm_flt_value(f);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(sxy);"
  ],
  "consequent": [
   "*ret = strm_flt_value(sxy);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if (strm_float_p(v))"
  ],
  "consequent": [
   "if (strm_flt_p(v))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_emit(strm, strm_float_value(sxy), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(sxy), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "f = strm_value_float(val);"
  ],
  "consequent": [
   "f = strm_value_flt(val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(func(x));\\"
  ],
  "consequent": [
   "*ret = strm_flt_value(func(x));\\"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "return strm_value_float(a) == strm_value_float(b);"
  ],
  "consequent": [
   "return strm_value_flt(a) == strm_value_flt(b);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "x = strm_value_float(data);"
  ],
  "consequent": [
   "x = strm_value_flt(data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(sum/len);"
  ],
  "consequent": [
   "*ret = strm_flt_value(sum/len);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if ((((node_float*)pat)->value) == strm_value_float(val))"
  ],
  "consequent": [
   "if ((((node_float*)pat)->value) == strm_value_flt(val))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if (strm_float_p(x)) {"
  ],
  "consequent": [
   "if (strm_flt_p(x)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_var_def(state, \"E\", strm_float_value(M_E));"
  ],
  "consequent": [
   "strm_var_def(state, \"E\", strm_flt_value(M_E));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "num_to_timeval(strm_value_float(args[1]), &tv);"
  ],
  "consequent": [
   "num_to_timeval(strm_value_flt(args[1]), &tv);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(fmod(strm_value_float(x), y));"
  ],
  "consequent": [
   "*ret = strm_flt_value(fmod(strm_value_flt(x), y));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "num = strm_value_float(e);"
  ],
  "consequent": [
   "num = strm_value_flt(e);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if (strm_float_p(v)) {"
  ],
  "consequent": [
   "if (strm_flt_p(v)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(x/y);"
  ],
  "consequent": [
   "*ret = strm_flt_value(x/y);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(strm_value_float(x)+strm_value_float(y));"
  ],
  "consequent": [
   "*ret = strm_flt_value(strm_value_flt(x)+strm_value_flt(y));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "n = sprintf(buf, \"%.14g\", strm_to_float(v));"
  ],
  "consequent": [
   "n = sprintf(buf, \"%.14g\", strm_to_flt(v));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "strm_value_float(strm_value v)"
  ],
  "consequent": [
   "strm_value_flt(strm_value v)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "if (strm_int_p(v) || strm_float_p(v))"
  ],
  "consequent": [
   "if (strm_int_p(v) || strm_flt_p(v))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f01f9702e779daa6f8bd22bcb5b831a72be191a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:46:30",
  "condition": [
   "*ret = strm_float_value(strm_value_float(x)*strm_value_float(y));"
  ],
  "consequent": [
   "*ret = strm_flt_value(strm_value_flt(x)*strm_value_flt(y));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7f31a31f51d91583d1e517175350135d1522be38",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-09-08 23:56:36",
  "condition": [
   "d->has_spare = FALSE;"
  ],
  "consequent": [
   "d->has_spare = TRUE;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ae6842ee2dfaf84dbc3bc43c6772fcbda4d97b29",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-31 10:23:20",
  "condition": [
   "double f = rand_float(d->seed);"
  ],
  "consequent": [
   "uint32_t r = xorshift128(d->seed);",
   "double f = r*(1.0/4294967295.0);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a8971beaad8ce8582934a0a9413560c552b9d371",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:36:55",
  "condition": [
   "strm_emit(strm, strm_flt_value(f), gen_rand);"
  ],
  "consequent": [
   "strm_emit(strm, strm_int_value(r % d->limit), gen_rand);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a8971beaad8ce8582934a0a9413560c552b9d371",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:36:55",
  "condition": [
   "strm_get_args(strm, argc, args, \"|s\", &s, &len);"
  ],
  "consequent": [
   "strm_get_args(strm, argc, args, \"i|s\", &n, &s, &len);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "static uint32_t"
  ],
  "consequent": [
   "static uint64_t"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "uint32_t r = xorshift128(d->seed);"
  ],
  "consequent": [
   "uint64_t r = xorshift128plus(d->seed);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "uint32_t x = seed[0];"
  ],
  "consequent": [
   "uint64_t x = seed[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "uint32_t y;"
  ],
  "consequent": [
   "uint64_t x;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "seed[1] = y;"
  ],
  "consequent": [
   "return seed[1] + y;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "for (i=0; i<4; i++) {",
   "  y = y ^ (y << 13); y = y ^ (y >> 17);",
   "  y = y ^ (y << 5);"
  ],
  "consequent": [
   "x = x ^ (x << 13);",
   "x = x ^ (x >> 7);",
   "x = x ^ (x << 17);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "seed[i] = y;"
  ],
  "consequent": [
   "seed[0] = x;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "r = xorshift128(d->seed)%(d->i);"
  ],
  "consequent": [
   "r = xorshift128plus(d->seed)%(d->i);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "{ "
  ],
  "consequent": [
   "{"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "uint32_t seed[4];"
  ],
  "consequent": [
   "uint64_t seed[2];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "xorshift128(uint32_t seed[4])"
  ],
  "consequent": [
   "xorshift128plus(uint64_t seed[2])"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_producer, gen_rand, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_producer, gen_rand, fin_rand, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "y = 2463534242;"
  ],
  "consequent": [
   "x = 88172645463325252ULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "uint32_t y = seed[1];"
  ],
  "consequent": [
   "const uint64_t y = seed[1];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "y ^= (uint32_t)tv.tv_usec;"
  ],
  "consequent": [
   "x ^= (uint64_t)tv.tv_usec;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "uint32_t r;"
  ],
  "consequent": [
   "uint64_t r;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "xorshift128init(uint32_t seed[4])"
  ],
  "consequent": [
   "xorshift128init(uint64_t seed[2])"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "}",
   "return;"
  ],
  "consequent": [
   "x = x ^ (x << 13);",
   "x = x ^ (x >> 7);",
   "x = x ^ (x << 17);",
   "seed[1] = x;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3e90a2f99c2dde329b7117d13f3482a2bef1b6c4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-30 10:26:25",
  "condition": [
   "uint32_t z = seed[2];",
   "uint32_t w = seed[3]; ",
   "uint32_t t;",
   "t = x ^ (x << 11);",
   "x = y; y = z; z = w;",
   "w = (w ^ (w >> 19)) ^ (t ^ (t >> 8));",
   "seed[0] = x;"
  ],
  "consequent": [
   "seed[0] = y;",
   "x ^= x << 23; /* a */",
   "seed[1] = x ^ y ^ (x >> 17) ^ (y >> 26); /* b, c */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7960ff72be9c9dad75ee1195e276eb7a08e226ae",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-23 10:23:33",
  "condition": [
   "void strm_rand_init(strm_state* state);"
  ],
  "consequent": [
   "void xorshift64init(void);",
   "uint64_t xorshift64star(void);",
   "",
   "struct sample_data {",
   "  strm_int i;",
   "  strm_int len;",
   "  strm_value samples[0];",
   "};",
   "",
   "static int",
   "iter_sample(strm_stream* strm, strm_value data)",
   "{",
   "  struct sample_data* d = strm->data;",
   "  uint64_t r;",
   "",
   "  if (d->i < d->len) {",
   "    d->samples[d->i++] = data;",
   "    return STRM_OK;",
   "  }",
   "  xorshift64init();",
   "  r = xorshift64star()%(d->i);",
   "  if (r < d->len) {",
   "    d->samples[r] = data;",
   "  }",
   "  d->i++;",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "finish_sample(strm_stream* strm, strm_value data)",
   "{",
   "  struct sample_data* d = strm->data;",
   "  strm_int i, len=d->len;",
   "",
   "  for (i=0; i<len; i++) {",
   "    strm_emit(strm, d->samples[i], NULL);",
   "  }",
   "  free(d);",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "exec_sample(strm_stream* strm, int argc, strm_value* args, strm_value* ret)",
   "{",
   "  struct sample_data* d;",
   "  strm_int len;",
   "",
   "  strm_get_args(strm, argc, args, \"i\", &len);",
   "  d = malloc(sizeof(struct sample_data)+sizeof(strm_value)*len);",
   "  if (!d) return STRM_NG;",
   "  d->len = len;",
   "  d->i = 0;",
   "  *ret = strm_stream_value(strm_stream_new(strm_filter, iter_sample,",
   "                                           finish_sample, (void*)d));",
   "  return STRM_OK;",
   "}",
   ""
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_string name = node_to_sym(ns->name);",
   "strm_state* s = strm_ns_create(state, name);"
  ],
  "consequent": [
   "strm_state* s = strm_ns_find(state, node_to_sym(ns->name));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_ns_array = strm_ns_new(NULL, \"array\");"
  ],
  "consequent": [
   "strm_ns_array = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_state* s1 = strm_ns_get(node_to_sym(ns->name));"
  ],
  "consequent": [
   "strm_state* s1 = strm_ns_find(state, node_to_sym(ns->name));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_state* ns = strm_ns_get(node_to_sym(v0->ns));"
  ],
  "consequent": [
   "strm_ary_ns(arr) = strm_ns_get(node_to_sym(v0->ns));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "if (r == 0) {               /* r=0 ns already exists */",
   "  if (kh_value(nstbl, k))",
   "    return NULL;",
   "}",
   "s = malloc(sizeof(strm_state));",
   "if (s) {",
   "  *s = szero;"
  ],
  "consequent": [
   "*s = szero;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_ns_string = strm_ns_new(NULL, \"string\");"
  ],
  "consequent": [
   "strm_ns_string = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "ns_time = strm_ns_new(NULL, \"time\");"
  ],
  "consequent": [
   "ns_time = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_state* strm_ns_new(strm_state*, const char*);"
  ],
  "consequent": [
   "strm_state* strm_ns_new(strm_state*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "if (strm_ns_get(name)) {",
   "  strm_raise(strm, \"namespace already exists\");",
   "}",
   "else {",
   "  strm_raise(strm, \"failed to create namespace\");"
  ],
  "consequent": [
   "strm_raise(strm, \"failed to create namespace\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "if (strm_ary_len(a) > 0) {",
   "  buf[bi++] = ' ';"
  ],
  "consequent": [
   "buf[bi++] = ' ';"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "return NULL;              "
  ],
  "consequent": [
   "free(s);",
   "return NULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "ns_kvs = strm_ns_new(NULL, \"kvs\");"
  ],
  "consequent": [
   "ns_kvs = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_ns_create(strm_state* state, strm_string name)"
  ],
  "consequent": [
   "strm_ns_new(strm_state* state)",
   "{",
   "  strm_state* s = malloc(sizeof(strm_state));",
   "  if (!s) return NULL;",
   "  *s = szero;",
   "  s->prev = state;",
   "  return s;",
   "}",
   "",
   "strm_state*",
   "strm_ns_find(strm_state* state, strm_string name)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_ns_number = strm_ns_new(NULL, \"number\");"
  ],
  "consequent": [
   "strm_ns_number = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "ns_txn = strm_ns_new(NULL, \"kvs_txn\");"
  ],
  "consequent": [
   "ns_txn = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8f18816ddaf9908bdb29b323b61adbd62f476128",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-08-04 02:04:37",
  "condition": [
   "strm_state* strm_ns_create(strm_state*, strm_string);"
  ],
  "consequent": [
   "strm_state* strm_ns_find(strm_state*, strm_string);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "NODE_PARRAY,"
  ],
  "consequent": [
   "NODE_PATTERN,",
   "NODE_DECONS,"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "extern node* node_psplat_new(node*,node*,node*);"
  ],
  "consequent": [
   "extern node* node_decons_new(node*,node*,node*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "VALUES_NEW(node_nodes, type, {});"
  ],
  "consequent": [
   "VALUES_NEW(node_nodes, NODE_PATTERN, {});"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "node_pattern_new(node_type type) /* type: either NODE_PARRAY or NODE_PSTRUCT */"
  ],
  "consequent": [
   "node_pattern_new()"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "node_psplat_new(node* head, node* mid, node* tail)"
  ],
  "consequent": [
   "node_decons_new(node* head, node* mid, node* tail)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "case NODE_PSTRUCT:",
   "  printf(\"PSTRUCT:\\n\");",
   "  {",
   "    node_nodes* ary = (node_nodes*)np;",
   "    for (i = 0; i < ary->len; i++)",
   "      dump_node(ary->data[i], indent+1);",
   "  }",
   "  break;",
   "case NODE_PSPLAT:"
  ],
  "consequent": [
   "case NODE_SPLAT:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "printf(\"PSPLAT:\\n\");"
  ],
  "consequent": [
   "printf(\"SPLAT:\\n\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "case NODE_NS:"
  ],
  "consequent": [
   "case NODE_PATTERN:",
   "case NODE_DECONS:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "node_nodes* tail = (node_nodes*)psp->tail;"
  ],
  "consequent": [
   "node_nodes* tail = (node_nodes*)cons->tail;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "if (npat->type == NODE_PSPLAT) {"
  ],
  "consequent": [
   "if (npat->type == NODE_DECONS) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "cons->type = NODE_PSPLAT;"
  ],
  "consequent": [
   "cons->type = NODE_DECONS;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "node* rest = psp->mid;"
  ],
  "consequent": [
   "node* rest = cons->mid;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "node_nodes* head = (node_nodes*)psp->head;"
  ],
  "consequent": [
   "node_nodes* head = (node_nodes*)cons->head;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "node_psplat* psp = (node_psplat*)pat;"
  ],
  "consequent": [
   "node_decons* cons = (node_decons*)pat;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "node_psplat* cons = (node_psplat*)np;"
  ],
  "consequent": [
   "    node_splat* splat = (node_splat*)np;",
   "    dump_node(splat->node, indent+1);",
   "  }",
   "  break;",
   "case NODE_DECONS:",
   "  printf(\"DECONS:\\n\");",
   "  {",
   "    node_decons* cons = (node_decons*)np;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "case NODE_PARRAY:"
  ],
  "consequent": [
   "case NODE_PATTERN:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "printf(\"PARRAY:\\n\");"
  ],
  "consequent": [
   "printf(\"PATTERN:\\n\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "node_psplat* cons = malloc(sizeof(node_psplat));"
  ],
  "consequent": [
   "node_decons* cons = malloc(sizeof(node_decons));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "46ec8cd60cc49f4b4f7f716c2faf267eb6672050",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:13:49",
  "condition": [
   "} node_psplat;"
  ],
  "consequent": [
   "} node_decons;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d58a57e1ed6687d48743e84aec0c00d0f841fe89",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-07-27 12:10:00",
  "condition": [
   "if (ns->body)",
   "  return exec_expr(strm, s, ns->body, val);"
  ],
  "consequent": [
   "return exec_expr(strm, s, ns->body, val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "23253343e6bc67d82a78c9743439364475e5cbc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-25 04:10:11",
  "condition": [
   "if (pat == NULL) return STRM_OK; /* case else */"
  ],
  "consequent": [
   "if (pat == NULL) {",
   "  if (argc == 0) return STRM_OK;",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "case NODE_SPLAT:",
   "  printf(\"SPLAT:\\n\");",
   "  {",
   "    node_splat* splat = (node_splat*)np;",
   "    dump_node(splat->node, indent+1);",
   "  }",
   "  break;",
   "case NODE_DECONS:"
  ],
  "consequent": [
   "case NODE_CONS:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "if (v0->data[i]->type == NODE_SPLAT) {",
   "  node_splat* s = (node_splat*)v0->data[i];",
   "  n = exec_expr(strm, state, s->node, &ptr[i]);"
  ],
  "consequent": [
   "n = exec_expr(strm, state, v0->data[i], ptr);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "cons->head = head;"
  ],
  "consequent": [
   "cons->car = head;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "int splat = FALSE;"
  ],
  "consequent": [
   "int i=0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "dump_node(cons->mid, indent+2);"
  ],
  "consequent": [
   "dump_node(cons->cdr, indent+2);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "extern node* node_decons_new(node*,node*,node*);"
  ],
  "consequent": [
   "extern node* node_cons_new(node*,node*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "printf(\"DECONS:\\n\");"
  ],
  "consequent": [
   "printf(\"CONS:\\n\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "strm_value *ptr = strm_ary_ptr(arr);"
  ],
  "consequent": [
   "strm_value *ptr = (strm_value*)strm_ary_ptr(arr);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "for (int i = 0; i < v0->len; i++) {"
  ],
  "consequent": [
   "for (i = 0; i < v0->len; i++, ptr++) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "node* head;"
  ],
  "consequent": [
   "node* car;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "dump_node(cons->head, indent+1);"
  ],
  "consequent": [
   "dump_node(cons->car, indent+1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "  if (!strm_array_p(ptr[i])) {",
   "    strm_raise(strm, \"splat requires array\");",
   "    return STRM_NG;",
   "  }",
   "  splat = TRUE;",
   "}"
  ],
  "consequent": [
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "NODE_DECONS,"
  ],
  "consequent": [
   "NODE_CONS,"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "  node* tail;",
   "} node_decons;"
  ],
  "consequent": [
   "} node_cons;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "strm_value *args;",
   "int splat = FALSE;"
  ],
  "consequent": [
   "strm_value *args = malloc(sizeof(strm_value)*v0->len);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "cons->mid = mid;",
   "cons->tail = tail;"
  ],
  "consequent": [
   "cons->cdr = tail;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "       else {",
   "         n = exec_expr(strm, state, v0->data[i], &ptr[i]);",
   "         if (n) return n;",
   "       }",
   "     }",
   "     if (splat) {",
   "       int len = v0->len;",
   "       if (v0->headers) {"
  ],
  "consequent": [
   "if (v0->headers) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "if (v0->data[i]->type == NODE_SPLAT) {",
   "  splat = TRUE;"
  ],
  "consequent": [
   "n = exec_expr(strm, state, v0->data[i], &args[i]);",
   "if (n == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "node_decons* cons = malloc(sizeof(node_decons));"
  ],
  "consequent": [
   "node_cons* cons = malloc(sizeof(node_cons));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "cons->type = NODE_DECONS;"
  ],
  "consequent": [
   "cons->type = NODE_CONS;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "node* mid;"
  ],
  "consequent": [
   "node* cdr;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "node_decons_new(node* head, node* mid, node* tail)"
  ],
  "consequent": [
   "node_cons_new(node* head, node* tail)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "break;"
  ],
  "consequent": [
   "free(args);",
   "return n;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "node_decons* cons = (node_decons*)np;"
  ],
  "consequent": [
   "node_cons* cons = (node_cons*)np;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "09f02e39635dfaa6d122f5cb892093f3544c83c9",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-24 13:02:52",
  "condition": [
   "if (!splat) free(args);"
  ],
  "consequent": [
   "free(args);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "62414be0fc06be19d4177a1589f72d78cebd0e21",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 10:40:20",
  "condition": [
   "  break;",
   "}",
   "strm_raise(strm, \"not a function\");"
  ],
  "consequent": [
   "  strm_raise(strm, \"not a function\");",
   "  break;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "62414be0fc06be19d4177a1589f72d78cebd0e21",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 10:40:20",
  "condition": [
   "break;"
  ],
  "consequent": [
   "else {",
   "  strm_raise(strm, \"not a function\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c60664e93f4abfde9d38fae009877a2b581bc84c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 10:14:08",
  "condition": [
   "if (pattern_placeholder_p(ni->name))",
   "  return STRM_OK;",
   "return strm_var_match(state, node_to_sym(ni->name), val);"
  ],
  "consequent": [
   "return strm_var_set(state, node_to_sym(ni->name), val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "goto err;"
  ],
  "consequent": [
   "  strm->exc->fname = nlbd->fname;",
   "  strm->exc->lineno = nlbd->lineno;",
   "}",
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "node* body;"
  ],
  "consequent": [
   "node* compstmt;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   " if (lambda->body->type == NODE_LAMBDA) {",
   "   node_lambda* nlmbd = (node_lambda*)lambda->body;",
   "   node_args* args = (node_args*)nlmbd->args;",
   "   if (args == NULL) {"
  ],
  "consequent": [
   "if (args == NULL) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "node_free(((node_lambda*)np)->body);"
  ],
  "consequent": [
   "node_free(((node_lambda*)np)->compstmt);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "argerr:"
  ],
  "consequent": [
   "argerr:",
   "  if (strm) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "return lambda->body;"
  ],
  "consequent": [
   "return lambda->compstmt;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "lambda->body = compstmt;"
  ],
  "consequent": [
   "lambda->compstmt = compstmt;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "  dump_node(((node_lambda*)np)->body, indent+1);",
   "  break;",
   "case NODE_PLAMBDA:",
   "  printf(\"PLAMBDA:\\n\");",
   "  dump_node(((node_plambda*)np)->pat, indent+1);"
  ],
  "consequent": [
   "dump_node(((node_lambda*)np)->compstmt, indent+1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "n = exec_expr(strm, &c, lambda->body->body, &ret);"
  ],
  "consequent": [
   "n = exec_expr(strm, &c, lambda->body->compstmt, &ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f07dcde39a5ddd38fff422e7925a79bd4ae27a7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-14 00:39:38",
  "condition": [
   "n = exec_expr(strm, &c, nlmbd->body, ret);"
  ],
  "consequent": [
   "n = exec_expr(strm, &c, nlbd->compstmt, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "dbcd28f812b60a8765a45f849ccffb283c8b3e49",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-16 13:06:24",
  "condition": [
   "if (s == NULL) {"
  ],
  "consequent": [
   "if (s == NULL) s = rend;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "dbcd28f812b60a8765a45f849ccffb283c8b3e49",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-16 13:06:24",
  "condition": [
   "  h[i] = strm_nil_value();",
   "}",
   "else {",
   "  str = strm_str_intern(p, s-p);"
  ],
  "consequent": [
   "str = strm_str_intern(p, s-p);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e47a2e4e76ddab1a482a21cf412e2753abb318f6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 21:02:33",
  "condition": [
   "strm_emit(strm, strm_ary_value(ary), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_str_value(ary), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "42b9bf7199ecdad7ef369c00983883c18b646359",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 17:26:26",
  "condition": [
   "case '\\t':",
   "  if (*ptr == sep)",
   "    cnt++;"
  ],
  "consequent": [
   "cnt++;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "42b9bf7199ecdad7ef369c00983883c18b646359",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 17:26:26",
  "condition": [
   "sv(strm_stream* strm, int argc, strm_value* args, strm_value* ret, char sep)"
  ],
  "consequent": [
   "csv(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "42b9bf7199ecdad7ef369c00983883c18b646359",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 17:26:26",
  "condition": [
   "count_fields(strm_string line, char sep)"
  ],
  "consequent": [
   "count_fields(strm_string line)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "42b9bf7199ecdad7ef369c00983883c18b646359",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 17:26:26",
  "condition": [
   "sv_finish(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "csv_finish(strm_stream* strm, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "42b9bf7199ecdad7ef369c00983883c18b646359",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 17:26:26",
  "condition": [
   "sv_accept(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "csv_accept(strm_stream* strm, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "42b9bf7199ecdad7ef369c00983883c18b646359",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 17:26:26",
  "condition": [
   "fieldcnt = count_fields(line, cd->sep);"
  ],
  "consequent": [
   "fieldcnt = count_fields(line);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "42b9bf7199ecdad7ef369c00983883c18b646359",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-15 17:26:26",
  "condition": [
   "t = strm_stream_new(strm_filter, sv_accept, sv_finish, (void*)cd);"
  ],
  "consequent": [
   "t = strm_stream_new(strm_filter, csv_accept, csv_finish, (void*)cd);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3b3e15cc0cf124556081cf8077627724a9f5089c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-13 21:15:53",
  "condition": [
   "_v->data = realloc(_v->data, sizeof(type2) * _v->max);\\"
  ],
  "consequent": [
   "_v->data = realloc(_v->data, sizeof(type1) * _v->max);\\"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ed9a8a7a59d66eb8d2dd98ac8879d44f447c7654",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-09 22:53:21",
  "condition": [
   "strm_get_args(strm, argc, args, \"N\", ret);"
  ],
  "consequent": [
   " double x;",
   " strm_get_args(strm, argc, args, \"f\", &x);",
   " *ret = strm_flt_value(x);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "516ccc8391d4b195a036526391521cbb965f13c5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-09 15:17:50",
  "condition": [
   "nif->then = cond_body(then);"
  ],
  "consequent": [
   "nif->then = then;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "516ccc8391d4b195a036526391521cbb965f13c5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-09 15:17:50",
  "condition": [
   "nif->opt_else = cond_body(opt_else);"
  ],
  "consequent": [
   "nif->opt_else = opt_else;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "516ccc8391d4b195a036526391521cbb965f13c5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-09 15:17:50",
  "condition": [
   "node_lambda_alloc(node* args, node* compstmt, int block)"
  ],
  "consequent": [
   "node_lambda_new(node* args, node* compstmt)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a6341d2547f82a90fc8df7861a80898d8badb19e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 20:13:23",
  "condition": [
   "strm_raise(strm, \"fread() failed\");"
  ],
  "consequent": [
   "strm_raise(strm, \"fopen() failed\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8c3d440a63637835378856094d9e414ea165c1b5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-07 09:24:17",
  "condition": [
   "if (strm_ptr_tag_p(func, STRM_PTR_GENFUNC)) {",
   "  struct strm_genfunc *gf = strm_value_vptr(func);",
   "  return exec_call(strm, gf->state, gf->id, argc, argv, ret);",
   "}",
   "else if (strm_lambda_p(func)) {"
  ],
  "consequent": [
   "if (!strm_lambda_p(func)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8c3d440a63637835378856094d9e414ea165c1b5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-07 09:24:17",
  "condition": [
   "",
   "/* ----- generic function */",
   "struct strm_genfunc {",
   "  STRM_PTR_HEADER;",
   "  strm_state* state;",
   "  strm_string id;",
   "};"
  ],
  "consequent": [
   "#endif"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "9de952261b75b6cc2b719292dc80efde5e35160f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 20:09:27",
  "condition": [
   "return STRM_OK;"
  ],
  "consequent": [
   "  return STRM_OK;",
   "}",
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "9de952261b75b6cc2b719292dc80efde5e35160f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 20:09:27",
  "condition": [
   "*ret = strm_flt_value(strm_value_flt(x)*strm_value_flt(y));"
  ],
  "consequent": [
   "if (strm_flt_p(x) && strm_flt_p(y)) {",
   "  *ret = strm_flt_value(strm_value_flt(x)*strm_value_flt(y));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "9fd2407d2d4b2fa39337b1395011e053e54023f5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 18:14:13",
  "condition": [
   "if (fd < 0) {",
   "  strm_raise(strm, \"fopen() failed\");",
   "  return STRM_NG;"
  ],
  "consequent": [
   "if (fd < 0) return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0d375b8a1251896799b10e81187ad933519373a8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 17:54:37",
  "condition": [
   "if (!strm_nil_p(data)) {"
  ],
  "consequent": [
   "if (strm->dst && !strm_nil_p(data)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0d375b8a1251896799b10e81187ad933519373a8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 17:54:37",
  "condition": [
   "if (src->dst == NULL) {"
  ],
  "consequent": [
   "assert(src->dst == NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0d375b8a1251896799b10e81187ad933519373a8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 17:54:37",
  "condition": [
   "if (strm->dst) {",
   "  strm_task_push(strm->dst, strm->dst->start_func, data);"
  ],
  "consequent": [
   "strm_task_push(strm->dst, strm->dst->start_func, data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0d375b8a1251896799b10e81187ad933519373a8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 17:54:37",
  "condition": [
   "strm_stream* dst;"
  ],
  "consequent": [
   "strm_stream *dst;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fc221640732dc2bcf5d7f2dbc054b57d0c053201",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-06-08 17:53:46",
  "condition": [
   "struct map_data* d;"
  ],
  "consequent": [
   "struct map_data* d = malloc(sizeof(struct map_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c14a088d1e8e18a6b3168ed365b31eaae04f43c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 20:08:41",
  "condition": [
   "if (strm_value_tag(a) != strm_value_tag(b)) goto typediff;"
  ],
  "consequent": [
   "if (strm_value_tag(a) != strm_value_tag(b)) return FALSE;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "v = argv[arg_i++];"
  ],
  "consequent": [
   "*p = argv[arg_i++];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "strm_array a;"
  ],
  "consequent": [
   "strm_value v;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "if (!strm_array_p(v)) {"
  ],
  "consequent": [
   "if (!strm_array_p(*p)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "strm_array* p;",
   "strm_value v;"
  ],
  "consequent": [
   "strm_value* p;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "strm_get_args(strm, argc, args, \"A|i\", &a, &n);"
  ],
  "consequent": [
   "strm_get_args(strm, argc, args, \"A|i\", &v, &n);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "d->ary = a;"
  ],
  "consequent": [
   "d->ary = strm_value_ary(v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "p = va_arg(ap, strm_array*);"
  ],
  "consequent": [
   "p = va_arg(ap, strm_value*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "strm_array ary;"
  ],
  "consequent": [
   "strm_value ary;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0c3f3ca77fb48b2595bce01d526651fe093ef023",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 09:49:36",
  "condition": [
   "A:      array          [strm_array]"
  ],
  "consequent": [
   "A:      array          [strm_value]"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "tcp_socket(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "tcp_socket(strm_stream* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "sprintf(sbuf, \"%d\", (int)strm_value_int(srv));"
  ],
  "consequent": [
   "sprintf(sbuf, \"%d\", (int)strm_value_int(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "strm_string str = strm_value_str(srv);"
  ],
  "consequent": [
   "strm_string str = strm_value_str(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "strm_raise(strm, \"socket error: connect\");"
  ],
  "consequent": [
   "strm_raise(task, \"socket error: connect\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "tcp_server(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "tcp_server(strm_stream* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "if (strm_number_p(srv)) {"
  ],
  "consequent": [
   "if (strm_number_p(args[1])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &srv);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(task, \"tcp_server: wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "strm_string str = strm_value_str(srv);"
  ],
  "consequent": [
   "strm_string str = strm_value_str(args[1]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "strm_raise(strm, gai_strerror(s));"
  ],
  "consequent": [
   "strm_raise(task, gai_strerror(s));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "sprintf(buf, \"%d\", (int)strm_value_int(srv));"
  ],
  "consequent": [
   "sprintf(buf, \"%d\", (int)strm_value_int(args[0]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "strm_get_args(strm, argc, args, \"Sv\", &host, &srv);"
  ],
  "consequent": [
   "if (argc != 2) {",
   "  strm_raise(task, \"tcp_socket: wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "host = strm_value_str(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "strm_raise(strm, \"socket error: listen\");"
  ],
  "consequent": [
   "strm_raise(task, \"socket error: listen\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "if (strm_number_p(srv)) {"
  ],
  "consequent": [
   "if (strm_number_p(args[0])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ab18f074089d16512297e2a6ed3d5ae410b66c91",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:57:12",
  "condition": [
   "strm_raise(strm, \"socket error: bind\");"
  ],
  "consequent": [
   "strm_raise(task, \"socket error: bind\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4e58d86744213ab3306726a1d15ab8ed6536a46f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-27 01:48:25",
  "condition": [
   "*ret = strm_io_new(sock, STRM_IO_READ|STRM_IO_WRITE|STRM_IO_FLUSH);"
  ],
  "consequent": [
   "*ret = strm_ptr_value((void*)strm_io_new(sock,",
   "STRM_IO_READ|STRM_IO_WRITE|STRM_IO_FLUSH));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a2e4b4ca0242442591aa0a7baf66cffa87e38425",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:39:43",
  "condition": [
   "A:      array          [strm_value]"
  ],
  "consequent": [
   "A:      array          [strm_value]            when ! follows, the value may be nil"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a2e4b4ca0242442591aa0a7baf66cffa87e38425",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:39:43",
  "condition": [
   "s:      string         [char*,strm_int]        takes two arguments"
  ],
  "consequent": [
   "s:      string         [char*,strm_int]        takes two arguments; s! gives (NULL,0) for nil"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a2e4b4ca0242442591aa0a7baf66cffa87e38425",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:39:43",
  "condition": [
   "a:      array          [strm_value*,strm_int]  takes two arguments"
  ],
  "consequent": [
   "a:      array          [strm_value*,strm_int]  takes two arguments; a! gives (NULL,0) for nil"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a2e4b4ca0242442591aa0a7baf66cffa87e38425",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:39:43",
  "condition": [
   "if (!strm_string_p(ss)) {"
  ],
  "consequent": [
   "if (*format == '!') {",
   "  format++;",
   "  if (strm_nil_p(ss)) {",
   "    nil_ok = TRUE;",
   "    break;",
   "  }",
   "}",
   "if (!strm_string_p(ss) && (nil_ok == FALSE || !strm_nil_p(ss))) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a2e4b4ca0242442591aa0a7baf66cffa87e38425",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:39:43",
  "condition": [
   "S:      string         [strm_string]"
  ],
  "consequent": [
   "S:      string         [strm_string]           when ! follows, the value may be nil"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bd9a574dd78591be077cf4a75f0ef5e4f01761c0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:37:21",
  "condition": [
   "s:      string         [char*,strm_int]        takes two arguments; s! gives (NULL,0) for nil"
  ],
  "consequent": [
   "s:      string         [char*,strm_int]        Receive two arguments; s! gives (NULL,0) for nil"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bd9a574dd78591be077cf4a75f0ef5e4f01761c0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:37:21",
  "condition": [
   "b:      boolean        [strm_int]"
  ],
  "consequent": [
   "b:      Boolean        [strm_int]"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bd9a574dd78591be077cf4a75f0ef5e4f01761c0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:37:21",
  "condition": [
   "|:      optional                               next argument of '|' and later are optional"
  ],
  "consequent": [
   "|:      optional                               Next argument of '|' and later are optional."
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bd9a574dd78591be077cf4a75f0ef5e4f01761c0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:37:21",
  "condition": [
   "a:      array          [strm_value*,strm_int]  takes two arguments; a! gives (NULL,0) for nil"
  ],
  "consequent": [
   "a:      Array          [strm_value*,strm_int]  Receive two arguments; a! gives (NULL,0) for nil"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bd9a574dd78591be077cf4a75f0ef5e4f01761c0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:37:21",
  "condition": [
   "i:      number         [strm_int]              truncate float number to integer"
  ],
  "consequent": [
   "i:      Integer        [strm_int]"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bd9a574dd78591be077cf4a75f0ef5e4f01761c0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:37:21",
  "condition": [
   "N:      number         [strm_value]            receive either integer or float",
   "f:      number         [double]"
  ],
  "consequent": [
   "f:      Float          [double]"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bd9a574dd78591be077cf4a75f0ef5e4f01761c0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:37:21",
  "condition": [
   "?:      optional given [strm_int]              true if preceding (optional) argument is given"
  ],
  "consequent": [
   "?:      optional given [strm_int]              true if preceding argument (optional) is given."
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1b85c7b8da69364a34872f6e35bd6d6a688552c7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:36:49",
  "condition": [
   "strm_get_args(strm, argc, args, \"NN\", &x, &y);"
  ],
  "consequent": [
   "strm_get_args(strm, argc, args, \"vv\", &x, &y);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1b85c7b8da69364a34872f6e35bd6d6a688552c7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 12:36:49",
  "condition": [
   "strm_get_args(strm, argc, args, \"Ni\", &x, &y);"
  ],
  "consequent": [
   "strm_get_args(strm, argc, args, \"vi\", &x, &y);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "03b85696c19ff6300d86cf1acb3c43a8075d0db2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:20:12",
  "condition": [
   "if (strm_number_p(x) && strm_number_p(y)) {"
  ],
  "consequent": [
   "if (strm_flt_p(x) && strm_flt_p(y)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(v)) return TYPE_NUM;"
  ],
  "consequent": [
   "if (strm_num_p(v)) return TYPE_NUM;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(args[1])) {"
  ],
  "consequent": [
   "if (strm_num_p(args[1])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (!strm_number_p(data)) {"
  ],
  "consequent": [
   "if (!strm_num_p(data)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(a)) {"
  ],
  "consequent": [
   "if (strm_num_p(a)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(p[next])) {"
  ],
  "consequent": [
   "if (strm_num_p(p[next])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (len%2 == 0 && strm_number_p(v)) {"
  ],
  "consequent": [
   "if (len%2 == 0 && strm_num_p(v)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "strm_number_p(strm_value v)"
  ],
  "consequent": [
   "strm_num_p(strm_value v)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (!strm_number_p(val)) {"
  ],
  "consequent": [
   "if (!strm_num_p(val)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (!strm_number_p(v[0]) || !strm_number_p(v[1])) {"
  ],
  "consequent": [
   "if (!strm_num_p(v[0]) || !strm_num_p(v[1])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(av->v)) {"
  ],
  "consequent": [
   "if (strm_num_p(av->v)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(args[0])) {"
  ],
  "consequent": [
   "if (strm_num_p(args[0])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(idx)) {"
  ],
  "consequent": [
   "if (strm_num_p(idx)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(bv->v)) {"
  ],
  "consequent": [
   "if (strm_num_p(bv->v)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "int strm_number_p(strm_value);"
  ],
  "consequent": [
   "int strm_num_p(strm_value);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (!strm_number_p(s)) {"
  ],
  "consequent": [
   "if (!strm_num_p(s)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(b)) {"
  ],
  "consequent": [
   "if (strm_num_p(b)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (!strm_number_p(ff)) {"
  ],
  "consequent": [
   "if (!strm_num_p(ff)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (strm_number_p(x) && strm_number_p(y)) {"
  ],
  "consequent": [
   "if (strm_num_p(x) && strm_num_p(y)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fa3a1da5b3e5eae37a65adde681a25f90f90d5e5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 10:14:23",
  "condition": [
   "if (!strm_number_p(args[1])) {"
  ],
  "consequent": [
   "if (!strm_num_p(args[1])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "90293d708d0d3f189f7199165d2f59ad6559cfbc",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:44:31",
  "condition": [
   "newns->body = body;"
  ],
  "consequent": [
   "nns->body = body;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "90293d708d0d3f189f7199165d2f59ad6559cfbc",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:44:31",
  "condition": [
   "return (node*)newns;"
  ],
  "consequent": [
   "return (node*)nns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "90293d708d0d3f189f7199165d2f59ad6559cfbc",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:44:31",
  "condition": [
   "node_ns* newns = malloc(sizeof(node_ns));"
  ],
  "consequent": [
   "node_ns* nns = malloc(sizeof(node_ns));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "90293d708d0d3f189f7199165d2f59ad6559cfbc",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:44:31",
  "condition": [
   "newns->type = NODE_NS;"
  ],
  "consequent": [
   "nns->type = NODE_NS;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "90293d708d0d3f189f7199165d2f59ad6559cfbc",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:44:31",
  "condition": [
   "newns->name = name;"
  ],
  "consequent": [
   "nns->name = name;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"median\", strm_cfunc_value(ary_median));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"median\", strm_cfunc_value(ary_median));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_string, \"length\", strm_cfunc_value(str_length));"
  ],
  "consequent": [
   "strm_var_def(strm_string_ns, \"length\", strm_cfunc_value(str_length));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_string, \"number\", strm_cfunc_value(str_number));"
  ],
  "consequent": [
   "strm_var_def(strm_string_ns, \"number\", strm_cfunc_value(str_number));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"max\", strm_cfunc_value(ary_max));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"max\", strm_cfunc_value(ary_max));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"sort\", strm_cfunc_value(ary_sort));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"sort\", strm_cfunc_value(ary_sort));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_ns_array = strm_ns_new(NULL);"
  ],
  "consequent": [
   "strm_array_ns = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "t->ns = ns_txn;"
  ],
  "consequent": [
   "t->ns = txn_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"+\", strm_cfunc_value(time_plus));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"+\", strm_cfunc_value(time_plus));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_kvs, \"put\", strm_cfunc_value(kvs_put));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"put\", strm_cfunc_value(kvs_put));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "extern strm_state* strm_ns_array;"
  ],
  "consequent": [
   "extern strm_state* strm_array_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "ns_kvs = strm_ns_new(NULL);"
  ],
  "consequent": [
   "kvs_ns = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"day\", strm_cfunc_value(time_day));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"day\", strm_cfunc_value(time_day));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_txn, \"put\", strm_cfunc_value(txn_put));"
  ],
  "consequent": [
   "strm_var_def(txn_ns, \"put\", strm_cfunc_value(txn_put));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "t->ns = ns_time;"
  ],
  "consequent": [
   "t->ns = time_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"string\", strm_cfunc_value(time_str));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"string\", strm_cfunc_value(time_str));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "return strm_ns_string;"
  ],
  "consequent": [
   "return strm_string_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"number\", strm_cfunc_value(time_num));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"number\", strm_cfunc_value(time_num));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_kvs, \"close\", strm_cfunc_value(kvs_close));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"close\", strm_cfunc_value(kvs_close));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"weekday\", strm_cfunc_value(time_weekday));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"weekday\", strm_cfunc_value(time_weekday));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"stdev\", strm_cfunc_value(ary_stdev));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"stdev\", strm_cfunc_value(ary_stdev));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_ns_string = strm_ns_new(NULL);"
  ],
  "consequent": [
   "strm_string_ns = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"minute\", strm_cfunc_value(time_min));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"minute\", strm_cfunc_value(time_min));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"min\", strm_cfunc_value(ary_min));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"min\", strm_cfunc_value(ary_min));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_kvs, \"string\", strm_cfunc_value(kvs_str));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"string\", strm_cfunc_value(kvs_str));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "if (t->ns != ns_time) return NULL;"
  ],
  "consequent": [
   "if (t->ns != time_ns) return NULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "extern strm_state* strm_ns_string;"
  ],
  "consequent": [
   "extern strm_state* strm_string_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "ns_time = strm_ns_new(NULL);"
  ],
  "consequent": [
   "time_ns = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"flatmap\", strm_cfunc_value(ary_flatmap));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"flatmap\", strm_cfunc_value(ary_flatmap));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "static strm_state* ns_kvs;"
  ],
  "consequent": [
   "static strm_state* kvs_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "k->ns = ns_kvs;"
  ],
  "consequent": [
   "k->ns = kvs_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_kvs, \"update\", strm_cfunc_value(kvs_update));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"update\", strm_cfunc_value(kvs_update));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_state* strm_ns_array;"
  ],
  "consequent": [
   "strm_state* strm_array_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"length\", strm_cfunc_value(ary_length));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"length\", strm_cfunc_value(ary_length));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"month\", strm_cfunc_value(time_month));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"month\", strm_cfunc_value(time_month));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"hour\", strm_cfunc_value(time_hour));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"hour\", strm_cfunc_value(time_hour));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"-\", strm_cfunc_value(time_minus));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"-\", strm_cfunc_value(time_minus));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_state* strm_ns_string;"
  ],
  "consequent": [
   "strm_state* strm_string_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"each\", strm_cfunc_value(ary_each));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"each\", strm_cfunc_value(ary_each));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "static strm_state* ns_txn;"
  ],
  "consequent": [
   "static strm_state* txn_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_kvs, \"txn\", strm_cfunc_value(kvs_txn));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"txn\", strm_cfunc_value(kvs_txn));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"variance\", strm_cfunc_value(ary_var));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"variance\", strm_cfunc_value(ary_var));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"second\", strm_cfunc_value(time_sec));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"second\", strm_cfunc_value(time_sec));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "static strm_state* ns_time;"
  ],
  "consequent": [
   "static strm_state* time_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_kvs, \"get\", strm_cfunc_value(kvs_get));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"get\", strm_cfunc_value(kvs_get));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"year\", strm_cfunc_value(time_year));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"year\", strm_cfunc_value(time_year));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_kvs, \"string\", strm_cfunc_value(txn_str));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"string\", strm_cfunc_value(txn_str));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"sum\", strm_cfunc_value(ary_sum));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"sum\", strm_cfunc_value(ary_sum));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "return strm_ns_array;"
  ],
  "consequent": [
   "return strm_array_ns;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "ns_txn = strm_ns_new(NULL);"
  ],
  "consequent": [
   "txn_ns = strm_ns_new(NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_time, \"nanosecond\", strm_cfunc_value(time_nanosec));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"nanosecond\", strm_cfunc_value(time_nanosec));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_txn, \"get\", strm_cfunc_value(txn_get));"
  ],
  "consequent": [
   "strm_var_def(txn_ns, \"get\", strm_cfunc_value(txn_get));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"map\", strm_cfunc_value(ary_map));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"map\", strm_cfunc_value(ary_map));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"average\", strm_cfunc_value(ary_avg));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"average\", strm_cfunc_value(ary_avg));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"correl\", strm_cfunc_value(ary_correl));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"correl\", strm_cfunc_value(ary_correl));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_string, \"split\", strm_cfunc_value(str_split));"
  ],
  "consequent": [
   "strm_var_def(strm_string_ns, \"split\", strm_cfunc_value(str_split));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "if (p->ns != ns_time)"
  ],
  "consequent": [
   "if (p->ns != time_ns)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(strm_ns_array, \"sort_by\", strm_cfunc_value(ary_sortby));"
  ],
  "consequent": [
   "strm_var_def(strm_array_ns, \"sort_by\", strm_cfunc_value(ary_sortby));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "95495f6763d71a78dbf17991e596b34ca0a0efc1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:43:18",
  "condition": [
   "strm_var_def(ns_txn, \"update\", strm_cfunc_value(txn_update));"
  ],
  "consequent": [
   "strm_var_def(txn_ns, \"update\", strm_cfunc_value(txn_update));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4c604abfb7c239872017320d0d6c871a92c8b341",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-18 09:35:45",
  "condition": [
   "n = sprintf(buf, \"%.14g\", strm_to_flt(v));"
  ],
  "consequent": [
   "n = sprintf(buf, \"%g\", strm_to_flt(v));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "y = f - d->c;",
   "t = d->sum + y;"
  ],
  "consequent": [
   "double t = d->sum + y;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "strm_get_args(strm, argc, args, \"|v\", &func);"
  ],
  "consequent": [
   "strm_get_args(strm, argc, args, \"\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "if (argc == 0) {",
   "  for (i=0; i<len; i++) {"
  ],
  "consequent": [
   "for (i=0; i<len; i++) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "if (argc == 0) {",
   "  *ret = strm_stream_value(strm_stream_new(strm_filter, iter_stdev,"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_stdev,"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "if (!strm_num_p(data)) {",
   "  return STRM_NG;",
   "}",
   "f = strm_value_flt(data);"
  ],
  "consequent": [
   "double y = strm_value_flt(data) - d->c;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "if (argc == 0) {"
  ],
  "consequent": []
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "data = convert_number(strm, data, d->func);",
   "f = strm_value_flt(data);",
   "y = f - d->c;",
   "t = d->sum + y;",
   "d->c = (t - d->sum) - y;",
   "d->sum = t;",
   "d->num++;"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(d->sum), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "strm_get_args(strm, argc, args, \"a|v\", &v, &len, &func);"
  ],
  "consequent": [
   "strm_get_args(strm, argc, args, \"a\", &v, &len);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "if (argc == 0) {",
   "  d->func = strm_nil_value();",
   "  *ret = strm_stream_value(strm_stream_new(strm_filter, iter_sum,"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_sum,"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "iter_sumf(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "sum_finish(strm_stream* strm, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "443d4d8cdb75e581454918fd381f6ca913040c40",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-17 22:22:58",
  "condition": [
   "sum_finish(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "avg_finish(strm_stream* strm, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d5aba7eea13e96e47140028d9fc940bd6d4493ec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 19:19:18",
  "condition": [
   "d->func = func;"
  ],
  "consequent": [
   "d->func = v1;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d5aba7eea13e96e47140028d9fc940bd6d4493ec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 19:19:18",
  "condition": [
   "  struct map_data* d;",
   "  strm_value func;",
   "",
   "  strm_get_args(strm, argc, args, \"v\", &func);",
   "  d = malloc(sizeof(struct map_data));",
   "  if (!d) return STRM_NG;",
   "  d->func = func;",
   "  *ret = strm_stream_value(strm_stream_new(strm_filter, iter_map, NULL, (void*)d));",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "ary_map(strm_stream* strm, int argc, strm_value* args, strm_value* ret)",
   "{",
   "  strm_value* v;",
   "  strm_int len;",
   "  strm_value func;"
  ],
  "consequent": [
   "strm_int len = strm_ary_len(ary);",
   "strm_value* v = strm_ary_ptr(ary);",
   "strm_array a2 = strm_ary_new(NULL, len);",
   "strm_value* v2 = strm_ary_ptr(a2);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d5aba7eea13e96e47140028d9fc940bd6d4493ec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 19:19:18",
  "condition": [
   "strm_value func;"
  ],
  "consequent": [
   "strm_value v1, v2;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d5aba7eea13e96e47140028d9fc940bd6d4493ec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 19:19:18",
  "condition": [
   "exec_map(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "map_ary(strm_stream* strm, strm_array ary, strm_value func, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d5aba7eea13e96e47140028d9fc940bd6d4493ec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 19:19:18",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &func);"
  ],
  "consequent": [
   "strm_get_args(strm, argc, args, \"v|v\", &v1, &v2);",
   "if (argc == 2) {",
   "  return flatmap_ary(strm, strm_value_ary(v1), v2, ret);",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " double x, y;",
   " strm_get_args(strm, argc, args, \"ff\", &x, &y);",
   " *ret = strm_flt_value(x<=y);"
  ],
  "consequent": [
   "assert(argc == 2);",
   "*ret = strm_bool_value(strm_value_flt(args[0])<=strm_value_flt(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"|v\", &func);"
  ],
  "consequent": [
   "switch (argc) {",
   "case 0:",
   "  func = strm_nil_value();",
   "  break;",
   "case 1:",
   "  func = args[0];",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "if (argc == 1) {"
  ],
  "consequent": [
   "switch (argc) {",
   "case 2:                       /* timezone */",
   "  t = get_time(args[0]);",
   "  {",
   "    strm_string str = strm_value_str(args[1]);",
   "    utc_offset = parse_tz(strm_str_ptr(str), strm_str_len(str));",
   "    if (utc_offset == TZ_FAIL) {",
   "      strm_raise(strm, \"wrong timezeone\");",
   "      return STRM_NG;",
   "    }",
   "  }",
   "  break;",
   "case 1:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "d->func = v1;"
  ],
  "consequent": [
   "d->func = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "if (argc == 0) {"
  ],
  "consequent": [
   "switch (argc) {",
   "case 0:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "double start=1, end=-1, inc=1, tmp;"
  ],
  "consequent": [
   "double start=1, end=-1, inc=1;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "break;"
  ],
  "consequent": [
   "strm_raise(strm, \"wrong number of arguments\");",
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"A|i\", &v, &n);",
   "if (argc == 2 && n <= 0) {"
  ],
  "consequent": [
   "switch (argc) {",
   "case 2:",
   "  n = strm_value_int(args[1]);",
   "  if (n <= 0) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"s\", &p, &len);"
  ],
  "consequent": [
   "if (argc != 1) return STRM_NG;",
   "len = strm_str_len(strm_value_str(args[0]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " strm_get_args(strm, argc, args, \"|i\", &estatus);"
  ],
  "consequent": [
   "  break;",
   "case 1:",
   "  estatus = strm_value_int(args[0]);",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong # of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_value* v;",
   "int i, len;"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "else {",
   "  strm_array values = strm_value_ary(args[0]);",
   "  int i, len = strm_ary_len(values);",
   "  strm_value* v = strm_ary_ptr(values);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"i\", &len);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "if (!strm_num_p(args[0])) {",
   "  strm_raise(strm, \"require number of samples\");",
   "  return STRM_NG;",
   "}",
   "len = strm_value_int(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_string sep;"
  ],
  "consequent": [
   "strm_value sep;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "char* s;",
   "int slen;"
  ],
  "consequent": [
   "strm_string str = strm_value_str(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " double x, y;",
   " strm_get_args(strm, argc, args, \"ff\", &x, &y);",
   " *ret = strm_flt_value(x>=y);"
  ],
  "consequent": [
   "assert(argc == 2);",
   "*ret = strm_bool_value(strm_value_flt(args[0])>=strm_value_flt(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"ff\", &x, &y);"
  ],
  "consequent": [
   "if (argc != 2) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "x = strm_value_flt(args[0]);",
   "y = strm_value_flt(args[1]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "*ret = strm_flt_value(strm_value_flt(x)+strm_value_flt(y));"
  ],
  "consequent": [
   "*ret = strm_flt_value(strm_value_flt(args[0])+strm_value_flt(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &time);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong # of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"a|v\", &p, &len, &func);"
  ],
  "consequent": [
   "switch (argc) {",
   "case 1:",
   "case 2:",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " struct count_data* d;",
   " strm_get_args(strm, argc, args, \"\");",
   " d = malloc(sizeof(struct count_data));"
  ],
  "consequent": [
   "struct count_data* d = malloc(sizeof(struct count_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "return flatmap_ary(strm, strm_value_ary(v1), v2, ret);"
  ],
  "consequent": [
   "  return flatmap_ary(strm, strm_value_ary(args[0]), args[1], ret);",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "if (strm_flt_p(x) && strm_flt_p(y)) {"
  ],
  "consequent": [
   "if (strm_num_p(args[0])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "ary = strm_ary_new(p, len);"
  ],
  "consequent": [
   "ary = strm_ary_new(strm_ary_ptr(args[0]), strm_ary_len(args[0]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " }",
   " else {",
   "   strm_value time;",
   "   char* s;",
   "   strm_int slen;",
   "   strm_get_args(strm, argc, args, \"v|s\", &time, &s, &slen);",
   "   t = get_time(time);",
   "   utc_offset = parse_tz(s, slen);",
   "   if (utc_offset == TZ_FAIL) {",
   "     strm_raise(strm, \"wrong timezeone\");"
  ],
  "consequent": [
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong # of arguments\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v|v\", &v1, &v2);",
   "if (argc == 2) {"
  ],
  "consequent": [
   "switch (argc) {",
   "case 1:                       /* map(func) */",
   "  break;",
   "case 2:                       /* map(ary, func) */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "t = get_time(time);"
  ],
  "consequent": [
   "t = get_time(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "pend = p + plen - slen;"
  ],
  "consequent": [
   "pend = p + strm_str_len(str) - slen;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"s|s\", &p, &plen, &s, &slen);",
   "if (argc == 1) {",
   "  s = \" \";",
   "  slen = 1;"
  ],
  "consequent": [
   "switch (argc) {",
   "case 1:",
   "  str = args[0];",
   "  sep = strm_str_lit(\" \");",
   "  break;",
   "case 2:",
   "  str = args[0];",
   "  if (!strm_string_p(args[1])) {",
   "    strm_raise(strm, \"need string separator\");",
   "    return STRM_NG;",
   "  }",
   "  sep = strm_value_str(args[1]);",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " strm_value x, y;",
   " strm_get_args(strm, argc, args, \"vv\", &x, &y);",
   " if (strm_num_p(x) && strm_num_p(y)) {",
   "   *ret = strm_int_value(strm_value_int(x)%strm_value_int(y));"
  ],
  "consequent": [
   "assert(argc == 2);",
   "if (strm_int_p(args[0]) && strm_int_p(args[1])) {",
   "  *ret = strm_int_value(strm_value_int(args[0])%strm_value_int(args[1]));",
   "  return STRM_OK;",
   "}",
   "if (strm_num_p(args[0])) {",
   "  *ret = strm_flt_value((int)strm_value_flt(args[0])%(int)strm_value_flt(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"\");"
  ],
  "consequent": [
   "if (argc != 0) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " double x, y;",
   " strm_get_args(strm, argc, args, \"ff\", &x, &y);",
   " *ret = strm_flt_value(x/y);"
  ],
  "consequent": [
   "assert(argc == 2);",
   "*ret = strm_flt_value(strm_value_flt(args[0])/strm_value_flt(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"i\", &n);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "n = strm_value_int(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"|S\", &sep);",
   "if (argc == 0) {"
  ],
  "consequent": [
   "switch (argc) {",
   "case 0:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " double x, y;",
   " strm_get_args(strm, argc, args, \"ff\", &x, &y);",
   " *ret = strm_flt_value(x>y);"
  ],
  "consequent": [
   "assert(argc == 2);",
   "*ret = strm_bool_value(strm_value_flt(args[0])>strm_value_flt(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " strm_value x, y;",
   " strm_get_args(strm, argc, args, \"vv\", &x, &y);",
   " if (strm_string_p(x) && strm_string_p(y)) {",
   "   strm_string str1 = strm_value_str(x);"
  ],
  "consequent": [
   "assert(argc == 2);",
   "if (strm_string_p(*args)) {",
   "  strm_string str1 = strm_value_str(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v|v\", &v1, &v2);",
   "if (argc == 2) {"
  ],
  "consequent": [
   "switch (argc) {",
   "case 1:                       /* flatmap(func) */",
   "  break;",
   "case 2:                       /* flatmap(ary, func) */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_raise(strm, \"invalid count number\");"
  ],
  "consequent": [
   "    strm_raise(strm, \"invalid count number\");",
   "    return STRM_NG;",
   "  }",
   "  /* fall through */",
   "case 1:",
   "  v = args[0];",
   "  if (!strm_array_p(v)) {",
   "    strm_raise(strm, \"array required\");",
   "    return STRM_NG;",
   "  }",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " strm_value x, y;",
   " strm_get_args(strm, argc, args, \"vv\", &x, &y);",
   " *ret = strm_bool_value(!strm_value_eq(x, y));"
  ],
  "consequent": [
   "assert(argc == 2);",
   "*ret = strm_bool_value(!strm_value_eq(args[0], args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " }",
   " else {",
   "   char *s;",
   "   strm_int slen;",
   "   strm_get_args(strm, argc, args, \"s\", &s, &slen);",
   "   utc_offset = parse_tz(s, slen);",
   "   if (utc_offset == TZ_FAIL) {"
  ],
  "consequent": [
   " break;",
   "case 1:                       /* timezone */",
   "  {",
   "    strm_string str = strm_value_str(args[0]);",
   "    utc_offset = parse_tz(strm_str_ptr(str), strm_str_len(str));",
   "    if (utc_offset == TZ_FAIL) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &time);",
   "t = get_time(time);"
  ],
  "consequent": [
   "t = get_time(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "*ret = strm_flt_value(sum/len);"
  ],
  "consequent": [
   "strm_raise(strm, \"wrong number of arguments\");",
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &d->func);"
  ],
  "consequent": [
   "d->func = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "}"
  ],
  "consequent": [
   "    }",
   "  }",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong # of arguments\");",
   "  return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"vv\", &x, &y);",
   "cmp = strm_cmp(x, y);"
  ],
  "consequent": [
   "if (argc != 2) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "cmp = strm_cmp(args[0], args[1]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " else {",
   "   strm_value x, y;",
   "   strm_get_args(strm, argc, args, \"vv\", &x, &y);",
   "   if (strm_int_p(x) && strm_int_p(y)) {"
  ],
  "consequent": [
   "assert(argc == 2);",
   "if (strm_int_p(args[0]) && strm_int_p(args[1])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"f\", &f);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "f = strm_value_flt(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"S\", &path);"
  ],
  "consequent": [
   "assert(argc == 1);",
   "assert(strm_string_p(args[0]));",
   "path = strm_value_str(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_value v1, v2;"
  ],
  "consequent": [
   "strm_int init = 0;",
   "strm_value acc;",
   "strm_value func;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "inc = end;",
   "end = tmp;"
  ],
  "consequent": [
   "start = strm_value_flt(args[0]);",
   "inc = strm_value_flt(args[1]);",
   "end = strm_value_flt(args[2]);",
   "if (inc <= 0) {",
   "  strm_raise(strm, \"invalid increment value\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &time);\\",
   "t = get_time(time);\\"
  ],
  "consequent": [
   "t = get_time(args[0]);\\"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "if (argc == 2) {"
  ],
  "consequent": [
   "if (!strm_nil_p(func)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v|v\", &v1, &v2);"
  ],
  "consequent": [
   "switch (argc) {",
   "case 1:",
   "  func = args[0];",
   "  break;",
   "case 2:",
   "  init = 1;",
   "  acc = args[0];",
   "  func = args[1];",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"a\", &v, &len);"
  ],
  "consequent": [
   "if (argc != 1) return STRM_NG;",
   "len = strm_ary_len(strm_value_ary(args[0]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " double x, y;",
   " strm_get_args(strm, argc, args, \"ff\", &x, &y);",
   " *ret = strm_flt_value(x<y);"
  ],
  "consequent": [
   "assert(argc == 2);",
   "*ret = strm_bool_value(strm_value_flt(args[0])<strm_value_flt(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "*ret = strm_int_value(strm_value_int(x)+strm_value_int(y));"
  ],
  "consequent": [
   "*ret = strm_int_value(strm_value_int(args[0])+strm_value_int(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " strm_value x, y;",
   " strm_get_args(strm, argc, args, \"vv\", &x, &y);",
   " *ret = strm_bool_value(strm_value_eq(x, y));"
  ],
  "consequent": [
   "assert(argc == 2);",
   "*ret = strm_bool_value(strm_value_eq(args[0], args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_raise(strm, \"invalid count number\");"
  ],
  "consequent": [
   "    strm_raise(strm, \"invalid count number\");",
   "    return STRM_NG;",
   "  }",
   "  /* fall through */",
   "case 1:",
   "  v = args[0];",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "d->func = func;"
  ],
  "consequent": [
   "d->func = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v|i\", &v, &n);",
   "if (argc == 2 && n <= 0) {"
  ],
  "consequent": [
   "switch (argc) {",
   "case 2:",
   "  n = strm_value_int(args[1]);",
   "  if (n <= 0) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "return map_ary(strm, strm_value_ary(v1), v2, ret);"
  ],
  "consequent": [
   "  return map_ary(strm, strm_value_ary(args[0]), args[1], ret);",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "*ret = strm_flt_value(sum);"
  ],
  "consequent": [
   "   strm_array values = strm_value_ary(args[0]);",
   "   int i, len = strm_ary_len(values);",
   "   strm_value* v = strm_ary_ptr(values);",
   "   double sum = 0;",
   "   double c = 0;",
   "   for (i=0; i<len; i++) {",
   "     double y = strm_value_flt(v[i]) - c;",
   "     double t = sum + y;",
   "     c = (t - sum) - y;",
   "     sum =  t;",
   "   }",
   "   if (avg) {",
   "     *ret = strm_flt_value(sum/len);",
   "   }",
   "   else {",
   "     *ret = strm_flt_value(sum);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " int i, len;",
   " strm_value* v;",
   " double sum = 0;",
   " double c = 0;",
   " strm_get_args(strm, argc, args, \"a\", &v, &len);",
   " for (i=0; i<len; i++) {",
   "   double y = strm_value_flt(v[i]) - c;",
   "   double t = sum + y;",
   "   c = (t - sum) - y;",
   "   sum =  t;",
   " }",
   " if (avg) {"
  ],
  "consequent": [
   "if (argc != 1) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " strm_value x, y;",
   " strm_get_args(strm, argc, args, \"vv\", &x, &y);",
   " if (strm_num_p(x) && strm_num_p(y)) {",
   "   *ret = strm_int_value(strm_value_int(x)|strm_value_int(y));"
  ],
  "consequent": [
   "assert(argc == 2);",
   "/* int x int */",
   "if (strm_int_p(args[0]) && strm_int_p(args[1])) {",
   "  *ret = strm_int_value(strm_value_int(args[0])|strm_value_int(args[1]));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_int estatus = EXIT_SUCCESS;"
  ],
  "consequent": [
   " strm_int estatus;",
   " switch (argc) {",
   " case 0:",
   "   estatus = EXIT_SUCCESS;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "return strm_connect(strm, x, y, ret);"
  ],
  "consequent": [
   "return strm_connect(strm, args[0], args[1], ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &func);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "func = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "if (strm_funcall(strm, func, 1, &p[i], &buf[i].v) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(strm, args[1], 1, &p[i], &buf[i].v) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "end = start;",
   "start = 1;"
  ],
  "consequent": [
   "  end = strm_value_flt(args[0]);",
   "  break;",
   "case 2:",
   "  start = strm_value_flt(args[0]);",
   "  end = strm_value_flt(args[1]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"av\", &p, &len, &func);"
  ],
  "consequent": [
   "if (argc != 2) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &func);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "d->func = (argc == 0) ? strm_nil_value() : func;"
  ],
  "consequent": [
   "d->func = func;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"|v\", &func);"
  ],
  "consequent": [
   "switch (argc) {",
   "case 0:                       /* min()/max() */",
   "  break;",
   "case 1:                       /* min(func)/max(func) */",
   "  func = args[0];",
   "  break;",
   "default:",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " strm_get_args(strm, argc, args, \"a\", &v, &len);",
   " s1 = s2 = 0.0;"
  ],
  "consequent": [
   "s1 = s2 = 0.0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"a|v\", &v, &len, &func);"
  ],
  "consequent": [
   " switch (argc) {",
   " case 2:                       /* min(ary,func)/max(ary,func) */",
   "   func = args[1];",
   "   /* fall through */",
   " case 1:                       /* min(ary)/max(ary) */",
   "   values = args[0];",
   "   break;",
   " default:",
   "   strm_raise(strm, \"wrong number of arguments\");",
   "   return STRM_NG;",
   " }",
   " len = strm_ary_len(values);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "return STRM_OK;"
  ],
  "consequent": [
   "  return STRM_OK;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   " strm_value x, y;",
   " strm_get_args(strm, argc, args, \"vv\", &x, &y);",
   " if (strm_int_p(x) && strm_int_p(y)) {"
  ],
  "consequent": [
   "assert(argc == 2);",
   "if (strm_int_p(args[0]) && strm_int_p(args[1])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"s\", &s, &slen);",
   "if (strm_time_parse_time(s, slen, &sec, &usec, &utc_offset) < 0) {"
  ],
  "consequent": [
   "if (strm_time_parse_time(strm_str_ptr(str), strm_str_len(str),",
   "                         &sec, &usec, &utc_offset) < 0) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "arg.func = func;"
  ],
  "consequent": [
   "arg.func = args[1];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "if (strm_int_p(x) && strm_int_p(y)) {"
  ],
  "consequent": [
   "if (strm_int_p(args[0]) && strm_int_p(args[1])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"S\", &s);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}",
   "s = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_string str2 = strm_value_str(y);"
  ],
  "consequent": [
   "strm_string str2 = strm_value_str(args[1]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "if (argc == 2) {",
   "  d->init = TRUE;",
   "  d->acc = v1;",
   "  d->func = v2;"
  ],
  "consequent": [
   "d->init = init;",
   "d->acc = (init) ? acc : strm_nil_value();",
   "d->func = func;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"v\", &func);"
  ],
  "consequent": [
   "d->func = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "t = p;"
  ],
  "consequent": [
   "t = p = strm_str_ptr(str);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_value func = strm_nil_value();"
  ],
  "consequent": [
   " strm_value func;",
   " switch (argc) {",
   " case 0:",
   "   func = strm_nil_value();",
   "   break;",
   " case 1:",
   "   func = args[0];",
   "   break;",
   " default:",
   "   strm_raise(strm, \"wrong number of arguments\");",
   "   return STRM_NG;",
   " }"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a4f24cd662ca256db7127ae0640b5f0f3188c6da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:59:23",
  "condition": [
   "strm_get_args(strm, argc, args, \"f\", &f);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a1fcca0d94d1c6d3d779e3b77c41e5c246a77222",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-13 14:55:28",
  "condition": [
   " double f;",
   " strm_get_args(strm, argc, args, \"f\", &f);"
  ],
  "consequent": [
   "if (argc != 1) {",
   "  strm_raise(strm, \"wrong number of arguments\");",
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "*ret = quick_median(buf, len);",
   "free(buf);",
   "return STRM_OK;"
  ],
  "consequent": [
   "qsort(buf, len, sizeof(strm_value), sort_cmp);",
   "return mem_median(strm, buf, len, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "return strm_flt_value((x + y)/2);"
  ],
  "consequent": [
   "x = (x + y)/2;",
   "*ret = strm_flt_value(x);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "double y = strm_value_flt(p[next]);"
  ],
  "consequent": [
   "double y = strm_value_flt(b);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "}"
  ],
  "consequent": [
   "goto good;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "/*",
   " *  This Quickselect routine is based on the algorithm described in",
   " *  \"Numerical recipes in C\", Second Edition,",
   " *  Cambridge University Press, 1992, Section 8.5, ISBN 0-521-43108-5",
   " *  This code by Nicolas Devillard - 1998. Public domain.",
   " */",
   "",
   "#define ELEM_SWAP(a,b) { strm_value t=(a);(a)=(b);(b)=t; }",
   "#define ELEM_GT(a,b) (strm_cmp((a),(b))>0)",
   "",
   "static strm_value",
   "quick_select(strm_value arr[], int n)"
  ],
  "consequent": [
   "static int",
   "mem_median(strm_stream* strm, strm_value* buf, strm_int len, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "return STRM_OK;"
  ],
  "consequent": [
   "return n;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "return v;"
  ],
  "consequent": [
   "   if (a == b) {",
   "     *ret = a;",
   "     goto good;",
   "   }",
   "   if (strm_string_p(a) && strm_string_p(b) && str_cmp(a,b) == 0) {",
   "     *ret = a;",
   "     goto good;",
   "   }",
   "   strm_raise(strm, \"no median value\");",
   "   goto error;",
   " }",
   "good:",
   " free(buf);",
   " return STRM_OK;",
   "error:",
   " free(buf);",
   " return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "v = quick_median(d->buf, d->len);"
  ],
  "consequent": [
   "qsort(d->buf, d->len, sizeof(strm_value), sort_cmp);",
   "n = mem_median(strm, d->buf, d->len, &v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   "    /* Find median of low, middle and high items; swap into position low */",
   "    middle = (low + high) / 2;",
   "    if (ELEM_GT(arr[middle], arr[high])) ELEM_SWAP(arr[middle], arr[high]);",
   "    if (ELEM_GT(arr[low], arr[high]))    ELEM_SWAP(arr[low], arr[high]);",
   "    if (ELEM_GT(arr[middle], arr[low]))  ELEM_SWAP(arr[middle], arr[low]);",
   "",
   "    /* Swap low item (now in position middle) into position (low+1) */",
   "    ELEM_SWAP(arr[middle], arr[low+1]);",
   "",
   "    /* Nibble from each end towards middle, swapping items when stuck */",
   "    ll = low + 1;",
   "    hh = high;",
   "    for (;;) {",
   "      do ll++; while (ELEM_GT(arr[low], arr[ll]));",
   "      do hh--; while (ELEM_GT(arr[hh], arr[low]));",
   "",
   "      if (hh < ll)",
   "        break;",
   "",
   "      ELEM_SWAP(arr[ll], arr[hh]);",
   "    }",
   "",
   "    /* Swap middle item (in position low) back into correct position */",
   "    ELEM_SWAP(arr[low], arr[hh]);",
   "",
   "    /* Re-set active partition */",
   "    if (hh <= median)",
   "      low = ll;",
   "    if (hh >= median)",
   "      high = hh - 1;",
   "  }",
   "}",
   "",
   "#undef ELEM_SWAP",
   "",
   "static strm_value",
   "quick_median(strm_value *p, int len)",
   "{",
   "  strm_value v = quick_select(p, len);",
   "",
   "  if (len%2 == 0 && strm_num_p(v)) {",
   "    strm_int next = len/2;",
   "    if (strm_num_p(p[next])) {",
   "       double x = strm_value_flt(v);"
  ],
  "consequent": [
   "if (strm_num_p(a) && strm_num_p(b)) {",
   "  double x = strm_value_flt(a);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b2ae0e58514ced4d6580dfff3d2d0d5ccb7d880f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 12:00:03",
  "condition": [
   " int low, high;",
   " int median;",
   " int middle, ll, hh;",
   " low = 0; high = n-1; median = (low + high) / 2;",
   " for (;;) {",
   "   if (high <= low) /* One element only */",
   "     return arr[median];",
   "   if (high == low + 1) {  /* Two elements only */",
   "     if (ELEM_GT(arr[low],arr[high]))",
   "       ELEM_SWAP(arr[low], arr[high]);",
   "     return arr[median];",
   "   }"
  ],
  "consequent": [
   "if (len % 2 == 1) {",
   "  *ret = buf[len/2];",
   "  goto good;",
   "}",
   "else {",
   "  strm_value a = buf[len/2-1];",
   "  strm_value b = buf[len/2];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "90da12a6961cf514452b9e658b012f4bfc8f1766",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 11:32:38",
  "condition": [
   "return mem_median(strm, buf, len, ret);"
  ],
  "consequent": [
   " if (len % 2 == 1) {",
   "   *ret = buf[len/2];",
   "   goto good;",
   " }",
   " else {",
   "   strm_value a = buf[len/2-1];",
   "   strm_value b = buf[len/2];",
   "   if (strm_num_p(a) && strm_num_p(b)) {",
   "     double x = strm_value_flt(a);",
   "     double y = strm_value_flt(b);",
   "     x = (x + y)/2;",
   "     *ret = strm_flt_value(x);",
   "     goto good;",
   "   }",
   "   if (a == b) {",
   "     *ret = a;",
   "     goto good;",
   "   }",
   "   if (strm_string_p(a) && strm_string_p(b) && str_cmp(a,b) == 0) {",
   "     *ret = a;",
   "     goto good;",
   "   }",
   "   strm_raise(strm, \"no median value\");",
   "   goto error;",
   " }",
   "good:",
   " free(buf);",
   " return STRM_OK;",
   "error:",
   " free(buf);",
   " return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "90da12a6961cf514452b9e658b012f4bfc8f1766",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 11:32:38",
  "condition": [
   "free(buf);",
   "return STRM_NG;"
  ],
  "consequent": [
   "goto error;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "16e18e5308b630c6eab51f00ce1f5a12bfd1c15f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:31:54",
  "condition": [
   "  struct sortby_data* d;",
   "",
   "  if (argc != 1) {",
   "    strm_raise(strm, \"wrong number of arguments\");",
   "    return STRM_NG;",
   "  }",
   "",
   "  d = malloc(sizeof(struct sortby_data));",
   "  if (!d) return STRM_NG;",
   "  d->strm = strm;",
   "  d->func = args[0];",
   "  d->len = 0;",
   "  d->capa = SORT_FIRST_CAPA;",
   "  d->buf = malloc(sizeof(struct sortby_value)*SORT_FIRST_CAPA);",
   "  if (!d->buf) {",
   "    free(d);",
   "    return STRM_NG;",
   "  }",
   "  *ret = strm_stream_value(strm_stream_new(strm_filter, iter_sortby,",
   "                                           finish_sortby, (void*)d));",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "ary_sortby(strm_stream* strm, int argc, strm_value* args, strm_value* ret)",
   "{",
   "  struct sortby_value* buf;",
   "  strm_array ary;",
   "  strm_value* p;",
   "  strm_int len;",
   "  strm_int i;"
  ],
  "consequent": [
   "strm_int cmp;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "16e18e5308b630c6eab51f00ce1f5a12bfd1c15f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:31:54",
  "condition": [
   "sortby_cmp(const void* a_p, const void* b_p)",
   "{",
   "  struct sortby_value* av = (struct sortby_value*)a_p;",
   "  struct sortby_value* bv = (struct sortby_value*)b_p;",
   "  double a, b;",
   "",
   "  if (strm_num_p(av->v)) {",
   "    a = strm_value_flt(av->v);",
   "  }",
   "  else {",
   "    if (strm_num_p(bv->v)) {",
   "      return 1;",
   "    }",
   "    return 0;",
   "  }",
   "  if (strm_num_p(bv->v)) {",
   "    b = strm_value_flt(bv->v);",
   "  }",
   "  else {",
   "    return -1;",
   "  }",
   "  if(a > b)",
   "    return 1;",
   "  else if(a < b)",
   "    return -1;",
   "  return 0;",
   "}",
   "",
   "static int",
   "iter_sortby(strm_stream* strm, strm_value data)",
   "{",
   "  struct sortby_data* d = strm->data;",
   "",
   "  if (d->len >= d->capa) {",
   "    d->capa *= 2;",
   "    d->buf = realloc(d->buf, sizeof(struct sortby_value)*d->capa);",
   "  }",
   "  d->buf[d->len].o = data;",
   "  if (strm_funcall(d->strm, d->func, 1, &data, &d->buf[d->len].v) == STRM_NG) {",
   "    return STRM_NG;;",
   "  }",
   "  d->len++;",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "finish_sortby(strm_stream* strm, strm_value data)",
   "{",
   "  struct sortby_data* d = strm->data;",
   "  strm_int i, len;",
   "",
   "  qsort(d->buf, d->len, sizeof(struct sortby_value), sortby_cmp);",
   "  for (i=0,len=d->len; i<len; i++) {",
   "    strm_emit(strm, d->buf[i].o, NULL);",
   "  }",
   "  free(d->buf);",
   "  free(d);",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "exec_sortby(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_cmp(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7741b3581dda86402196ec064a6e1a24959074d1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:30:30",
  "condition": [
   "double b = strm_value_flt(y);"
  ],
  "consequent": [
   "  b = strm_value_flt(bv);",
   "}",
   "else {",
   "  return -1;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7741b3581dda86402196ec064a6e1a24959074d1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:30:30",
  "condition": [
   "cmp = strm_cmp(args[0], args[1]);"
  ],
  "consequent": [
   "if (!strm_num_p(args[0]) || !strm_num_p(args[1])) {",
   "  strm_raise(strm, \"non number comparison\");",
   "  return STRM_NG;",
   "}",
   "a = strm_value_flt(args[0]);",
   "b = strm_value_flt(args[1]);",
   "if(a > b)",
   "  cmp = 1;",
   "else if(a < b)",
   "  cmp = -1;",
   "else",
   "  cmp = 0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7741b3581dda86402196ec064a6e1a24959074d1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:30:30",
  "condition": [
   "static int",
   "num_cmp(strm_value x, strm_value y)"
  ],
  "consequent": [
   "int",
   "sort_cmp(const void* a_p, const void* b_p)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7741b3581dda86402196ec064a6e1a24959074d1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:30:30",
  "condition": [
   "strm_var_def(state, \"cmp\", strm_cfunc_value(exec_cmp));"
  ],
  "consequent": [
   "strm_var_def(state, \"cmp\", strm_cfunc_value(num_cmp));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7741b3581dda86402196ec064a6e1a24959074d1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:30:30",
  "condition": [
   "exec_cmp(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "num_cmp(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7741b3581dda86402196ec064a6e1a24959074d1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:30:30",
  "condition": [
   "double a = strm_value_flt(x);"
  ],
  "consequent": [
   " strm_value av = *(strm_value*)a_p;",
   " strm_value bv = *(strm_value*)b_p;",
   " double a, b;",
   " if (strm_num_p(av)) {",
   "   a = strm_value_flt(av);",
   " }",
   " else {",
   "   if (strm_num_p(bv)) {",
   "     return 1;",
   "   }",
   "   return 0;",
   " }",
   " if (strm_num_p(bv)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7741b3581dda86402196ec064a6e1a24959074d1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 09:30:30",
  "condition": [
   "static int"
  ],
  "consequent": [
   "int"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e049570522e0f3158af89bb707f698a6ac427931",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 07:40:48",
  "condition": [
   "iter_sort(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "ary_sort(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e049570522e0f3158af89bb707f698a6ac427931",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 07:40:48",
  "condition": [
   "case 0:"
  ],
  "consequent": [
   "case 2:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e049570522e0f3158af89bb707f698a6ac427931",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 07:40:48",
  "condition": [
   "  struct sort_data* d = strm->data;",
   "",
   "  if (d->len >= d->capa) {",
   "    d->capa *= 2;",
   "    d->buf = realloc(d->buf, sizeof(strm_value)*d->capa);",
   "  }",
   "  d->buf[d->len++] = data;",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "finish_sort(strm_stream* strm, strm_value data)",
   "{",
   "  struct sort_data* d = strm->data;",
   "  strm_int i, len;",
   "",
   "  if (strm_nil_p(d->func)) {",
   "    mem_sort(d->buf, d->len, NULL);",
   "  }",
   "  else {",
   "    struct sort_arg arg;",
   "",
   "    arg.strm = strm;",
   "    arg.func = d->func;",
   "    mem_sort(d->buf, d->len, &arg);",
   "  }",
   "",
   "  for (i=0,len=d->len; i<len; i++) {",
   "    strm_emit(strm, d->buf[i], NULL);",
   "  }",
   "  free(d->buf);",
   "  free(d);",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "exec_sort(strm_stream* strm, int argc, strm_value* args, strm_value* ret)",
   "{",
   "  struct sort_data* d;",
   "  strm_value func;"
  ],
  "consequent": [
   "strm_array ary;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e049570522e0f3158af89bb707f698a6ac427931",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 07:40:48",
  "condition": [
   "func = args[0];"
  ],
  "consequent": [
   "   {",
   "     strm_value* p;",
   "     strm_int len;",
   "     ary = strm_ary_new(strm_ary_ptr(args[0]), strm_ary_len(args[0]));",
   "     p = strm_ary_ptr(ary);",
   "     len = strm_ary_len(ary);",
   "     if (argc == 1) {",
   "       mem_sort(p, len, NULL);",
   "     }",
   "     else {",
   "       struct sort_arg arg;",
   "       arg.strm = strm;",
   "       arg.func = args[1];",
   "       mem_sort(p, len, &arg);",
   "     }",
   "     *ret = strm_ary_value(ary);",
   "     return STRM_OK;",
   "   }"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d0301a34800c8a6ff36a5e05ebfd366364322090",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-11 21:34:19",
  "condition": [
   "mem_sort(p, len, &arg);"
  ],
  "consequent": [
   "qsort_arg(p, len, sizeof(strm_value), sort_cmpf, &arg);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d0301a34800c8a6ff36a5e05ebfd366364322090",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-11 21:34:19",
  "condition": [
   "mem_sort(p, len, NULL);"
  ],
  "consequent": [
   "qsort(p, len, sizeof(strm_value), sort_cmp);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0208c5dc66ee008792a11289bc735fd711ff69c8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-11 10:25:43",
  "condition": [
   "xorshift64init();"
  ],
  "consequent": [
   "gettimeofday(&tv, NULL);",
   "x ^= (uint32_t)tv.tv_usec;",
   "x ^= x >> 11; x ^= x << 17; x ^= x >> 4;",
   "x *= 2685821657736338717LL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0208c5dc66ee008792a11289bc735fd711ff69c8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-11 10:25:43",
  "condition": [
   "void",
   "xorshift64init(void)",
   "{",
   "  struct timeval tv;",
   "  static int init = 0;",
   "",
   "  if (init == 0) {",
   "    init = 1;",
   "    gettimeofday(&tv, NULL);",
   "    x ^= (uint32_t)tv.tv_usec;",
   "    x ^= x >> 11; x ^= x << 17; x ^= x >> 4;",
   "    x *= 2685821657736338717LL;",
   "  }",
   "}",
   "",
   "uint64_t"
  ],
  "consequent": [
   "static uint64_t"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fd415940e123677d0088561926f76d2e6cba909c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-10 16:37:46",
  "condition": [
   " struct csv_data *cd;",
   " if (argc != 0) {",
   "   strm_raise(strm, \"wrong number of arguments\");",
   "   return STRM_NG;",
   " }",
   " cd = malloc(sizeof(struct csv_data));"
  ],
  "consequent": [
   " struct csv_data *cd = malloc(sizeof(struct csv_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f17f0b567c5436cd5ca5c5afe8415458d3b6019a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-10 16:07:00",
  "condition": [
   "if (!strm_string_p(args[i-1])) {",
   "  fputs(\" \", out);"
  ],
  "consequent": [
   "fputs(\", \", out);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f17f0b567c5436cd5ca5c5afe8415458d3b6019a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-10 16:07:00",
  "condition": [
   "if (i != 0) {"
  ],
  "consequent": [
   "if (i != 0)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "16a5e377d2241784cfd9e2b89720c0fba56ca8e4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-09 10:37:23",
  "condition": [
   "struct recv_data* r = strm_queue_get(d->rq);"
  ],
  "consequent": [
   "r = strm_queue_get(d->rq);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "16a5e377d2241784cfd9e2b89720c0fba56ca8e4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-09 10:37:23",
  "condition": [
   "(*r->func)(r->strm, data);"
  ],
  "consequent": [
   "(*r->func)(r->strm, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "97da07276c99e2b207b29b42a4fa42c6c3dfbc34",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-09 10:35:14",
  "condition": [
   "if (strm_latch_finish_p(z->latch[i])) {"
  ],
  "consequent": [
   "if (strm_latch_finish_p(z->latch[i]))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "9c39dd60b9b1ba77f379f66fb9f37f2c8c6f5334",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-09 10:34:17",
  "condition": [
   "return strm_stream_new(strm_consumer, latch_push, latch_close, d);"
  ],
  "consequent": [
   "return strm_stream_new(strm_consumer, latch_get, latch_close, d);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "9c39dd60b9b1ba77f379f66fb9f37f2c8c6f5334",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-09 10:34:17",
  "condition": [
   "assert(latch->start_func == latch_push);"
  ],
  "consequent": [
   "assert(latch->start_func == latch_get);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "9c39dd60b9b1ba77f379f66fb9f37f2c8c6f5334",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-09 10:34:17",
  "condition": [
   "latch_push(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "latch_get(strm_stream* strm, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "892afafaff6b40374055643b6fecb2844139cca1",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-09 10:26:08",
  "condition": [
   "strm_emit(strm, p[i], NULL);"
  ],
  "consequent": [
   "strm_emit(strm, p[i], gen_cycle);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "823e911f91024bf27f1cbbb18113d9e001c44c8d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-07 23:31:41",
  "condition": [
   "d->sum = t;"
  ],
  "consequent": [
   "d->sum =  t;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cc434ed3f9b9322c8fd3f5c374c98be11c2836df",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-07 13:29:05",
  "condition": [
   "struct strm_queue;"
  ],
  "consequent": [
   "struct strm_queue {",
   "  struct strm_queue_node* head;",
   "  struct strm_queue_node* tail;",
   "};"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cc434ed3f9b9322c8fd3f5c374c98be11c2836df",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-07 13:29:05",
  "condition": [
   "return strm_queue_empty_p(c->dq);"
  ],
  "consequent": [
   "if (c->dq->head == c->dq->tail) return 1;",
   "return 0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7b42c35c5c0f6d51b8ac0cbb3ca10bf2d53ead55",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-26 13:57:33",
  "condition": [
   "strm_array values = strm_value_ary(args[0]);"
  ],
  "consequent": [
   "strm_array values = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3906242134af068ae1e6e758319f9782c1f8b366",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-26 13:37:53",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_stdev,"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_stdev, stdev_finish, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3906242134af068ae1e6e758319f9782c1f8b366",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-26 13:37:53",
  "condition": [
   "var_finish(strm_stream* strm, strm_value data)",
   "{",
   "  struct stdev_data* d = strm->data;",
   "  double s = d->s2 / (d->num-1);",
   "  strm_emit(strm, strm_flt_value(s), NULL);",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "exec_var_stdev(strm_stream* strm, int argc, strm_value* args, strm_value* ret, int stdev)"
  ],
  "consequent": [
   "exec_stdev(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "acd16bfe79894ed51dffe8a29544f893c1612dbe",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-19 11:32:38",
  "condition": [
   "if (args == NULL) {",
   "  if (argc > 0) goto argerr;",
   "}",
   "else if (args->len != argc) {",
   "argerr:"
  ],
  "consequent": [
   "if ((args == NULL && argc != 0) || (args->len != argc)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f7b032548dfa958d922478b72cfa4acb6cf7a242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 22:13:12",
  "condition": [
   "start = strm_value_flt(args[0]);"
  ],
  "consequent": [
   "start = strm_value_int(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f7b032548dfa958d922478b72cfa4acb6cf7a242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 22:13:12",
  "condition": [
   "end = strm_value_flt(args[2]);"
  ],
  "consequent": [
   "end = strm_value_int(args[2]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f7b032548dfa958d922478b72cfa4acb6cf7a242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 22:13:12",
  "condition": [
   "strm_emit(strm, strm_flt_value(d->n), gen_seq);"
  ],
  "consequent": [
   "strm_emit(strm, strm_int_value(d->n), gen_seq);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f7b032548dfa958d922478b72cfa4acb6cf7a242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 22:13:12",
  "condition": [
   "double start=1, end=-1, inc=1;"
  ],
  "consequent": [
   "strm_int start=1, end=-1, inc=1;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f7b032548dfa958d922478b72cfa4acb6cf7a242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 22:13:12",
  "condition": [
   "end = strm_value_flt(args[1]);"
  ],
  "consequent": [
   "end = strm_value_int(args[1]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f7b032548dfa958d922478b72cfa4acb6cf7a242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 22:13:12",
  "condition": [
   "double n;",
   "double end;",
   "double inc;"
  ],
  "consequent": [
   "strm_int n;",
   "strm_int end;",
   "strm_int inc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f7b032548dfa958d922478b72cfa4acb6cf7a242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 22:13:12",
  "condition": [
   "end = strm_value_flt(args[0]);"
  ],
  "consequent": [
   "end = strm_value_int(args[0]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f7b032548dfa958d922478b72cfa4acb6cf7a242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-12 22:13:12",
  "condition": [
   "inc = strm_value_flt(args[1]);"
  ],
  "consequent": [
   "inc = strm_value_int(args[1]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a7e54c2a6596fb86c8cb9ea8db33c5c7f96bec3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-11 12:28:01",
  "condition": [
   "return STRM_NG;"
  ],
  "consequent": [
   "return STRM_OK;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d44bcf69885623a334b438fade64ad63ca0fb281",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-05-08 23:23:39",
  "condition": [
   "if (h > 14) return TZ_FAIL;"
  ],
  "consequent": [
   "if (h > 12) return TZ_FAIL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7408001debd887bb58b297e1a2bc0485ac61699a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-19 09:04:47",
  "condition": [
   "t = strptime(s, \"%Y-%m-%d\", &tm); /* ISO8601 extended */"
  ],
  "consequent": [
   "t = strptime(s, \"%Y-%m-%d\", &tm); /* ISO8601 */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f9d3fe370666e29b1f966487722205d13d02a9d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 16:33:48",
  "condition": [
   "}",
   "n = exec_call(strm, state, node_to_sym(ncall->ident), i, args, val);"
  ],
  "consequent": [
   "return exec_call(strm, state, node_to_sym(ncall->ident), i, args, val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f9d3fe370666e29b1f966487722205d13d02a9d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 16:33:48",
  "condition": [
   "sep = args[0];"
  ],
  "consequent": [
   "d->sep = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f9d3fe370666e29b1f966487722205d13d02a9d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 16:33:48",
  "condition": [
   "sep = strm_str_lit(\" \");"
  ],
  "consequent": [
   "d->sep = strm_str_lit(\" \");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f9d3fe370666e29b1f966487722205d13d02a9d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 16:33:48",
  "condition": [
   "struct split_data* d;",
   "strm_value sep;"
  ],
  "consequent": [
   "struct split_data* d = malloc(sizeof(struct split_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f9d3fe370666e29b1f966487722205d13d02a9d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 16:33:48",
  "condition": [
   "if (n == STRM_NG) {",
   "  free(args);",
   "  return n;"
  ],
  "consequent": [
   "if (n) return n;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2f9d3fe370666e29b1f966487722205d13d02a9d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 16:33:48",
  "condition": [
   "if (strm_str_len(sep) < 1) {"
  ],
  "consequent": [
   "if (strm_str_len(d->sep) < 1) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "914ec9f10c28648a253c536ca8aafd1b292cc484",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 14:33:32",
  "condition": [
   "case 1:                       /* min(func)/max(func) */"
  ],
  "consequent": [
   "case 1:                       /* min(ary)/max(ary) */",
   "  values = args[0];",
   "  if (!strm_array_p(values)) {",
   "    values = strm_ary_null;   /* min(func)/max(func) */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "914ec9f10c28648a253c536ca8aafd1b292cc484",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 14:33:32",
  "condition": [
   "func = args[0];"
  ],
  "consequent": [
   "    func = args[0];",
   "  }",
   "  break;",
   "case 2:                       /* min(ary,func)/max(ary,func) */",
   "  values = args[0];",
   "  func = args[1];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "fb79474c4bb977d0e073f126beadab949b565c93",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 14:26:26",
  "condition": [
   "if (argc != 0) {"
  ],
  "consequent": [
   "switch (argc) {",
   "case 0:",
   "  break;",
   "case 1:",
   "  values = args[0];",
   "  break;",
   "default:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ddff75a2798aab3b23760288fdfb957d709b9e92",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 10:52:05",
  "condition": [
   "case 7:                       /* date (YYYY,MM,DD,hh,mm,ss,nsec) */"
  ],
  "consequent": [
   "case 7:                       /* date (YYYY,MM,DD,hh,mm,ss,usec) */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ddff75a2798aab3b23760288fdfb957d709b9e92",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-18 10:52:05",
  "condition": [
   "tv.tv_usec = strm_value_int(args[6])/1000;"
  ],
  "consequent": [
   "tv.tv_usec = strm_value_int(args[6]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "94cbb84912b2ca473a85aa3320b779ce8717a7f7",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-17 00:42:33",
  "condition": [
   "strm_var_def(time_ns, \"nanosecond\", strm_cfunc_value(time_nanosec));"
  ],
  "consequent": [
   "strm_var_def(time_ns, \"nsec\", strm_cfunc_value(time_nanosec));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "86fde2d3415fb0787c92b4e7e360e8a8fab080bd",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 11:45:22",
  "condition": [
   "if (!strm_nil_p(d->func)) {",
   "  if (strm_funcall(strm, d->func, 1, &data, &e) == STRM_NG) {",
   "    return STRM_NG;",
   "  }",
   "}",
   "num = strm_value_flt(e);"
  ],
  "consequent": [
   "num = strm_value_flt(data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "86fde2d3415fb0787c92b4e7e360e8a8fab080bd",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 11:45:22",
  "condition": [
   "val = v[0];",
   "if (!strm_nil_p(func)) {",
   "  if (strm_funcall(strm, func, 1, &v[0], &e) == STRM_NG) {",
   "    return STRM_NG;"
  ],
  "consequent": [
   "num = strm_value_flt(v[0]);",
   "if (min) {",
   "  for (i=1; i<len; i++) {",
   "    f = strm_value_flt(v[i]);",
   "    if (num > f)",
   "      num = f;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "86fde2d3415fb0787c92b4e7e360e8a8fab080bd",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 11:45:22",
  "condition": [
   "  e = v[0];",
   "}",
   "num = strm_value_flt(e);",
   "for (i=1; i<len; i++) {"
  ],
  "consequent": [
   "for (i=1; i<len; i++) {",
   "  f = strm_value_flt(v[i]);",
   "  if (num < f)",
   "    num = f;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "86fde2d3415fb0787c92b4e7e360e8a8fab080bd",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 11:45:22",
  "condition": [
   "strm_emit(strm, d->data, NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(d->num), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "86fde2d3415fb0787c92b4e7e360e8a8fab080bd",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 11:45:22",
  "condition": [
   "else {",
   "  e = v[0];",
   "}"
  ],
  "consequent": [
   "}",
   "*ret = strm_flt_value(num);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "03e9ccca99c148bdd4a2be753c9bb9a5e4955816",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 11:08:59",
  "condition": [
   "double y = strm_value_flt(data) - d->c;",
   "double t = d->sum + y;",
   "d->c = (t - d->sum) - y;",
   "d->sum =  t;"
  ],
  "consequent": [
   " d->sum += strm_value_flt(data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "03e9ccca99c148bdd4a2be753c9bb9a5e4955816",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 11:08:59",
  "condition": [
   "double y = strm_value_flt(v[i]) - c;"
  ],
  "consequent": [
   "sum += strm_value_flt(v[i]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "1f2767fb89cad3ae9aff2af117f45cd50c0f6928",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 00:02:03",
  "condition": [
   "if (!d) return STRM_NG;"
  ],
  "consequent": []
 },
 {
  "repository": "matz/streem",
  "sha": "1f2767fb89cad3ae9aff2af117f45cd50c0f6928",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-15 00:02:03",
  "condition": [
   " struct map_data* d;",
   " switch (argc) {",
   " case 1:                       /* flatmap(func) */",
   "   break;",
   " case 2:                       /* flatmap(ary, func) */",
   "   return flatmap_ary(strm, strm_value_ary(args[0]), args[1], ret);",
   " default:",
   "   strm_raise(strm, \"wrong number of arguments\");",
   "   return STRM_NG;",
   " }",
   " d = malloc(sizeof(struct map_data));"
  ],
  "consequent": [
   "struct map_data* d = malloc(sizeof(struct map_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "6f1587f56f11ae3f123b042eb3b66bb9e7cf0c0e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 22:11:18",
  "condition": [
   "if (!d) return STRM_NG;"
  ],
  "consequent": []
 },
 {
  "repository": "matz/streem",
  "sha": "6f1587f56f11ae3f123b042eb3b66bb9e7cf0c0e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 22:11:18",
  "condition": [
   " struct map_data* d;",
   " switch (argc) {",
   " case 1:                       /* map(func) */",
   "   break;",
   " case 2:                       /* map(ary, func) */",
   "   return map_ary(strm, strm_value_ary(args[0]), args[1], ret);",
   " default:",
   "   strm_raise(strm, \"wrong number of arguments\");",
   "   return STRM_NG;",
   " }",
   " d = malloc(sizeof(struct map_data));"
  ],
  "consequent": [
   "struct map_data* d = malloc(sizeof(struct map_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d6331b35b37b8a7ca81685aa430267b9af26329d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 22:00:17",
  "condition": [
   "for (i=0; i<len; i++) {"
  ],
  "consequent": [
   "if (strm_nil_p(func)) {",
   "  for (i=0; i<len; i++) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d6331b35b37b8a7ca81685aa430267b9af26329d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 22:00:17",
  "condition": [
   "sum += strm_value_flt(v[i]);"
  ],
  "consequent": [
   "       sum += strm_value_flt(v[i]);",
   "     }",
   "   }",
   "   else {",
   "     for (i=0; i<len; i++) {",
   "       strm_value data = v[i];",
   "       if (strm_funcall(strm, func, 1, &data, &data) == STRM_NG) {",
   "         return STRM_NG;",
   "       }",
   "       sum += strm_value_flt(data);",
   "     }"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "d6331b35b37b8a7ca81685aa430267b9af26329d",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 22:00:17",
  "condition": [
   "values = args[0];"
  ],
  "consequent": [
   "  func = args[0];",
   "  if (strm_array_p(func)) {",
   "    values = func;",
   "    func = strm_nil_value();",
   "  }",
   "  break;",
   "case 2:",
   "  values = strm_value_ary(args[0]);",
   "  func = args[1];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2e2dd0ccf63bfdafd2d505eaaf35c6f37622f3fe",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 21:46:44",
  "condition": [
   "if (avg) {",
   "  *ret = strm_flt_value(sum/len);",
   "}",
   "else {",
   "  *ret = strm_flt_value(sum);"
  ],
  "consequent": [
   "*ret = strm_flt_value(sum);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2e2dd0ccf63bfdafd2d505eaaf35c6f37622f3fe",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 21:46:44",
  "condition": [
   "avg_finish(strm_stream* strm, strm_value data)",
   "{",
   "  struct sum_data* d = strm->data;",
   "",
   "  strm_emit(strm, strm_flt_value(d->sum/d->num), NULL);",
   "  return STRM_OK;",
   "}",
   "",
   "static int",
   "exec_sum_avg(strm_stream* strm, int argc, strm_value* args, strm_value* ret, int avg)"
  ],
  "consequent": [
   "exec_sum(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2e2dd0ccf63bfdafd2d505eaaf35c6f37622f3fe",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 21:46:44",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_sum,"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_sum, sum_finish, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd2ad5da41ffc8f003686ecb431adea872b20e4a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-26 10:46:30",
  "condition": [
   "struct strm_queue_node *n = q->tail;",
   "struct strm_queue_node *next = n->next;",
   "if (n != q->tail) continue;",
   "if (next == NULL) {",
   "  if (strm_atomic_cas(n->next, next, node)) {"
  ],
  "consequent": [
   "n = q->tail;",
   "if (strm_atomic_cas(n->next, NULL, node)) {",
   "  break;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd2ad5da41ffc8f003686ecb431adea872b20e4a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-26 10:46:30",
  "condition": [
   "if (strm_atomic_cas(q->head, n, next)) {"
  ],
  "consequent": [
   "if (strm_atomic_cas(q->head, n, n->next)) {",
   "  break;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd2ad5da41ffc8f003686ecb431adea872b20e4a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-26 10:46:30",
  "condition": [
   "strm_atomic_cas(q->tail, n, next);"
  ],
  "consequent": [
   "strm_atomic_cas(q->tail, n, n->next);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "cd2ad5da41ffc8f003686ecb431adea872b20e4a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-26 10:46:30",
  "condition": [
   "struct strm_queue_node *n = q->head;",
   "struct strm_queue_node *next = n->next;",
   "if (n != q->head) continue;",
   "if (next == NULL) {"
  ],
  "consequent": [
   "n = q->head;",
   "if (n->next == NULL) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e698036894803bd581ed39eb6e7dde14c44de69a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 13:55:02",
  "condition": [
   "if (t == NULL) {",
   "  t = strptime(s, \"%b %d %Y\", &tm);",
   "  /* check year and hour confusion (Apr 14 20:00 is not year 20 AD) */",
   "  if (t && t[0] == ':') {",
   "    t = NULL;",
   "  }",
   "}",
   "if (t == NULL) {",
   "  struct tm tm2;",
   "  tt = time(NULL);",
   "  localtime_r(&tt, &tm2);",
   "  tm.tm_year = tm2.tm_year;",
   "  t = strptime(s, \"%b %d\", &tm);",
   "}",
   "if (t == NULL) goto bad;",
   "if (t == tend) {",
   "  tt = mktime(&tm);"
  ],
  "consequent": [
   "if (t != NULL && t == tend) {",
   "  time_t time = mktime(&tm);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e698036894803bd581ed39eb6e7dde14c44de69a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 13:55:02",
  "condition": [
   "*sec = tt;"
  ],
  "consequent": [
   "*sec = time;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e698036894803bd581ed39eb6e7dde14c44de69a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 13:55:02",
  "condition": [
   "time_t tt;"
  ],
  "consequent": [
   "time_t time;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e698036894803bd581ed39eb6e7dde14c44de69a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 13:55:02",
  "condition": [
   "tt -= n;"
  ],
  "consequent": [
   "time -= n;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e698036894803bd581ed39eb6e7dde14c44de69a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 13:55:02",
  "condition": [
   "tt = mktime(&tm);"
  ],
  "consequent": [
   "time = mktime(&tm);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e698036894803bd581ed39eb6e7dde14c44de69a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-14 13:55:02",
  "condition": [
   "tt += localoffset;"
  ],
  "consequent": [
   "time += localoffset;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b86f4aa0c50ce2090a13912fef2d94c3698f8663",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:36:20",
  "condition": [
   "switch (ftype) {",
   "case TYPE_ESC:                /* escaped_string */",
   "  {",
   "    const char *pend = p + len;"
  ],
  "consequent": [
   "if (ftype == TYPE_ESC) {      /* escaped_string */",
   "  const char *pend = p + len;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b86f4aa0c50ce2090a13912fef2d94c3698f8663",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:36:20",
  "condition": [
   "type = TYPE_TIME;",
   "break;"
  ],
  "consequent": [
   "goto string;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b86f4aa0c50ce2090a13912fef2d94c3698f8663",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:36:20",
  "condition": [
   "switch (ftype) {",
   "case TYPE_UNSPC:",
   "case TYPE_NUM:"
  ],
  "consequent": [
   "if (ftype == TYPE_UNSPC || ftype == TYPE_NUM) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b86f4aa0c50ce2090a13912fef2d94c3698f8663",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:36:20",
  "condition": [
   "}"
  ],
  "consequent": [
   "}",
   "else {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b86f4aa0c50ce2090a13912fef2d94c3698f8663",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:36:20",
  "condition": [
   "p++;"
  ],
  "consequent": [
   "}",
   "else if (*p == '\"') {",
   "  in_quote = 1;",
   "}",
   "else {",
   "  *t++ = *p;",
   "}",
   "p++;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b86f4aa0c50ce2090a13912fef2d94c3698f8663",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:36:20",
  "condition": [
   "type = TYPE_UNSPC;",
   "break;"
  ],
  "consequent": [
   "return strm_str_value(strm_str_new(p, len));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b86f4aa0c50ce2090a13912fef2d94c3698f8663",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:36:20",
  "condition": [
   "*t++ = *p;"
  ],
  "consequent": [
   "in_quote = 0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f484cb82e925e521e9e235981b1e193041c41614",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:11:22",
  "condition": [
   "   goto good;",
   " }",
   " switch (*t++) {",
   " case 'T':",
   "   break;",
   " case ' ':",
   "   while (*t == ' ')",
   "     t++;",
   "   break;",
   " default:",
   "   goto bad;",
   " }",
   " t2 = strptime(t, \"%H:%M:%S\", &tm);",
   " if (t2 == NULL) {",
   "   t2 = strptime(t, \"%H:%M\", &tm);",
   "   if (t2 == NULL)",
   "     goto bad;",
   " }",
   " t = t2;",
   " time = mktime(&tm);",
   " if (t[0] == '.') {          /* frac */",
   "   t++;",
   "   long frac = scan_num(&t, tend);",
   "   if (frac < 0) goto bad;",
   "   if (frac > 0) {",
   "     double d = ceil(log10((double)frac));",
   "     d = ((double)frac / pow(10.0, d));",
   "     *usec = d * 1000000;",
   "   }"
  ],
  "consequent": [
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f484cb82e925e521e9e235981b1e193041c41614",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:11:22",
  "condition": [
   "struct tm tm = {0};"
  ],
  "consequent": [
   "struct tm tm;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f484cb82e925e521e9e235981b1e193041c41614",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-13 00:11:22",
  "condition": [
   "t = strptime(s, \"%Y.%m.%d\", &tm);   /* Streem time literal */"
  ],
  "consequent": [
   " memset(&tm, 0, sizeof(struct tm));",
   " t = strptime(s, \"%Y.%m.%dT%H:%M:%S\", &tm);",
   " if (t == NULL) {",
   "   t = strptime(s, \"%Y.%m.%dT%H:%M\", &tm);",
   " }",
   " if (t == NULL) {",
   "   t = strptime(s, \"%Y-%m-%dT%H:%M:%S\", &tm); /* ISO8601 */",
   " }",
   " if (t == NULL) {",
   "   t = strptime(s, \"%Y-%m-%dT%H:%M\", &tm);",
   " }",
   " if (t != NULL) {",
   "   time_t time = mktime(&tm);",
   "   if (t[0] == '.') {          /* frac */",
   "     t++;",
   "     long frac = scan_num(&t, tend);",
   "     if (frac < 0) goto bad;",
   "     if (frac > 0) {",
   "       double d = ceil(log10((double)frac));",
   "       d = ((double)frac / pow(10.0, d));",
   "       *usec = d * 1000000;",
   "     }",
   "   }",
   "   if (t[0] == 'Z') {          /* UTC zone */",
   "     time += localoffset;",
   "     *offset = 0;",
   "   }",
   "   else if (t == tend) {",
   "     *offset = localoffset;",
   "   }",
   "   else {",
   "     int n;",
   "     switch (t[0]) {           /* offset zone */",
   "     case '+':",
   "     case '-':",
   "       n = parse_tz(t, (strm_int)(tend-t));",
   "       if (n == TZ_FAIL) goto bad;",
   "       time += localoffset;",
   "       time -= n;",
   "       *offset = n;",
   "       break;",
   "     default:",
   "       goto bad;",
   "     }",
   "   }",
   "   *sec = time;",
   "   goto good;",
   " }",
   " memset(&tm, 0, sizeof(struct tm));",
   " t = strptime(s, \"%Y.%m.%d\", &tm);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb1da63079d7b57de6876d0c2f3aa2cf6df0111e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 21:27:52",
  "condition": [
   "strm_clear_exc(&top_strm);"
  ],
  "consequent": [
   "strm_clear_exc(top_strm);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb1da63079d7b57de6876d0c2f3aa2cf6df0111e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 21:27:52",
  "condition": [
   "strm_eprint(&top_strm);"
  ],
  "consequent": [
   "strm_eprint(top_strm);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb1da63079d7b57de6876d0c2f3aa2cf6df0111e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 21:27:52",
  "condition": [
   "exec_expr(&top_strm, &top_state, (node*)p->lval, &v);"
  ],
  "consequent": [
   "exec_expr(top_strm, top_state, (node*)p->lval, &v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb1da63079d7b57de6876d0c2f3aa2cf6df0111e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 21:27:52",
  "condition": [
   "static strm_state top_state = {0};"
  ],
  "consequent": [
   "static strm_state* top_state;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb1da63079d7b57de6876d0c2f3aa2cf6df0111e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 21:27:52",
  "condition": [
   "static strm_stream top_strm = {0};"
  ],
  "consequent": [
   "static strm_stream* top_strm;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb1da63079d7b57de6876d0c2f3aa2cf6df0111e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 21:27:52",
  "condition": [
   "node_init(&top_state);"
  ],
  "consequent": [
   "top_state = calloc(sizeof(strm_state),1);",
   "top_strm = calloc(sizeof(strm_stream),1);",
   "node_init(top_state);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb1da63079d7b57de6876d0c2f3aa2cf6df0111e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 21:27:52",
  "condition": [
   "exc = top_strm.exc;"
  ],
  "consequent": [
   "exc = top_strm->exc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "time -= n;"
  ],
  "consequent": [
   "time -= n*60;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "TZ_FAIL = 60000,              /* broken timezone */"
  ],
  "consequent": [
   "TZ_FAIL = 4000,               /* broken timezone */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "t += utc_offset;"
  ],
  "consequent": [
   "t += utc_offset * 60;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "tv.tv_sec += time_localoffset(1);"
  ],
  "consequent": [
   "tv.tv_sec += time_localoffset(1)*60;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "int off = utc_offset / 60;"
  ],
  "consequent": [
   "int off = utc_offset;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "localoffset = difftime(now, mktime(&gm));"
  ],
  "consequent": [
   "d = difftime(now, mktime(&gm));",
   "localoffset = d / 60;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "return (h*60+m) * (c == '-' ? -1 : 1) * 60;"
  ],
  "consequent": [
   "return (h*60+m) * (c == '-' ? -1 : 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "TZ_NONE = 50000,              /* no time, no timezone */"
  ],
  "consequent": [
   "TZ_NONE = 2000,               /* no time, no timezone */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "tv.tv_sec -= utc_offset;"
  ],
  "consequent": [
   "tv.tv_sec -= utc_offset*60;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "312601459cdd8ab83eef471eb4bac5a8fdbc83ee",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:51:34",
  "condition": [
   "time += localoffset;"
  ],
  "consequent": [
   "time += localoffset*60;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "077fe049af31c73a6d4a4a5666ee4330029beeec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:37:00",
  "condition": [
   "int localoffset = time_localoffset(1);"
  ],
  "consequent": [
   "int localoffset = time_localoffset();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "077fe049af31c73a6d4a4a5666ee4330029beeec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:37:00",
  "condition": [
   "if (force || localoffset == 1) {"
  ],
  "consequent": [
   "if (localoffset == 1) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "077fe049af31c73a6d4a4a5666ee4330029beeec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:37:00",
  "condition": [
   "utc_offset = time_localoffset(0);"
  ],
  "consequent": [
   "utc_offset = time_localoffset(); "
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "077fe049af31c73a6d4a4a5666ee4330029beeec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:37:00",
  "condition": [
   "utc_offset = time_localoffset(0);"
  ],
  "consequent": [
   "utc_offset = time_localoffset();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "077fe049af31c73a6d4a4a5666ee4330029beeec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:37:00",
  "condition": [
   "time_localoffset(int force)"
  ],
  "consequent": [
   "time_localoffset()"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "077fe049af31c73a6d4a4a5666ee4330029beeec",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 00:37:00",
  "condition": [
   "tv.tv_sec += time_localoffset(1)*60;"
  ],
  "consequent": [
   "tv.tv_sec += time_localoffset()*60;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "58b909aa7c932a41baf6550f3de91dc759562d65",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-06 12:31:43",
  "condition": [
   "t->tv = *tv;"
  ],
  "consequent": [
   "memcpy(&t->tv, tv, sizeof(struct timeval));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8b0b396d6cbe9c686bf61c8d7607027ae3b1c9c3",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-06 12:17:36",
  "condition": [
   "if (npair && npair->type == NODE_PAIR) {"
  ],
  "consequent": [
   "if (npair->type == NODE_PAIR) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "6051b5cfce4f36c6cffb0cb245cd2f9bedc0565f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-06 12:10:06",
  "condition": [
   "struct timeval tv, tv2;"
  ],
  "consequent": [
   "struct timeval tv;",
   "double d;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "6051b5cfce4f36c6cffb0cb245cd2f9bedc0565f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-06 12:10:06",
  "condition": [
   "timeradd(&t1->tv, &tv, &tv2);",
   "return time_alloc(&tv2, t1->utc_offset, ret);"
  ],
  "consequent": [
   "return time_alloc(&tv, t1->utc_offset, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "6051b5cfce4f36c6cffb0cb245cd2f9bedc0565f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-06 12:10:06",
  "condition": [
   "num_to_timeval(strm_value_flt(args[1]), &tv);"
  ],
  "consequent": [
   "d = timeval_to_num(&t1->tv);",
   "num_to_timeval(d+strm_value_flt(args[1]), &tv);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "6051b5cfce4f36c6cffb0cb245cd2f9bedc0565f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-06 12:10:06",
  "condition": [
   "timersub(&t1->tv, &t2->tv, &tv);",
   "d = timeval_to_num(&tv);"
  ],
  "consequent": [
   "d = t1->tv.tv_sec - t2->tv.tv_sec;",
   "nsec = t1->tv.tv_usec - t2->tv.tv_usec;",
   "while (nsec < 0) {",
   "  d -= 1.0;",
   "  nsec += 1000000;",
   "}",
   "while (nsec > 1000000) {",
   "  d += 1.0;",
   "  nsec -= 1000000;",
   "}",
   "d += nsec / 1000000.0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "204ae440b0a65ed2908992a8cdd7d5a75e3cb735",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-06 11:51:34",
  "condition": [
   "if (t->tv.tv_usec == 0) {",
   "  *ret = strm_int_value(t->tv.tv_sec);",
   "}",
   "else {",
   "  *ret = strm_flt_value(timeval_to_num(&t->tv));"
  ],
  "consequent": [
   "*ret = strm_flt_value(timeval_to_num(&t->tv));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b0464241079d3dc0b7eff6f508ef8c9a72b0e692",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-12 23:47:58",
  "condition": [
   "strm_raise(strm, \"csv type mismatch\");",
   "return STRM_NG;"
  ],
  "consequent": [
   "  return STRM_NG;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b0464241079d3dc0b7eff6f508ef8c9a72b0e692",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-12 23:47:58",
  "condition": [
   "if (ftype == TYPE_ESC) {      /* escaped_string */"
  ],
  "consequent": [
   "if (ftype == 2) {             /* escaped_string */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b0464241079d3dc0b7eff6f508ef8c9a72b0e692",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-12 23:47:58",
  "condition": [
   "csv_string(const char* p, strm_int len, enum csv_type ftype)"
  ],
  "consequent": [
   "csv_string(const char* p, strm_int len, int ftype)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b0464241079d3dc0b7eff6f508ef8c9a72b0e692",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-12 23:47:58",
  "condition": [
   "int in_quote = 0, all_str = 1;"
  ],
  "consequent": [
   "int in_quote = 0, all_str = 1;;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b0464241079d3dc0b7eff6f508ef8c9a72b0e692",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-12 23:47:58",
  "condition": [
   "i++;",
   "ftype = types ? types[i] : TYPE_UNSPC;"
  ],
  "consequent": [
   "ftype = TYPE_UNSPC;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b0464241079d3dc0b7eff6f508ef8c9a72b0e692",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-12 23:47:58",
  "condition": [
   "/* type mismatch (error); skip this line */"
  ],
  "consequent": [
   "if (cd->types[i] == TYPE_STR) {",
   "  /* convert value to string */",
   "  ((strm_value*)strm_ary_ptr(ary))[i] = strm_str_value(strm_to_str(strm_ary_ptr(ary)[i]));",
   "}",
   "else {",
   "  /* type mismatch (error); skip this line */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b0464241079d3dc0b7eff6f508ef8c9a72b0e692",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-12 23:47:58",
  "condition": [
   "int i = 0;",
   "enum csv_type ftype;"
  ],
  "consequent": [
   "enum csv_type ftype = TYPE_UNSPC;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b0464241079d3dc0b7eff6f508ef8c9a72b0e692",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-12 23:47:58",
  "condition": [
   "if (ftype == TYPE_UNSPC || ftype == TYPE_NUM) {"
  ],
  "consequent": [
   "if (ftype == TYPE_UNSPC) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "if (ftype == TYPE_UNSPC) {"
  ],
  "consequent": [
   "if (ftype == FTYPE_UNSPC) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "type = TYPE_FLT;"
  ],
  "consequent": [
   "type = VTYPE_FLT;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "if (cd->types[i] == TYPE_STR) {"
  ],
  "consequent": [
   "if (cd->types[i] == STRING_TYPE) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "ftype = TYPE_UNSPC;"
  ],
  "consequent": [
   "ftype = FTYPE_UNSPC;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "else return TYPE_STR;"
  ],
  "consequent": [
   "else return STRING_TYPE;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "enum csv_type type = TYPE_STR;"
  ],
  "consequent": [
   "enum csv_vtype type = VTYPE_STR;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "ftype = TYPE_STR;"
  ],
  "consequent": [
   "ftype = FTYPE_STR;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "enum csv_type ftype = TYPE_UNSPC;"
  ],
  "consequent": [
   "enum csv_ftype ftype = FTYPE_UNSPC;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "if (type == TYPE_STR) type = TYPE_INT;"
  ],
  "consequent": [
   "if (type == VTYPE_STR) type = VTYPE_INT;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "if (strm_num_p(v)) return TYPE_NUM;"
  ],
  "consequent": [
   "if (strm_num_p(v)) return NUMBER_TYPE;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "case TYPE_INT:"
  ],
  "consequent": [
   "case VTYPE_INT:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "ftype = TYPE_ESC;"
  ],
  "consequent": [
   "ftype = FTYPE_ESC;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "TYPE_UNSPC,                  /* unspecified */",
   "TYPE_STR,                    /* string */",
   "TYPE_NUM,                    /* number */",
   "TYPE_ESC,                    /* escaped_string */",
   "TYPE_INT,                    /* integer */",
   "TYPE_FLT,                    /* float */"
  ],
  "consequent": [
   "STRING_TYPE,",
   "NUMBER_TYPE,"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "case TYPE_FLT:"
  ],
  "consequent": [
   "case VTYPE_FLT:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b1dead9644e05400cc732e43be1f9ee88a10258a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 20:34:43",
  "condition": [
   "csv_value(const char* p, strm_int len, enum csv_type ftype)"
  ],
  "consequent": [
   "csv_value(const char* p, strm_int len, enum csv_ftype ftype)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "case VTYPE_INT:"
  ],
  "consequent": [
   "case 1:                       /* int */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "csv_value(const char* p, strm_int len, enum csv_ftype ftype)"
  ],
  "consequent": [
   "csv_value(const char* p, strm_int len, int ftype)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "ftype = FTYPE_UNSPC;"
  ],
  "consequent": [
   "ftype = 0;                /* unspecified */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "if (ftype == FTYPE_UNSPC) {"
  ],
  "consequent": [
   "if (ftype == 0) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "enum csv_vtype type = VTYPE_STR;"
  ],
  "consequent": [
   "int type = 0;                 /* 0: string, 1: int, 2: float */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "type = VTYPE_FLT;"
  ],
  "consequent": [
   "type = 2;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "case VTYPE_FLT:"
  ],
  "consequent": [
   "case 2:                       /* float */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "ftype = FTYPE_STR;"
  ],
  "consequent": [
   "ftype = 1;              /* string */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "ftype = FTYPE_ESC;"
  ],
  "consequent": [
   "ftype = 2;              /* escaped_string */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "enum csv_ftype ftype = FTYPE_UNSPC;"
  ],
  "consequent": [
   "int ftype = 0;               /* 0: unspecified, 1: string, 2: escaped_string */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "if (type == VTYPE_STR) type = VTYPE_INT;"
  ],
  "consequent": [
   "if (type == STRING_TYPE) type = 1;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "a84599e121efc74f428e0e2b1a67e97eab22fdc2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-10 01:22:08",
  "condition": [
   "ftype = FTYPE_ESC;"
  ],
  "consequent": [
   "ftype = 2;            /* escaped_string */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3329b3866835ccfef4b4acc3c3cc8944c2f12799",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-09 01:48:47",
  "condition": [
   "if (strm_funcall(strm, d->func, 2, args, &v) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(NULL, d->func, 2, args, &v) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3329b3866835ccfef4b4acc3c3cc8944c2f12799",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-09 01:48:47",
  "condition": [
   "if (strm_funcall(strm, d->func, 1, &data, &data) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(NULL, d->func, 1, &data, &data) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3329b3866835ccfef4b4acc3c3cc8944c2f12799",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-09 01:48:47",
  "condition": [
   "if (strm_funcall(strm, d->func, 2, args, &data) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(NULL, d->func, 2, args, &data) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3329b3866835ccfef4b4acc3c3cc8944c2f12799",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-09 01:48:47",
  "condition": [
   "if (strm_funcall(strm, d->func, 1, &data, &val) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(NULL, d->func, 1, &data, &val) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4759c2898f5a62d814d41a7244aa2125484db9ce",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-09 01:42:13",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_each, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_consumer, iter_each, NULL, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "81c6ad90c4c22d20007f294b94309a20f4165c57",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 21:13:24",
  "condition": [
   "if (strm->dst && !strm_nil_p(data)) {"
  ],
  "consequent": [
   "if (!strm_nil_p(data)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "39533e7e958ee9063233905e8088783d95f971ab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 18:16:31",
  "condition": [
   "exc = top_strm->exc;"
  ],
  "consequent": [
   "exc = t.exc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "39533e7e958ee9063233905e8088783d95f971ab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 18:16:31",
  "condition": [
   "top_state = calloc(sizeof(strm_state),1);",
   "top_strm = calloc(sizeof(strm_stream),1);",
   "node_init(top_state);"
  ],
  "consequent": [
   "node_init(&c);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "39533e7e958ee9063233905e8088783d95f971ab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 18:16:31",
  "condition": [
   "exec_expr(top_strm, top_state, (node*)p->lval, &v);"
  ],
  "consequent": [
   "exec_expr(&t, &c, (node*)p->lval, &v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "39533e7e958ee9063233905e8088783d95f971ab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 18:16:31",
  "condition": [
   "strm_clear_exc(top_strm);"
  ],
  "consequent": [
   "strm_clear_exc(&t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "39533e7e958ee9063233905e8088783d95f971ab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-07 18:16:31",
  "condition": [
   "strm_eprint(top_strm);"
  ],
  "consequent": [
   "strm_eprint(&t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "b40e010ab3315b621efacd517ffc795c0d912945",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-06 03:43:07",
  "condition": [
   "*val = strm_flt_value(((node_float*)np)->value);"
  ],
  "consequent": [
   "*val = strm_int_value(((node_float*)np)->value);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "28de1cff72e324f63089a8dc07ef4b2b57458824",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-05 16:46:20",
  "condition": [
   "strm_var_def(kvs_ns, \"string\", strm_cfunc_value(txn_str));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"to_str\", strm_cfunc_value(txn_str));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "28de1cff72e324f63089a8dc07ef4b2b57458824",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-05 16:46:20",
  "condition": [
   "strm_var_def(kvs_ns, \"string\", strm_cfunc_value(kvs_str));"
  ],
  "consequent": [
   "strm_var_def(kvs_ns, \"to_str\", strm_cfunc_value(kvs_str));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "28de1cff72e324f63089a8dc07ef4b2b57458824",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-05 16:46:20",
  "condition": [
   "n = strm_var_get(ns, strm_str_intern_lit(\"string\"), &m);"
  ],
  "consequent": [
   "n = strm_var_get(ns, strm_str_intern_lit(\"to_str\"), &m);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8e224e2dccfaafff665a94918be94ebad667e242",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-04-05 16:44:54",
  "condition": [
   "if (i > 0) {"
  ],
  "consequent": [
   "if (bi == 0) {",
   "  buf[bi++] = '[';",
   "}",
   "else {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "struct latch_data* d = strm->data;"
  ],
  "consequent": [
   "struct chan_data* d = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "latch_close(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "chan_close(strm_stream* strm, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "d = latch->data;"
  ],
  "consequent": [
   "d = chan->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "z->latch[i] = s;"
  ],
  "consequent": [
   "z->chan[i] = s;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_stream_close(z->latch[i]);"
  ],
  "consequent": [
   "strm_stream_close(z->chan[i]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_latch_new()"
  ],
  "consequent": [
   "strm_chan_new()"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "if (latch->mode == strm_consumer) return 0;"
  ],
  "consequent": [
   "if (chan->mode == strm_consumer) return 0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "void strm_latch_init(strm_state* state);"
  ],
  "consequent": [
   "void strm_chan_init(strm_state* state);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "if (strm_latch_finish_p(d->latch[d->i])) {"
  ],
  "consequent": [
   "if (strm_chan_finish_p(d->chan[d->i])) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_latch_receive(z->latch[z->i], strm, zip_iter);"
  ],
  "consequent": [
   "strm_chan_receive(z->chan[z->i], strm, zip_iter);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "struct latch_data* d;"
  ],
  "consequent": [
   "struct chan_data* d;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "struct latch_data* c;"
  ],
  "consequent": [
   "struct chan_data* c;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "struct latch_data {"
  ],
  "consequent": [
   "struct chan_data {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "return strm_stream_new(strm_consumer, latch_get, latch_close, d);"
  ],
  "consequent": [
   "return strm_stream_new(strm_consumer, chan_get, chan_close, d);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_latch_init(strm_state* state)"
  ],
  "consequent": [
   "strm_chan_init(strm_state* state)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "s = strm_latch_new();"
  ],
  "consequent": [
   "s = strm_chan_new();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "assert(latch->start_func == latch_get);"
  ],
  "consequent": [
   "assert(chan->start_func == chan_get);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "c = latch->data;"
  ],
  "consequent": [
   "c = chan->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_latch_receive(strm_stream* latch, strm_stream* strm, strm_callback func)"
  ],
  "consequent": [
   "strm_chan_receive(strm_stream* chan, strm_stream* strm, strm_callback func)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_stream* latch[0];"
  ],
  "consequent": [
   "strm_stream* chan[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_latch_receive(d->latch[d->i], strm, concat_iter);"
  ],
  "consequent": [
   "strm_chan_receive(d->chan[d->i], strm, concat_iter);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_latch_init(state);"
  ],
  "consequent": [
   "strm_chan_init(state);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "latch_get(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "chan_get(strm_stream* strm, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_latch_receive(z->latch[0], strm, zip_iter);"
  ],
  "consequent": [
   "strm_chan_receive(z->chan[0], strm, zip_iter);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_latch_finish_p(strm_stream* latch)"
  ],
  "consequent": [
   "strm_chan_finish_p(strm_stream* chan)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "strm_stream_close(d->latch[d->i]);"
  ],
  "consequent": [
   "strm_stream_close(d->chan[d->i]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "d->latch[i] = s;"
  ],
  "consequent": [
   "d->chan[i] = s;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "struct latch_data* d = malloc(sizeof(struct latch_data));"
  ],
  "consequent": [
   "struct chan_data* d = malloc(sizeof(struct chan_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "eedccfb1b460994196ad56ea91ca4b9de599b95a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-31 22:22:46",
  "condition": [
   "if (strm_latch_finish_p(z->latch[i]))"
  ],
  "consequent": [
   "if (strm_chan_finish_p(z->chan[i]))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "/* src: io */"
  ],
  "consequent": [
   " strm_value lhs, rhs;",
   " assert(argc == 2);",
   " /* int x int */",
   " if (strm_int_p(args[0]) && strm_int_p(args[1])) {",
   "   *ret = strm_int_value(strm_value_int(args[0])|strm_value_int(args[1]));",
   "   return STRM_OK;",
   " }",
   " lhs = args[0];",
   " /* lhs: io */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "strm_stream* rstrm = strm_value_stream(dst);"
  ],
  "consequent": [
   "strm_stream* rstrm = strm_value_stream(rhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "*ret = dst;"
  ],
  "consequent": [
   "*ret = rhs;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "if (strm_io_p(dst)) {"
  ],
  "consequent": [
   "if (strm_io_p(rhs)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "  return STRM_OK;",
   "}",
   "return STRM_NG;"
  ],
  "consequent": [
   "return STRM_OK;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "else if (strm_lambda_p(dst)) {"
  ],
  "consequent": [
   "else if (strm_lambda_p(rhs)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "strm_stream_connect(strm_value_stream(src), strm_value_stream(dst));"
  ],
  "consequent": [
   "strm_stream_connect(strm_value_stream(lhs), strm_value_stream(rhs));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "/* dst: io */"
  ],
  "consequent": [
   "rhs = args[1];",
   "/* rhs: io */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "/* src: should be stream */"
  ],
  "consequent": [
   "/* lhs: should be stream */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "int",
   "strm_connect(strm_stream* strm, strm_value src, strm_value dst, strm_value* ret)"
  ],
  "consequent": [
   "static int",
   "exec_bar(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "dst = strm_stream_value(strm_io_stream(dst, STRM_IO_WRITE));"
  ],
  "consequent": [
   "rhs = strm_stream_value(strm_io_stream(rhs, STRM_IO_WRITE));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "dst = strm_stream_value(strm_stream_new(strm_filter, cfunc_exec, NULL, func));"
  ],
  "consequent": [
   "rhs = strm_stream_value(strm_stream_new(strm_filter, cfunc_exec, NULL, func));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "/* dst: cfunc */"
  ],
  "consequent": [
   "/* rhs: cfunc */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "arrd->arr = strm_value_ary(src);"
  ],
  "consequent": [
   "arrd->arr = strm_value_ary(lhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "strm_connect(strm, args[i], strm_stream_value(s), &r);"
  ],
  "consequent": [
   "strm_stream_connect(strm_value_stream(args[i]), s);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "if (strm_io_p(src)) {"
  ],
  "consequent": [
   "if (strm_io_p(lhs)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "static int",
   "exec_bar(strm_stream* strm, int argc, strm_value* args, strm_value* ret)",
   "{",
   "  assert(argc == 2);",
   "  /* int x int */",
   "  if (strm_int_p(args[0]) && strm_int_p(args[1])) {",
   "    *ret = strm_int_value(strm_value_int(args[0])|strm_value_int(args[1]));",
   "    return STRM_OK;"
  ],
  "consequent": [
   "strm_raise(strm, \"type error\");",
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "strm_stream* lstrm = strm_value_stream(src);"
  ],
  "consequent": [
   "strm_stream* lstrm = strm_value_stream(lhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "/* src: lambda */"
  ],
  "consequent": [
   "/* lhs: lambda */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "if (strm_stream_p(src) && strm_stream_p(dst)) {"
  ],
  "consequent": [
   "if (strm_stream_p(lhs) && strm_stream_p(rhs)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "struct strm_lambda* lmbd = strm_value_lambda(src);"
  ],
  "consequent": [
   "struct strm_lambda* lmbd = strm_value_lambda(lhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "strm_cfunc func = strm_value_cfunc(dst);"
  ],
  "consequent": [
   "strm_cfunc func = strm_value_cfunc(rhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "else if (strm_array_p(src)) {"
  ],
  "consequent": [
   "else if (strm_array_p(lhs)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "else if (strm_lambda_p(src)) {"
  ],
  "consequent": [
   "else if (strm_lambda_p(lhs)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "src = strm_stream_value(strm_io_stream(src, STRM_IO_READ));"
  ],
  "consequent": [
   "lhs = strm_stream_value(strm_io_stream(lhs, STRM_IO_READ));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "/* src: array */"
  ],
  "consequent": [
   "/* lhs: array */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "src = strm_stream_value(strm_stream_new(strm_producer, arr_exec, NULL, (void*)arrd));"
  ],
  "consequent": [
   "lhs = strm_stream_value(strm_stream_new(strm_producer, arr_exec, NULL, (void*)arrd));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "dst = strm_stream_value(strm_stream_new(strm_filter, blk_exec, NULL, (void*)lmbd));"
  ],
  "consequent": [
   "rhs = strm_stream_value(strm_stream_new(strm_filter, blk_exec, NULL, (void*)lmbd));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "else if (strm_cfunc_p(dst)) {"
  ],
  "consequent": [
   "else if (strm_cfunc_p(rhs)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "struct strm_lambda* lmbd = strm_value_lambda(dst);"
  ],
  "consequent": [
   "struct strm_lambda* lmbd = strm_value_lambda(rhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "/* dst: lambda */"
  ],
  "consequent": [
   "/* rhs: lambda */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c58bd00dd7bbc350bf70aa3e9e48c9289893dbd2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-15 16:09:59",
  "condition": [
   "src = strm_stream_value(strm_stream_new(strm_filter, blk_exec, NULL, (void*)lmbd));"
  ],
  "consequent": [
   "lhs = strm_stream_value(strm_stream_new(strm_filter, blk_exec, NULL, (void*)lmbd));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "6e92f6c0efb482fc906e54fdb8f3fe20cec4e8db",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 22:46:49",
  "condition": [
   "int strm_queue_add(struct strm_queue* queue, void* val);"
  ],
  "consequent": [
   "int strm_queue_add(struct strm_queue* root, void* val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "6e92f6c0efb482fc906e54fdb8f3fe20cec4e8db",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 22:46:49",
  "condition": [
   "void* strm_queue_get(struct strm_queue* queue);"
  ],
  "consequent": [
   "void* strm_queue_get(struct strm_queue* root);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8d3bd1153d0d11c79b730972f3800ea354cf705c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 21:49:27",
  "condition": [
   "struct strm_lambda* lambda = malloc(sizeof(struct strm_lambda));"
  ],
  "consequent": [
   "strm_lambda lambda = malloc(sizeof(struct strm_lambda));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8d3bd1153d0d11c79b730972f3800ea354cf705c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 21:49:27",
  "condition": [
   "struct strm_lambda* lambda = strm->data;"
  ],
  "consequent": [
   "strm_lambda lambda = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8d3bd1153d0d11c79b730972f3800ea354cf705c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 21:49:27",
  "condition": [
   "struct strm_lambda* lmbd = strm_value_lambda(lhs);"
  ],
  "consequent": [
   "strm_lambda lmbd = strm_value_lambda(lhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8d3bd1153d0d11c79b730972f3800ea354cf705c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 21:49:27",
  "condition": [
   "#define strm_value_lambda(v) (struct strm_lambda*)strm_value_ptr(v, STRM_PTR_LAMBDA)"
  ],
  "consequent": [
   "#define strm_value_lambda(v) (strm_lambda)strm_value_ptr(v, STRM_PTR_LAMBDA)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8d3bd1153d0d11c79b730972f3800ea354cf705c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 21:49:27",
  "condition": [
   "};"
  ],
  "consequent": [
   "} *strm_lambda;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8d3bd1153d0d11c79b730972f3800ea354cf705c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 21:49:27",
  "condition": [
   "struct strm_lambda {"
  ],
  "consequent": [
   "typedef struct strm_lambda {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8d3bd1153d0d11c79b730972f3800ea354cf705c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 21:49:27",
  "condition": [
   "struct strm_lambda* lambda = strm_value_lambda(func);"
  ],
  "consequent": [
   "strm_lambda lambda = strm_value_lambda(func);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "8d3bd1153d0d11c79b730972f3800ea354cf705c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-11 21:49:27",
  "condition": [
   "struct strm_lambda* lmbd = strm_value_lambda(rhs);"
  ],
  "consequent": [
   "strm_lambda lmbd = strm_value_lambda(rhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "23f903216d10107608cccd785eef37e77b59ab24",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-10 13:51:42",
  "condition": [
   "free(strm->data);"
  ],
  "consequent": [
   "strm->data = NULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "534baeb691a77c40777db662456899de86c1932a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 23:37:36",
  "condition": [
   "strm_atomic_inc(dst->refcnt);"
  ],
  "consequent": [
   "strm_atomic_add(dst->refcnt, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "534baeb691a77c40777db662456899de86c1932a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 23:37:36",
  "condition": [
   "strm_atomic_dec(stream_count);"
  ],
  "consequent": [
   "strm_atomic_sub(stream_count, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "534baeb691a77c40777db662456899de86c1932a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 23:37:36",
  "condition": [
   "strm_atomic_dec(strm->refcnt);"
  ],
  "consequent": [
   "strm_atomic_sub(strm->refcnt, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "534baeb691a77c40777db662456899de86c1932a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 23:37:36",
  "condition": [
   "strm_atomic_inc(stream_count);"
  ],
  "consequent": [
   "strm_atomic_add(stream_count, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "strm_atomic_cas(q->tail, n, n->next);"
  ],
  "consequent": [
   "strm_atomic_cas(&(q->tail), n, n->next);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "if (strm_atomic_cas(strm->excl, 0, 1)) {"
  ],
  "consequent": [
   "if (strm_atomic_cas(&strm->excl, 0, 1)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "if (!strm_atomic_cas(strm->mode, mode, strm_killed)) {"
  ],
  "consequent": [
   "if (!strm_atomic_cas(&strm->mode, mode, strm_killed)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "if (strm_atomic_cas(q->head, n, n->next)) {"
  ],
  "consequent": [
   "if (strm_atomic_cas(&(q->head), n, n->next)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "strm_atomic_cas(q->tail, n, node);"
  ],
  "consequent": [
   "strm_atomic_cas(&(q->tail), n, node);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "if (strm_atomic_cas(n->next, NULL, node)) {"
  ],
  "consequent": [
   "if (strm_atomic_cas(&(n->next), NULL, node)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "strm_atomic_add(dst->refcnt, 1);"
  ],
  "consequent": [
   "strm_atomic_add(&dst->refcnt, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "strm_atomic_sub(stream_count, 1);"
  ],
  "consequent": [
   "strm_atomic_sub(&stream_count, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "#define strm_atomic_cas(a,b,c) __sync_bool_compare_and_swap(&(a),(b),(c))"
  ],
  "consequent": [
   "#define strm_atomic_cas(a,b,c) __sync_bool_compare_and_swap((a),(b),(c))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "#define strm_atomic_sub(a,b) __sync_fetch_and_sub(&(a),(b))"
  ],
  "consequent": [
   "#define strm_atomic_sub(a,b) __sync_fetch_and_sub((a),(b))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "#define strm_atomic_or(a,b) __sync_fetch_and_or(&(a),(b))"
  ],
  "consequent": [
   "#define strm_atomic_or(a,b) __sync_fetch_and_or((a),(b))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "#define strm_atomic_add(a,b) __sync_fetch_and_add(&(a),(b))"
  ],
  "consequent": [
   "#define strm_atomic_add(a,b) __sync_fetch_and_add((a),(b))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "strm_atomic_add(stream_count, 1);"
  ],
  "consequent": [
   "strm_atomic_add(&stream_count, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "strm_atomic_cas(strm->excl, 1, 0);"
  ],
  "consequent": [
   "strm_atomic_cas(&strm->excl, 1, 0);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "strm_atomic_sub(strm->refcnt, 1);"
  ],
  "consequent": [
   "strm_atomic_sub(&strm->refcnt, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "7e4e07b11ceae128691acf1f1e2dd93d59703dab",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-09 14:08:01",
  "condition": [
   "#define strm_atomic_and(a,b) __sync_fetch_and_and(&(a),(b))"
  ],
  "consequent": [
   "#define strm_atomic_and(a,b) __sync_fetch_and_and((a),(b))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e5649d3e244682428738ede17fac5e10c30e2df5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-03 16:58:06",
  "condition": [
   "strm_state* ns = strm_ary_ns(val);",
   "if (ns) return ns;",
   "return strm_array_ns;"
  ],
  "consequent": [
   "return strm_ary_ns(val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "e5649d3e244682428738ede17fac5e10c30e2df5",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-03 16:58:06",
  "condition": [
   "if (strm_array_p(val)) {"
  ],
  "consequent": [
   "if (strm_array_p(val))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0a325666e260c5156269f91da34ea42265dffc0e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-01 17:33:24",
  "condition": [
   "assert(src->dst == NULL);"
  ],
  "consequent": [
   "d = src->dst;",
   "d = realloc(d, sizeof(strm_stream*)*(src->dlen+1));",
   "d[src->dlen++] = dst;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0a325666e260c5156269f91da34ea42265dffc0e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-01 17:33:24",
  "condition": [
   "strm_task_push(strm->dst, strm->dst->start_func, data);"
  ],
  "consequent": [
   "while (d < e) {",
   "  strm_task_push(*d, (*d)->start_func, data);",
   "  d++;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0a325666e260c5156269f91da34ea42265dffc0e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-01 17:33:24",
  "condition": [
   "strm_task_push(strm->dst, (strm_callback)strm_stream_close, strm_nil_value());"
  ],
  "consequent": [
   "strm_task_push(*d, (strm_callback)strm_stream_close, strm_nil_value());",
   "d++;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0a325666e260c5156269f91da34ea42265dffc0e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-01 17:33:24",
  "condition": [
   "src->dst = dst;"
  ],
  "consequent": [
   "src->dst = d;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0a325666e260c5156269f91da34ea42265dffc0e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-01 17:33:24",
  "condition": [
   "if (strm->dst) {"
  ],
  "consequent": [
   "d = strm->dst;",
   "while (dlen--) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0a325666e260c5156269f91da34ea42265dffc0e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-03-01 17:33:24",
  "condition": [
   "strm_stream *dst;"
  ],
  "consequent": [
   "strm_stream **dst;",
   "size_t dlen;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "static struct strm_task*",
   "io_task(strm_stream* strm, strm_callback func)"
  ],
  "consequent": [
   "int",
   "strm_io_waiting()"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_task_push(strm, func, strm_nil_value());"
  ],
  "consequent": [
   "strm_queue_add(prod_queue, strm_task_new(strm, func, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "sched_yield();"
  ],
  "consequent": [
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_task_add(strm_stream* strm, struct strm_task* task)"
  ],
  "consequent": [
   "strm_task_add(struct strm_task* task)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_atomic_cas(&(q->tail), n, n->next);"
  ],
  "consequent": [
   "strm_atomic_cas(&(root->tail), n, n->next);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "d++;"
  ],
  "consequent": [
   "*d++ = *t++;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "rstrm->mode == strm_producer) {"
  ],
  "consequent": [
   "lstrm->mode == strm_killed ||",
   "rstrm->mode == strm_producer ||",
   "rstrm->mode == strm_killed) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "if (strm) {"
  ],
  "consequent": [
   "if (t) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_task_new(strm_callback func, strm_value data)"
  ],
  "consequent": [
   "strm_task_new(strm_stream* strm, strm_callback func, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_atomic_cas(&strm->excl, 1, 0);"
  ],
  "consequent": [
   "task_exec(t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "n = q->tail;"
  ],
  "consequent": [
   "n = root->tail;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "if (!strm) {"
  ],
  "consequent": [
   "if (!t) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "if (strm_atomic_cas(&(q->head), n, n->next)) {"
  ],
  "consequent": [
   "if (strm_atomic_cas(&(root->head), n, n->next)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_filter, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_filter, NULL, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "  return strm_task_new(func, strm_foreign_value(strm));",
   "}",
   "",
   "static void",
   "io_task_add(struct strm_task* task)",
   "{",
   "  strm_stream* strm = strm_value_foreign(task->data);",
   "  task->data = strm_nil_value();",
   "  strm_task_add(strm, task);"
  ],
  "consequent": [
   "return (io_wait_num > 0);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "s->excl = 0;",
   "s->queue = strm_queue_new();"
  ],
  "consequent": [
   "s->queue = NULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_map, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_map, NULL, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm = strm_queue_get(prod_queue);"
  ],
  "consequent": [
   "t = strm_queue_get(prod_queue);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "d->count++;"
  ],
  "consequent": [
   "strm_atomic_add(&d->count, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "static strm_state szero = {0};",
   "                   "
  ],
  "consequent": []
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "struct strm_task {",
   "  strm_callback func;",
   "  strm_value data;",
   "};",
   "",
   "struct strm_task* strm_task_new(strm_callback func, strm_value data);"
  ],
  "consequent": [
   "struct strm_task* strm_task_new(strm_stream* strm, strm_callback func, strm_value data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_stream* strm;"
  ],
  "consequent": [
   "struct strm_worker* w = (struct strm_worker*)data;",
   "struct strm_queue* q = w->queue;",
   "struct strm_task* t;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "     if (strm_atomic_cas(&strm->excl, 0, 1)) {",
   "       struct strm_task* t;",
   "       while ((t = strm_queue_get(strm->queue)) != NULL) {",
   "         task_exec(strm, t);"
  ],
  "consequent": [
   "switch (t->strm->mode) {",
   "case strm_filter:",
   "case strm_consumer:",
   "  if (!t->strm->queue) {",
   "    strm_atomic_cas(&t->strm->queue, NULL, q);",
   "  }",
   "  strm_queue_add(t->strm->queue, t);",
   "  continue;",
   "default:",
   "  break;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "n = q->head;"
  ],
  "consequent": [
   "n = root->head;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_task_add(strm, strm_task_new(func, data));"
  ],
  "consequent": [
   "struct strm_task *t = strm_task_new(strm, func, data);",
   "strm_task_add(t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "*s = szero;"
  ],
  "consequent": [
   "memset(s, 0, sizeof(strm_state));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "while (d < e) {"
  ],
  "consequent": [
   "while (t < e) {",
   "  if ((*d)->mode == strm_killed) {",
   "    strm->dlen--;",
   "    t++;",
   "  }",
   "  else {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_queue_get(struct strm_queue* q)"
  ],
  "consequent": [
   "strm_queue_get(struct strm_queue* root)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_queue_add(strm->queue, task);"
  ],
  "consequent": [
   "strm_queue_add(queue, task);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "ev.data.ptr = io_task(strm, cb);"
  ],
  "consequent": [
   "ev.data.ptr = strm_task_new(strm, cb, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm = strm_queue_get(queue);"
  ],
  "consequent": [
   "sched_yield();",
   "t = strm_queue_get(q);",
   "if (t) {",
   "  task_exec(t);",
   "}",
   "else {",
   "  t = strm_queue_get(queue);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_count, count_finish, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_count, count_finish, (void*)d));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_queue_add(struct strm_queue* q, void* val)"
  ],
  "consequent": [
   "strm_queue_add(struct strm_queue* root, void* val)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_task_push(*d, (strm_callback)strm_stream_close, strm_nil_value());"
  ],
  "consequent": [
   "if ((*d)->mode != strm_killed) {",
   "  strm_task_push(*d, (strm_callback)strm_stream_close, strm_nil_value());",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "strm_atomic_cas(&(q->tail), n, node);"
  ],
  "consequent": [
   "strm_atomic_cas(&(root->tail), n, node);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "task_exec(strm_stream* strm, struct strm_task* task)"
  ],
  "consequent": [
   "task_exec(struct strm_task* task)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "void strm_task_add(strm_stream* strm, struct strm_task*);"
  ],
  "consequent": [
   "void strm_task_add(struct strm_task*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "854f64e50b7e249b25e940e93dc85ec2b837915c",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 12:14:41",
  "condition": [
   "io_task_add(events[i].data.ptr);"
  ],
  "consequent": [
   "struct strm_task *t = events[i].data.ptr;",
   "strm_task_add(t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->func = func;"
  ],
  "consequent": [
   "s->func = func;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct count_data* d = malloc(sizeof(struct count_data));"
  ],
  "consequent": [
   "struct count_data* c = malloc(sizeof(struct count_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct reduce_data* d = strm->data;"
  ],
  "consequent": [
   "struct reduce_data *r = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_map, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_map, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->sum += strm_value_flt(data);"
  ],
  "consequent": [
   "s->sum += strm_value_flt(data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_sum, sum_finish, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_sum, sum_finish, (void*)s));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "strm_emit(strm, strm_flt_value(d->sum), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_flt_value(s->sum), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d = malloc(sizeof(struct sum_data));"
  ],
  "consequent": [
   "s = malloc(sizeof(struct sum_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_split, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_split, NULL, (void*)sp));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->n = start;"
  ],
  "consequent": [
   "s->n = start;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "strm_atomic_add(&d->count, 1);"
  ],
  "consequent": [
   "strm_atomic_add(&s->count, 1);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct reduce_data* d;"
  ],
  "consequent": [
   "struct reduce_data* s;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->acc = (init) ? acc : strm_nil_value();"
  ],
  "consequent": [
   "s->acc = (init) ? acc : strm_nil_value();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "slen = strm_str_len(d->sep);"
  ],
  "consequent": [
   "slen = strm_str_len(sp->sep);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_filter, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_filter, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (!d->init) {"
  ],
  "consequent": [
   "if (!r->init) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "strm_emit(strm, strm_int_value(d->count), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_int_value(s->count), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->count = 0;"
  ],
  "consequent": [
   "c->count = 0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct split_data* d = strm->data;"
  ],
  "consequent": [
   "struct split_data *sp = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "strm_emit(strm, strm_int_value(d->acc), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_int_value(r->acc), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->init = 1;"
  ],
  "consequent": [
   "r->init = 1;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_consumer, iter_each, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_consumer, iter_each, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->sep = strm_str_lit(\" \");"
  ],
  "consequent": [
   "sp->sep = strm_str_lit(\" \");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->inc = inc;"
  ],
  "consequent": [
   "s->inc = inc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->sep = args[0];"
  ],
  "consequent": [
   "sp->sep = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_flatmap, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_flatmap, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (!d) return STRM_NG;"
  ],
  "consequent": [
   "if (!s) return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (strm_str_len(d->sep) < 1) {"
  ],
  "consequent": [
   "if (strm_str_len(sp->sep) < 1) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (!d->init) return STRM_NG;"
  ],
  "consequent": [
   "if (!r->init) return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->func = args[0];"
  ],
  "consequent": [
   "m->func = args[0];"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_producer, gen_seq, NULL, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_producer, gen_seq, NULL, (void*)s));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct sum_data* d;"
  ],
  "consequent": [
   "struct sum_data* s;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (strm_funcall(strm, d->func, 1, &data, &val) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(strm, m->func, 1, &data, &val) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->n += d->inc;"
  ],
  "consequent": [
   "s->n += s->inc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "strm_emit(strm, strm_int_value(d->n), gen_seq);"
  ],
  "consequent": [
   "strm_emit(strm, strm_int_value(s->n), gen_seq);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->acc = data;"
  ],
  "consequent": [
   "r->acc = data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "s = strm_str_ptr(d->sep);"
  ],
  "consequent": [
   "s = strm_str_ptr(sp->sep);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_count, count_finish, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_count, count_finish, (void*)c));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct sum_data* d = strm->data;"
  ],
  "consequent": [
   "struct sum_data *s = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (d->end > 0 && d->n > d->end) {"
  ],
  "consequent": [
   "if (s->end > 0 && s->n > s->end) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (!strm_nil_p(d->func)) {"
  ],
  "consequent": [
   "if (!strm_nil_p(s->func)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->end = end;"
  ],
  "consequent": [
   "s->end = end;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d = malloc(sizeof(struct reduce_data));"
  ],
  "consequent": [
   "s = malloc(sizeof(struct reduce_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->sum = 0;"
  ],
  "consequent": [
   "s->sum = 0;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d = malloc(sizeof(struct seq_data));"
  ],
  "consequent": [
   "s = malloc(sizeof(struct seq_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (strm_funcall(NULL, d->func, 1, &data, &val) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(NULL, m->func, 1, &data, &val) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct seq_data* d;"
  ],
  "consequent": [
   "struct seq_data *s;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "args[0] = d->acc;"
  ],
  "consequent": [
   "args[0] = r->acc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct seq_data* d = strm->data;"
  ],
  "consequent": [
   "struct seq_data *s = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct map_data* d = strm->data;"
  ],
  "consequent": [
   "struct map_data *m = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct count_data* d = strm->data;"
  ],
  "consequent": [
   "struct count_data *s = strm->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct map_data* d = malloc(sizeof(struct map_data));"
  ],
  "consequent": [
   "struct map_data* m = malloc(sizeof(struct map_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (strm_funcall(NULL, d->func, 2, args, &data) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(NULL, r->func, 2, args, &data) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "if (strm_funcall(NULL, d->func, 1, &data, &data) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(NULL, s->func, 1, &data, &data) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_reduce, reduce_finish, (void*)d));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_reduce, reduce_finish, (void*)s));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "d->init = init;"
  ],
  "consequent": [
   "s->init = init;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4b1fb77e4b8b5dc91d65dc34cc10e2ae2630f71f",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-26 00:16:35",
  "condition": [
   "struct split_data* d = malloc(sizeof(struct split_data));"
  ],
  "consequent": [
   "struct split_data* sp = malloc(sizeof(struct split_data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f1a438b64e8fb3eb11d57f96324ce4ba84cd23a3",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-25 17:09:16",
  "condition": [
   "node_ns* ns = (node_ns*)np;"
  ],
  "consequent": [
   "node_ns *ns = (node_ns*)np;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f1a438b64e8fb3eb11d57f96324ce4ba84cd23a3",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-25 17:09:16",
  "condition": [
   "strm_state* s = strm_ns_get(name);"
  ],
  "consequent": [
   "strm_state *s = strm_ns_get(name);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "f1a438b64e8fb3eb11d57f96324ce4ba84cd23a3",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-25 17:09:16",
  "condition": [
   "strm_state* s = strm_ns_find(state, node_to_sym(ns->name));"
  ],
  "consequent": [
   "strm_state *s = strm_ns_find(state, node_to_sym(ns->name));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "9a415af9977914f2efdb4f156fe4dc3a31e9aa33",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-25 17:08:01",
  "condition": [
   "d = realloc(d, sizeof(strm_stream*)*(src->dlen+1));"
  ],
  "consequent": [
   "if (!d) {",
   "  d = malloc(sizeof(strm_stream*));",
   "}",
   "else {",
   "  d = realloc(d, sizeof(strm_stream*)*(src->dlen+1));",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "febabf8dff0dd91ef911e7e6ab153a4ab06ed9da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 22:53:04",
  "condition": [
   "p++;",
   "while (p<pend) {",
   "  if (!isalnum(*p) && *p != '_')",
   "    return FALSE;"
  ],
  "consequent": [
   "  return FALSE;",
   "case STRM_TAG_STRING_F:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "febabf8dff0dd91ef911e7e6ab153a4ab06ed9da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 22:53:04",
  "condition": [
   " const char* p = strm_str_ptr(str);",
   " const char* pend = p + strm_str_len(str);",
   " if (!isalpha(*p) && *p != '_')",
   "   return FALSE;"
  ],
  "consequent": [
   "switch (strm_value_tag(str)) {",
   "case STRM_TAG_STRING_I:",
   "case STRM_TAG_STRING_6:",
   "  return TRUE;",
   "case STRM_TAG_STRING_O:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "febabf8dff0dd91ef911e7e6ab153a4ab06ed9da",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 22:53:04",
  "condition": [
   "  p++;",
   "}",
   "return TRUE;"
  ],
  "consequent": [
   "  return TRUE;",
   "default:",
   "  return FALSE;",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ac929ba2c8289abc3b5858fe6e534c7b5e5647e3",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:43:12",
  "condition": [
   "if (d->rc > 0) return STRM_NG; /* do not close referenced io */"
  ],
  "consequent": [
   "if (d->rc > 0) return STRM_OK;",
   "/* do not close stdout duing execution */",
   "if (fileno(d->f) == fileno(stdout)) return STRM_OK;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ac929ba2c8289abc3b5858fe6e534c7b5e5647e3",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:43:12",
  "condition": [
   "d->rc--;                       /* decrement reference count */"
  ],
  "consequent": [
   "d->rc--;                      /* decrement reference count */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "56ca7866ce333642288b0b2dacc27661885ba300",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:42:05",
  "condition": [
   "return strm_writeio(io);"
  ],
  "consequent": [
   "return io->write_stream;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "56ca7866ce333642288b0b2dacc27661885ba300",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:42:05",
  "condition": [
   "static strm_stream*"
  ],
  "consequent": [
   "static void"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "56ca7866ce333642288b0b2dacc27661885ba300",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:42:05",
  "condition": [
   "return strm_readio(io);"
  ],
  "consequent": [
   "return io->read_stream;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4420270799dc4b1582571b24d4792c9eccbe1770",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:40:15",
  "condition": [
   "}"
  ],
  "consequent": [
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4420270799dc4b1582571b24d4792c9eccbe1770",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:40:15",
  "condition": [
   "if (strm) {",
   "  node_error* exc = strm->exc;"
  ],
  "consequent": [
   "node_error* exc = strm->exc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "4420270799dc4b1582571b24d4792c9eccbe1770",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:40:15",
  "condition": [
   "if (n == STRM_NG && strm) {"
  ],
  "consequent": [
   "if (n == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "262b8118a61e6dad5a78f2b2df067ccaaa221778",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:39:21",
  "condition": [
   "if ((*strm->close_func)(strm, strm_nil_value()) == STRM_NG)"
  ],
  "consequent": [
   "(*strm->close_func)(strm, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "60fc474f0e7f6413766760e12beb5e3eb69a30f8",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 21:38:33",
  "condition": [
   "if (stream_count == 0) {"
  ],
  "consequent": [
   "if (stream_count < 4) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0e381b3582a81e96f5e85610e14bb151bd1b0173",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 18:03:27",
  "condition": [
   "return p;"
  ],
  "consequent": [
   "return val;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "0e381b3582a81e96f5e85610e14bb151bd1b0173",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 18:03:27",
  "condition": [
   "const char*"
  ],
  "consequent": [
   "strm_value"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "struct strm_task* strm_task_new(strm_stream* strm, strm_callback func, strm_value data);"
  ],
  "consequent": [
   "struct strm_task* strm_task_alloc(strm_stream* strm, strm_callback func, strm_value data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "strm_task_new(strm_stream* strm, strm_callback func, strm_value data)"
  ],
  "consequent": [
   "strm_task_alloc(strm_stream* strm, strm_callback func, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "workers[i].queue = strm_queue_new();"
  ],
  "consequent": [
   "workers[i].queue = strm_queue_alloc();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "struct strm_queue* strm_queue_new();"
  ],
  "consequent": [
   "struct strm_queue* strm_queue_alloc();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "prod_queue = strm_queue_new();"
  ],
  "consequent": [
   "prod_queue = strm_queue_alloc();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "struct strm_task *t = strm_task_new(strm, func, data);"
  ],
  "consequent": [
   "struct strm_task *t = strm_task_alloc(strm, func, data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "queue = strm_queue_new();"
  ],
  "consequent": [
   "queue = strm_queue_alloc();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "strm_queue_new()"
  ],
  "consequent": [
   "strm_queue_alloc()"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "ev.data.ptr = strm_task_new(strm, cb, strm_nil_value());"
  ],
  "consequent": [
   "ev.data.ptr = strm_task_alloc(strm, cb, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "375054169759f92d5f627ef06b73dcc52c3b5ab2",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:55:14",
  "condition": [
   "strm_queue_add(prod_queue, strm_task_new(strm, func, strm_nil_value()));"
  ],
  "consequent": [
   "strm_queue_add(prod_queue, strm_task_alloc(strm, func, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb95cf1438c098b70f6d6bff3e7f6716047f6974",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:14:08",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_map, NULL, (void*)m));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_map, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb95cf1438c098b70f6d6bff3e7f6716047f6974",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:14:08",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_count, count_finish, (void*)c));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_count, count_finish, (void*)c));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "bb95cf1438c098b70f6d6bff3e7f6716047f6974",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:14:08",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter_async, iter_filter, NULL, (void*)m));"
  ],
  "consequent": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_filter, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_task_add(t);"
  ],
  "consequent": [
   "strm_stream_push(t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "break;"
  ],
  "consequent": [
   "    break;",
   "}",
   "if (i == worker_max) break;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_queue* q;"
  ],
  "consequent": [
   "strm_queue *q = malloc(sizeof(strm_queue));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_atomic_cas(&(root->tail), n, node);",
   "return 1;"
  ],
  "consequent": [
   "pthread_mutex_destroy(&q->mutex);",
   "pthread_cond_destroy(&q->cond);",
   "free(q);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "void strm_task_add(struct strm_task*);"
  ],
  "consequent": [
   "void strm_stream_push(struct strm_queue_task* t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_stream **e = d + strm->dlen;"
  ],
  "consequent": [
   "strm_stream **e = d + task->dlen;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "void*",
   "strm_queue_get(struct strm_queue* root)"
  ],
  "consequent": [
   "static void",
   "push_high_task(strm_queue* q, struct strm_queue_task* t)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm->dlen--;"
  ],
  "consequent": [
   "task->dlen--;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_task* strm_task_alloc(strm_stream* strm, strm_callback func, strm_value data);"
  ],
  "consequent": [
   "typedef struct strm_queue strm_queue;",
   "struct strm_queue_task {",
   "  strm_stream* strm;",
   "  strm_callback func;",
   "  strm_value data;",
   "  struct strm_queue_task *next;",
   "};",
   "",
   "strm_queue* strm_queue_alloc(void);",
   "struct strm_queue_task* strm_queue_task(strm_stream* strm, strm_callback func, strm_value data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "task_exec(struct strm_task* task)"
  ],
  "consequent": [
   "task_ping()"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "while (1) {"
  ],
  "consequent": [
   "static void",
   "push_low_task(strm_queue* q, struct strm_queue_task* t)",
   "{",
   "  pthread_mutex_lock(&q->mutex);",
   "  if (q->fi) {",
   "    q->fi->next = t;",
   "  }",
   "  q->fi = t;",
   "  if (!q->fo) {",
   "    q->fo = t;",
   "  }",
   "  pthread_cond_signal(&q->cond);",
   "  pthread_mutex_unlock(&q->mutex);",
   "}",
   "",
   "void",
   "strm_queue_push(strm_queue* q, struct strm_queue_task* t)",
   "{",
   "  if (!q) return;",
   "",
   "  if (t->strm->mode == strm_producer)",
   "    push_low_task(q, t);",
   "  else",
   "    push_high_task(q, t);",
   "}",
   "",
   "struct strm_queue_task*",
   "strm_queue_task(strm_stream* strm, strm_callback func, strm_value data)",
   "{",
   "  struct strm_queue_task *t;",
   "",
   "  t = malloc(sizeof(struct strm_queue_task));",
   "  t->strm = strm;",
   "  t->func = func;",
   "  t->data = data;",
   "  t->next = NULL;",
   "",
   "  return t;",
   "}",
   "",
   "int",
   "strm_queue_exec(strm_queue* q)",
   "{",
   "  struct strm_queue_task *t;",
   "  strm_stream* strm;",
   "  strm_callback func;",
   "  strm_value data;",
   "",
   "  pthread_mutex_lock(&q->mutex);",
   "  while (!q->fo) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "if (stream_count == 0) return STRM_OK;"
  ],
  "consequent": [
   "if (pipeline_count == 0) return STRM_OK;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "n = root->head;",
   "if (n->next == NULL) {",
   "  return NULL;"
  ],
  "consequent": [
   "   pthread_cond_wait(&q->cond, &q->mutex);",
   " }",
   " t = q->fo;",
   " q->fo = t->next;",
   " if (t == q->hi) {",
   "   q->hi = NULL;",
   " }",
   " if (!q->fo) {",
   "   q->fi = NULL;",
   " }",
   " pthread_mutex_unlock(&q->mutex);",
   " strm = t->strm;",
   " func = t->func;",
   " data = t->data;",
   " free(t);",
   " if ((*func)(strm, data) == STRM_NG) {",
   "   if (strm_option_verbose) {",
   "     strm_eprint(strm);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_task *t;",
   "t = malloc(sizeof(struct strm_task));",
   "t->strm = strm;",
   "t->func = func;",
   "t->data = data;"
  ],
  "consequent": [
   " int i;",
   " if (s->tid < 0) {",
   "   if (tid >= 0) {",
   "     s->tid = tid % worker_max;",
   "   }",
   "   else {",
   "     int n = 0;",
   "     int max = 0;",
   "     for (i=0; i<worker_max; i++) {",
   "       int size = strm_queue_size(workers[i].queue);",
   "       if (size == 0) break;",
   "       if (size > max) {",
   "         max = size;",
   "         n = i;",
   "       }",
   "     }",
   "     if (i == worker_max) {",
   "       s->tid = n;",
   "     }",
   "     else {",
   "       s->tid = i;",
   "     }",
   "   }",
   " }"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "q = (struct strm_queue*)malloc(sizeof(struct strm_queue));",
   "if (q == NULL) {",
   "  return NULL;",
   "}",
   "q->head = (struct strm_queue_node*)malloc(sizeof(struct strm_queue_node)); /* Sentinel node */",
   "q->tail = q->head;",
   "q->head->next = NULL;"
  ],
  "consequent": [
   "pthread_mutex_init(&q->mutex, NULL);",
   "pthread_cond_init(&q->cond, NULL);",
   "q->fi = q->hi = q->fo = NULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_task*",
   "strm_task_alloc(strm_stream* strm, strm_callback func, strm_value data)"
  ],
  "consequent": [
   "static int",
   "task_tid(strm_stream* s, int tid)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_task_add(struct strm_task* task)"
  ],
  "consequent": [
   "strm_stream_push(struct strm_queue_task* t)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "return t;"
  ],
  "consequent": [
   "  return s->tid;",
   "}",
   "",
   "static void",
   "task_push(int tid, struct strm_queue_task* t)",
   "{",
   "  strm_stream *s = t->strm;",
   "",
   "  assert(workers != NULL);",
   "  task_tid(s, tid);",
   "  strm_queue_push(workers[s->tid].queue, t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_task_push(strm_stream* strm, strm_callback func, strm_value data)",
   "{",
   "  struct strm_task *t = strm_task_alloc(strm, func, data);",
   "  strm_task_add(t);",
   "}",
   "",
   "void",
   "strm_emit(strm_stream* strm, strm_value data, strm_callback func)"
  ],
  "consequent": [
   "strm_emit(strm_stream* task, strm_value data, strm_callback func)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "val = (void *) n->next->n;",
   "free(n);",
   "return val;"
  ],
  "consequent": [
   "return STRM_OK;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_queue_node *n;",
   "void *val;"
  ],
  "consequent": [
   "  pthread_mutex_lock(&q->mutex);",
   "  if (q->hi) {",
   "    t->next = q->hi->next;",
   "    q->hi->next = t;",
   "    q->hi = t;",
   "  }",
   "  else {",
   "    t->next = q->fo;",
   "    q->fo = t;",
   "    q->hi = t;",
   "  }",
   "  if (!q->fi)",
   "    q->fi = t;",
   "  pthread_cond_signal(&q->cond);",
   "  pthread_mutex_unlock(&q->mutex);",
   "}"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "node->n = val; ",
   "node->next = NULL;",
   "while (1) {"
  ],
  "consequent": [
   "while (t) {",
   "  tmp = t->next;",
   "  free(t);",
   "  t = tmp;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_task_push(*d, (*d)->start_func, data);"
  ],
  "consequent": [
   "task_push(tid, strm_queue_task(*d, (*d)->start_func, data));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "queue = strm_queue_alloc();",
   "prod_queue = strm_queue_alloc();"
  ],
  "consequent": [
   " pthread_mutex_init(&pipeline_mutex, NULL);",
   " pthread_cond_init(&pipeline_cond, NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_queue_node *next;",
   "void *n;"
  ],
  "consequent": [
   "pthread_mutex_t mutex;",
   "pthread_cond_t cond;",
   "struct strm_queue_task *fi, *hi, *fo;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_task_push(strm, read_cb, strm_nil_value());"
  ],
  "consequent": [
   "strm_stream_push(strm_queue_task(strm, read_cb, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_task_push(src, src->start_func, strm_nil_value());"
  ],
  "consequent": [
   "pipeline_count++;",
   "strm_stream_push(strm_queue_task(src, src->start_func, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "int",
   "strm_queue_add(struct strm_queue* root, void* val)"
  ],
  "consequent": [
   "void",
   "strm_queue_free(strm_queue* q)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "t = strm_queue_get(q);",
   "if (t) {",
   "  task_exec(t);",
   "}",
   "else {",
   "  t = strm_queue_get(queue);"
  ],
  "consequent": [
   "strm_queue_exec(w->queue);",
   "if (pipeline_count == 0 && !strm_queue_p(w->queue)) {",
   "  task_ping();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_queue_add(queue, task);"
  ],
  "consequent": [
   "task_push(-1, t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_stream **d = strm->dst;"
  ],
  "consequent": [
   "int tid = task->tid;",
   "strm_stream **d = task->dst;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   " strm_stream* strm = task->strm;",
   " strm_callback func = task->func;",
   " strm_value data = task->data;",
   " free(task);",
   " if ((*func)(strm, data) == STRM_NG) {",
   "   if (strm_option_verbose) {",
   "     strm_eprint(strm);",
   "   }",
   " }"
  ],
  "consequent": [
   "pthread_mutex_lock(&pipeline_mutex);",
   "pthread_cond_signal(&pipeline_cond);",
   "pthread_mutex_unlock(&pipeline_mutex);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "static int stream_count = 0;"
  ],
  "consequent": [
   "static int pipeline_count = 0;",
   "static pthread_mutex_t pipeline_mutex;",
   "static pthread_cond_t pipeline_cond;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "#include <memory.h>",
   "#include <stdio.h>",
   "#include <stdlib.h>",
   "",
   "#include \"queue.h\"",
   "#include \"atomic.h\"",
   "",
   "struct strm_queue_node {"
  ],
  "consequent": [
   "struct strm_queue {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_queue_add(prod_queue, strm_task_alloc(strm, func, strm_nil_value()));"
  ],
  "consequent": [
   "strm_stream_push(strm_queue_task(task, func, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "/* copied and modified https://github.com/supermartian/lockfree-queue",
   " *",
   " * Copyright (C) 2014 Yuzhong Wen<supermartian@gmail.com>",
   " *",
   " * Distributed under terms of the MIT license.",
   " */"
  ],
  "consequent": [
   "#include \"strm.h\"",
   "#include <pthread.h>"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "if (strm_atomic_cas(&(root->head), n, n->next)) {",
   "  break;",
   "}"
  ],
  "consequent": [
   "return STRM_NG;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_queue*"
  ],
  "consequent": [
   "strm_queue*"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_worker* w = (struct strm_worker*)data;"
  ],
  "consequent": [
   "struct strm_worker *w = (struct strm_worker*)data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "ev.data.ptr = strm_task_alloc(strm, cb, strm_nil_value());"
  ],
  "consequent": [
   "ev.data.ptr = strm_queue_task(strm, cb, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_queue_node *n;"
  ],
  "consequent": [
   "if (!q) return;",
   "if (q->fo) {",
   "  struct strm_queue_task *t = q->fo;",
   "  struct strm_queue_task *tmp;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "void strm_task_push(strm_stream* strm, strm_callback func, strm_value data);"
  ],
  "consequent": [
   "void strm_queue_free(strm_queue* q);",
   "void strm_queue_push(strm_queue* q, struct strm_queue_task* t);",
   "int strm_queue_exec(strm_queue* q);",
   "int strm_queue_size(strm_queue* q);",
   "int strm_queue_p(strm_queue* q);",
   ""
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_queue* queue;"
  ],
  "consequent": [
   "strm_queue *queue;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "struct strm_task *t = events[i].data.ptr;"
  ],
  "consequent": [
   "struct strm_queue_task *t = events[i].data.ptr;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "strm_task_push(*d, (strm_callback)strm_stream_close, strm_nil_value());"
  ],
  "consequent": [
   "strm_stream_push(strm_queue_task(*d, (strm_callback)strm_stream_close, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5c707b96753ffd8b42fc19e607668907a89dc840",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 17:09:18",
  "condition": [
   "if (stream_count < 4) {"
  ],
  "consequent": [
   "   pthread_mutex_lock(&pipeline_mutex);",
   "   pthread_cond_wait(&pipeline_cond, &pipeline_mutex);",
   "   pthread_mutex_unlock(&pipeline_mutex);",
   "   if (pipeline_count == 0) {",
   "     int i;",
   "     for (i=0; i<worker_max; i++) {",
   "       if (strm_queue_p(workers[i].queue))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "88afb7c2c1c798fd28e81c0520dd230875b81ca4",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-20 14:23:01",
  "condition": [
   "strm_atomic_add(&s->count, 1);"
  ],
  "consequent": [
   "s->count++;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c507b004e0f79419b064e0cf0f60a45e61ee1ed6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-19 14:22:24",
  "condition": [
   "strm_emit(strm, strm_flt_value(s->sum), NULL);"
  ],
  "consequent": [
   "strm_emit(strm, strm_int_value(s->sum), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c507b004e0f79419b064e0cf0f60a45e61ee1ed6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-19 14:22:24",
  "condition": [
   "s->sum += strm_value_flt(data);"
  ],
  "consequent": [
   "s->sum += strm_value_int(data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "c507b004e0f79419b064e0cf0f60a45e61ee1ed6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-19 14:22:24",
  "condition": [
   "double sum;"
  ],
  "consequent": [
   "strm_int sum;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "ba3869063a4ed27e3d079a423c5d2bfbaac2a78a",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-11 11:31:21",
  "condition": [
   "if (strm) {",
   "  strm->exc->fname = nlbd->fname;"
  ],
  "consequent": [
   "strm->exc->fname = nlbd->fname;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3dd019e15e01178a7e3b02af780edb701b50fadc",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 17:37:24",
  "condition": [
   "strm_int start=1, end=-1, inc=1;"
  ],
  "consequent": [
   "strm_int start, end, inc=1;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "3dd019e15e01178a7e3b02af780edb701b50fadc",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 17:37:24",
  "condition": [
   "if (s->end > 0 && s->n > s->end) {"
  ],
  "consequent": [
   "if (s->n > s->end) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "str_intern(const char *p, strm_int len, int foreign)"
  ],
  "consequent": [
   "str_intern(const char *p, strm_int len)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "return strm_str_lit(\"nil\");"
  ],
  "consequent": [
   "return strm_str_new(\"nil\", 3);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "return str_new(p, len, foreign);"
  ],
  "consequent": [
   "return str_new(p, len, 0);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "str = str_new(p, len, foreign);"
  ],
  "consequent": [
   "str = str_new(p, len, 0);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "str = str_intern(p, len, 0);"
  ],
  "consequent": [
   "str = str_intern(p, len);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "str = str_intern(strm_str_ptr(str), strm_str_len(str), 0);"
  ],
  "consequent": [
   "str = str_intern(strm_str_ptr(str), strm_str_len(str));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "return str_intern(p, len, 0);"
  ],
  "consequent": [
   "return str_intern(p, len);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "n = strm_var_get(ns, strm_str_intern_lit(\"to_str\"), &m);"
  ],
  "consequent": [
   "n = strm_var_get(ns, strm_str_intern(\"to_str\", 6), &m);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "14cdaf4a8dfef8654cde4ff8771b97c9cc46fe39",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 15:38:16",
  "condition": [
   "return str_intern(strm_str_ptr(str), strm_str_len(str), 0);"
  ],
  "consequent": [
   "return str_intern(strm_str_ptr(str), strm_str_len(str));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "5438f239bd4f2d6752ca7c38b421723b342516c0",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 02:57:13",
  "condition": [
   "if (n == STRM_OK && strm_string_p(m)) return m;"
  ],
  "consequent": [
   "if (n == STRM_OK) return m;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "404aeeda0eee46ac69899b216b5a4e0886df6a59",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:51:48",
  "condition": [
   "n = sprintf(buf, \"<%p>\", strm_value_vptr(v));"
  ],
  "consequent": [
   "n = sprintf(buf, \"<%p>\", (void*)strm_value_val(v));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "9d6284387b0f0ae67fd8ba2bf81e6af8c800eabc",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:50:31",
  "condition": [
   "return lambda_call(strm, func, argc, argv, ret);"
  ],
  "consequent": [
   "     strm_lambda lambda = strm_value_lambda(func);",
   "     node_lambda* nlbd = lambda->body;",
   "     node_args* args = (node_args*)nlbd->args;",
   "     strm_state c = {0};",
   "     int i, n;",
   "     node_error* exc;",
   "     c.prev = lambda->state;",
   "     if ((args == NULL && argc != 0) || (args->len != argc)) {",
   "       strm_raise(strm, \"wrong number of arguments\");",
   "       strm->exc->fname = nlbd->fname;",
   "       strm->exc->lineno = nlbd->lineno;",
   "       return STRM_NG;",
   "     }",
   "     for (i=0; i<argc; i++) {",
   "       n = strm_var_set(&c, node_to_sym(args->data[i]), argv[i]);",
   "       if (n) return n;",
   "     }",
   "     n = exec_expr(strm, &c, nlbd->compstmt, ret);",
   "     if (n == STRM_NG) {",
   "       exc = strm->exc;",
   "       if (exc && exc->type == NODE_ERROR_RETURN) {",
   "         *ret = exc->arg;",
   "         return STRM_OK;",
   "       }",
   "     }",
   "     return n;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "strm_queue_push(workers[s->tid].queue, t);"
  ],
  "consequent": [
   "strm_queue_push(threads[s->tid].queue, t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "if (pipeline_count == 0 && !strm_queue_p(w->queue)) {"
  ],
  "consequent": [
   "if (pipeline_count == 0 && !strm_queue_p(th->queue)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "if (workers) return;"
  ],
  "consequent": [
   "if (threads) return;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "s->tid = tid % worker_max;"
  ],
  "consequent": [
   "s->tid = tid % thread_max;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "if (i == worker_max) {"
  ],
  "consequent": [
   "if (i == thread_max) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "pthread_create(&workers[i].th, NULL, task_loop, &workers[i]);"
  ],
  "consequent": [
   "pthread_create(&threads[i].th, NULL, task_loop, &threads[i]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "int size = strm_queue_size(workers[i].queue);"
  ],
  "consequent": [
   "int size = strm_queue_size(threads[i].queue);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "for (i=0; i<worker_max; i++) {"
  ],
  "consequent": [
   "for (i=0; i<thread_max; i++) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "if (i == worker_max) break;"
  ],
  "consequent": [
   "if (i == thread_max) break;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "workers = malloc(sizeof(struct strm_worker)*worker_max);"
  ],
  "consequent": [
   "threads = malloc(sizeof(struct strm_thread)*thread_max);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "worker_count()"
  ],
  "consequent": [
   "thread_count()"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "assert(workers != NULL);"
  ],
  "consequent": [
   "assert(threads != NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "char *e = getenv(\"STRM_WORKER_MAX\");"
  ],
  "consequent": [
   "char *e = getenv(\"STRM_THREAD_MAX\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "strm_queue_exec(w->queue);"
  ],
  "consequent": [
   "strm_queue_exec(th->queue);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "worker_max = worker_count();"
  ],
  "consequent": [
   "thread_max = thread_count();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "} *workers;"
  ],
  "consequent": [
   "} *threads;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "struct strm_worker {"
  ],
  "consequent": [
   "struct strm_thread {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "struct strm_worker *w = (struct strm_worker*)data;"
  ],
  "consequent": [
   "struct strm_thread *th = (struct strm_thread*)data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "static int worker_max;"
  ],
  "consequent": [
   "static int thread_max;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "if (strm_queue_p(workers[i].queue))"
  ],
  "consequent": [
   "if (strm_queue_p(threads[i].queue))"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "12fd06c67d2bde347cee8f26200e5c6a3bd2ac3e",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-10 01:20:45",
  "condition": [
   "workers[i].queue = strm_queue_alloc();"
  ],
  "consequent": [
   "threads[i].queue = strm_queue_alloc();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_div(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_div(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (io->write_stream) {"
  ],
  "consequent": [
   "if (io->write_task) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "csv(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "csv(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_push(struct strm_queue_task* t)"
  ],
  "consequent": [
   "strm_task_push(struct strm_queue_task* t)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream*"
  ],
  "consequent": [
   "strm_task*"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, args->data[0], &arg);"
  ],
  "consequent": [
   "n = exec_expr(task, state, args->data[0], &arg);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_fwrite(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_fwrite(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void strm_emit(strm_stream* strm, strm_value data, strm_callback cb);"
  ],
  "consequent": [
   "void strm_emit(strm_task* task, strm_value data, strm_callback cb);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "STRM_PTR_STREAM,"
  ],
  "consequent": [
   "STRM_PTR_TASK,"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "/* stream x stream */"
  ],
  "consequent": [
   "/* task x task */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_gt(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_gt(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_le(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_le(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "*ret = strm_stream_value(t);"
  ],
  "consequent": [
   "*ret = strm_task_value(t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct array_data *arrd = strm->data;"
  ],
  "consequent": [
   "struct array_data *arrd = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream **e = d + task->dlen;"
  ],
  "consequent": [
   "strm_task **e = d + task->dlen;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_eprint(strm);"
  ],
  "consequent": [
   "strm_eprint(task);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "else if (strm->flags & STRM_IO_NOFILL) {"
  ],
  "consequent": [
   "else if (task->flags & STRM_IO_NOFILL) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_set_exc(strm, NODE_ERROR_RUNTIME,"
  ],
  "consequent": [
   "task_set_exc(task, NODE_ERROR_RUNTIME,"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "typedef struct strm_stream strm_stream;"
  ],
  "consequent": [
   "typedef struct strm_task strm_task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_clear_exc(strm);"
  ],
  "consequent": [
   "task_clear_exc(task);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, nlet->rhs, val);"
  ],
  "consequent": [
   "n = exec_expr(task, state, nlet->rhs, val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_push(t);"
  ],
  "consequent": [
   "strm_task_push(t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "gen_rand(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "gen_rand(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "ev.data.ptr = strm_queue_task(strm, cb, strm_nil_value());"
  ],
  "consequent": [
   "ev.data.ptr = strm_queue_task(task, cb, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "tcp_server(strm_stream* task, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "tcp_server(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "free(strm->exc);"
  ],
  "consequent": [
   "free(task->exc);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct write_data *d = (struct write_data*)strm->data;"
  ],
  "consequent": [
   "struct write_data *d = (struct write_data*)task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "rhs = strm_stream_value(strm_stream_new(strm_filter, cfunc_exec, NULL, func));"
  ],
  "consequent": [
   "rhs = strm_task_value(strm_task_new(strm_filter, cfunc_exec, NULL, func));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "arr_exec(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "arr_exec(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "io->write_stream = strm_stream_new(strm_consumer, write_cb, write_close, (void*)d);"
  ],
  "consequent": [
   "io->write_task = strm_task_new(strm_consumer, write_cb, write_close, (void*)d);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "lhs = strm_stream_value(strm_stream_new(strm_filter, blk_exec, NULL, (void*)lmbd));"
  ],
  "consequent": [
   "lhs = strm_task_value(strm_task_new(strm_filter, blk_exec, NULL, (void*)lmbd));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "lstrm->mode == strm_consumer ||"
  ],
  "consequent": [
   "ltask->mode == strm_consumer ||"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "read_close(strm_stream* strm, strm_value d)"
  ],
  "consequent": [
   "read_close(strm_task* task, strm_value d)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "io_push(int fd, strm_stream* strm, strm_callback cb)"
  ],
  "consequent": [
   "io_push(int fd, strm_task* task, strm_callback cb)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream **dst;"
  ],
  "consequent": [
   "strm_task **dst;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "iter_sum(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "iter_sum(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "iter_count(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "iter_count(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, strm_ary_ptr(arrd->arr)[arrd->n++], arr_exec);"
  ],
  "consequent": [
   "strm_emit(task, strm_ary_ptr(arrd->arr)[arrd->n++], arr_exec);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_push(strm_queue_task(*d, (strm_callback)strm_stream_close, strm_nil_value()));"
  ],
  "consequent": [
   "strm_task_push(strm_queue_task(*d, (strm_callback)strm_task_close, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "io->read_stream = io->write_stream = NULL;"
  ],
  "consequent": [
   "io->read_task = io->write_task = NULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_map, NULL, (void*)m));"
  ],
  "consequent": [
   "*ret = strm_task_value(strm_task_new(strm_filter, iter_map, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void_txn(strm_stream* strm)"
  ],
  "consequent": [
   "void_txn(strm_task* task)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream* strm_stream_new(strm_stream_mode mode, strm_callback start, strm_callback close, void *data);"
  ],
  "consequent": [
   "strm_task* strm_task_new(strm_task_mode mode, strm_callback start, strm_callback close, void *data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_clear_exc(&t);"
  ],
  "consequent": [
   "task_clear_exc(&t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "csv_finish(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "csv_finish(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm->exc) {"
  ],
  "consequent": [
   "if (task->exc) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream *s = t->strm;"
  ],
  "consequent": [
   "strm_task *s = t->task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return exec_expr(strm, state, nif->then, val);"
  ],
  "consequent": [
   "return exec_expr(task, state, nif->then, val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void strm_stream_push_task(struct strm_queue_task* t);"
  ],
  "consequent": [
   "void strm_task_push_task(struct strm_queue_task* t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "iter_each(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "iter_each(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, strm_str_value(ary), NULL);"
  ],
  "consequent": [
   "strm_emit(task, strm_str_value(ary), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "cfunc_exec(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "cfunc_exec(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, strm_int_value(s->sum), NULL);"
  ],
  "consequent": [
   "strm_emit(task, strm_int_value(s->sum), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "sum_finish(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "sum_finish(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm->flags & STRM_IO_NOWAIT) {"
  ],
  "consequent": [
   "if (task->flags & STRM_IO_NOWAIT) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, strm_ary_value(cd->headers), NULL);"
  ],
  "consequent": [
   "strm_emit(task, strm_ary_value(cd->headers), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm->exc->lineno = nlbd->lineno;"
  ],
  "consequent": [
   "task->exc->lineno = nlbd->lineno;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_rand(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_rand(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "t->strm = strm;"
  ],
  "consequent": [
   "t->task = task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"too many transaction retries\");"
  ],
  "consequent": [
   "strm_raise(task, \"too many transaction retries\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, nif->cond, &v);"
  ],
  "consequent": [
   "n = exec_expr(task, state, nif->cond, &v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, v0->data[i], &args[i]);"
  ],
  "consequent": [
   "n = exec_expr(task, state, v0->data[i], &args[i]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm_funcall(strm, args[2], 1, &old, &val) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(task, args[2], 1, &old, &val) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "server_accept(strm_stream* task, strm_value data)"
  ],
  "consequent": [
   "server_accept(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (lstrm == NULL || rstrm == NULL ||"
  ],
  "consequent": [
   "if (ltask == NULL || rtask == NULL ||"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"wrong number of arguments\");"
  ],
  "consequent": [
   "strm_raise(task, \"wrong number of arguments\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "iter_filter(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "iter_filter(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "int strm_funcall(strm_stream*, strm_value, int, strm_value*, strm_value*);"
  ],
  "consequent": [
   "int strm_funcall(strm_task*, strm_value, int, strm_value*, strm_value*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "#define strm_stream_p(v) strm_ptr_tag_p(v, STRM_PTR_STREAM)"
  ],
  "consequent": [
   "#define strm_task_p(v) strm_ptr_tag_p(v, STRM_PTR_TASK)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "static int arr_exec(strm_stream* strm, strm_value data);"
  ],
  "consequent": [
   "static int arr_exec(strm_task* strm, strm_value data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "typedef int (*strm_cfunc)(struct strm_stream*, int, strm_value*, strm_value*);"
  ],
  "consequent": [
   "typedef int (*strm_cfunc)(struct strm_task*, int, strm_value*, strm_value*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_expr(strm_stream* strm, strm_state* state, node* np, strm_value* val)"
  ],
  "consequent": [
   "exec_expr(strm_task* task, strm_state* state, node* np, strm_value* val)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return exec_expr(strm, s, ns->body, val);"
  ],
  "consequent": [
   "return exec_expr(task, s, ns->body, val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return exec_cputs(strm, stdout, argc, args, ret);"
  ],
  "consequent": [
   "return exec_cputs(task, stdout, argc, args, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void strm_raise(strm_stream*, const char*);"
  ],
  "consequent": [
   "void strm_raise(strm_task*, const char*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream* strm_io_deque();"
  ],
  "consequent": [
   "strm_task* strm_io_deque();"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream* read_stream;",
   "strm_stream* write_stream;"
  ],
  "consequent": [
   "strm_task *read_task, *write_task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_close(strm);"
  ],
  "consequent": [
   "strm_task_close(task);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm_funcall(strm, m->func, 1, &data, &val) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(task, m->func, 1, &data, &val) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "count_finish(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "count_finish(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"no such namespace\");"
  ],
  "consequent": [
   "strm_raise(task, \"no such namespace\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "write_close(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "write_close(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"failed to import\");"
  ],
  "consequent": [
   "strm_raise(task, \"failed to import\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "io->read_stream->flags |= flags;"
  ],
  "consequent": [
   "io->read_task->flags |= flags;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct strm_queue_task* strm_queue_task(strm_stream* strm, strm_callback func, strm_value data);"
  ],
  "consequent": [
   "struct strm_queue_task* strm_queue_task(strm_task* strm, strm_callback func, strm_value data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_sum(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_sum(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm->close_func) {"
  ],
  "consequent": [
   "if (task->close_func) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "/* if we have a reading strm, let it close the fd */"
  ],
  "consequent": [
   "/* if we have a reading task, let it close the fd */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "io_kick(b->fd, strm, read_cb);"
  ],
  "consequent": [
   "io_kick(b->fd, task, read_cb);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "(*strm->close_func)(strm, strm_nil_value());"
  ],
  "consequent": [
   "(*task->close_func)(task, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "lhs = strm_stream_value(strm_io_stream(lhs, STRM_IO_READ));"
  ],
  "consequent": [
   "lhs = strm_task_value(strm_io_task(lhs, STRM_IO_READ));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return io->read_stream;"
  ],
  "consequent": [
   "return io->read_task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "case STRM_PTR_STREAM:"
  ],
  "consequent": [
   "case STRM_PTR_TASK:"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream *t;"
  ],
  "consequent": [
   "strm_task *t;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "lstrm->mode == strm_killed ||"
  ],
  "consequent": [
   "ltask->mode == strm_killed ||"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "(*readline_cb)(strm, strm_nil_value());"
  ],
  "consequent": [
   "(*readline_cb)(task, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "kvs_txn(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "kvs_txn(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return strm_funcall(strm, m, argc, argv, ret);"
  ],
  "consequent": [
   "return strm_funcall(task, m, argc, argv, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, ret, NULL);"
  ],
  "consequent": [
   "strm_emit(task, ret, NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "read_cb(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "read_cb(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_io_stream(strm_value iov, int mode)"
  ],
  "consequent": [
   "strm_io_task(strm_value iov, int mode)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "int strm_stream_connect(strm_stream* src, strm_stream* dst);"
  ],
  "consequent": [
   "int strm_task_connect(strm_task* src, strm_task* dst);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, v0->data[i], ptr);"
  ],
  "consequent": [
   "n = exec_expr(task, state, v0->data[i], ptr);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "io_kick(int fd, strm_stream* strm, strm_callback cb)"
  ],
  "consequent": [
   "io_kick(int fd, strm_task* task, strm_callback cb)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "gen_seq(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "gen_seq(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm_stream_p(lhs) && strm_stream_p(rhs)) {"
  ],
  "consequent": [
   "if (strm_task_p(lhs) && strm_task_p(rhs)) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exc = strm->exc;"
  ],
  "consequent": [
   "exc = task->exc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream t = {0};"
  ],
  "consequent": [
   "strm_task t = {0};"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm->exc->fname = nlbd->fname;"
  ],
  "consequent": [
   "task->exc->fname = nlbd->fname;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, strm_nil_value(), NULL);"
  ],
  "consequent": [
   "strm_emit(task, strm_nil_value(), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "io->read_stream = strm_stream_new(strm_producer, cb, read_close, (void*)buf);"
  ],
  "consequent": [
   "io->read_task = strm_task_new(strm_producer, cb, read_close, (void*)buf);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm_stream* task, strm_value data, strm_callback func)"
  ],
  "consequent": [
   "strm_emit(strm_task* task, strm_value data, strm_callback func)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void strm_eprint(strm_stream*);"
  ],
  "consequent": [
   "void strm_eprint(strm_task*);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_cfunc func = strm->data;"
  ],
  "consequent": [
   "strm_cfunc func = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_count, count_finish, (void*)c));"
  ],
  "consequent": [
   "*ret = strm_task_value(strm_task_new(strm_filter, iter_count, count_finish, (void*)c));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_each(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_each(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream* strm;"
  ],
  "consequent": [
   "strm_task* task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, &c, lambda->body->compstmt, &ret);"
  ],
  "consequent": [
   "n = exec_expr(task, &c, lambda->body->compstmt, &ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"failed to assign\");"
  ],
  "consequent": [
   "strm_raise(task, \"failed to assign\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream* strm_io_stream(strm_value io, int mode);"
  ],
  "consequent": [
   "strm_task* strm_io_task(strm_value io, int mode);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (t->strm->mode == strm_producer)"
  ],
  "consequent": [
   "if (t->task->mode == strm_producer)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "pipeline_finish(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "pipeline_finish(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "task_tid(strm_stream* s, int tid)"
  ],
  "consequent": [
   "task_tid(strm_task* s, int tid)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm = t->strm;"
  ],
  "consequent": [
   "task = t->task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if ((*func)(strm, data) == STRM_NG) {"
  ],
  "consequent": [
   "if ((*func)(task, data) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct strm_stream;"
  ],
  "consequent": [
   "struct strm_task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_fread(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_fread(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "kvs_get(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "kvs_get(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_mult(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_mult(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if ((strm->flags & STRM_IO_NOWAIT) == 0) {"
  ],
  "consequent": [
   "if ((task->flags & STRM_IO_NOWAIT) == 0) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_count(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_count(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream **t = d;"
  ],
  "consequent": [
   "strm_task **t = d;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "static int cfunc_exec(strm_stream* strm, strm_value data);"
  ],
  "consequent": [
   "static int cfunc_exec(strm_task* strm, strm_value data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "txn_get(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "txn_get(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return exec_call(strm, state, node_to_sym(ncall->ident), i, args, val);"
  ],
  "consequent": [
   "return exec_call(task, state, node_to_sym(ncall->ident), i, args, val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "kvs_put(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "kvs_put(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "s->type = STRM_PTR_STREAM;"
  ],
  "consequent": [
   "s->type = STRM_PTR_TASK;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void strm_io_emit(strm_stream* strm, strm_value data, int fd, strm_callback cb);"
  ],
  "consequent": [
   "void strm_io_emit(strm_task* task, strm_value data, int fd, strm_callback cb);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"function not found\");"
  ],
  "consequent": [
   "strm_raise(task, \"function not found\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_bar(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_bar(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_eq(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_eq(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (io->read_stream == NULL) {"
  ],
  "consequent": [
   "if (io->read_task == NULL) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct seq_data *s = strm->data;"
  ],
  "consequent": [
   "struct seq_data *s = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct csv_data *cd = strm->data;"
  ],
  "consequent": [
   "struct csv_data *cd = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_producer, gen_seq, NULL, (void*)s));"
  ],
  "consequent": [
   "*ret = strm_task_value(strm_task_new(strm_producer, gen_seq, NULL, (void*)s));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"not a function\");"
  ],
  "consequent": [
   "strm_raise(task, \"not a function\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_push(strm_queue_task(task, func, strm_nil_value()));"
  ],
  "consequent": [
   "strm_task_push(strm_queue_task(task, func, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_connect(strm_value_stream(lhs), strm_value_stream(rhs));"
  ],
  "consequent": [
   "strm_task_connect(strm_value_task(lhs), strm_value_task(rhs));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "blk_exec(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "blk_exec(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = ary_get(strm, argv[0], 1, &m, ret);"
  ],
  "consequent": [
   "n = ary_get(task, argv[0], 1, &m, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "node_error* exc = strm->exc;"
  ],
  "consequent": [
   "node_error* exc = task->exc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct sum_data *s = strm->data;"
  ],
  "consequent": [
   "struct sum_data *s = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "kvs_update(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "kvs_update(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm_funcall(strm, args[2], 1, &val, &val) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(task, args[2], 1, &val, &val) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream **d = task->dst;"
  ],
  "consequent": [
   "strm_task **d = task->dst;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_mod(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_mod(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream* lstrm = strm_value_stream(lhs);",
   "strm_stream* rstrm = strm_value_stream(rhs);"
  ],
  "consequent": [
   "strm_task* ltask = strm_value_task(lhs);",
   "strm_task* rtask = strm_value_task(rhs);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_eprint(strm_stream* strm)"
  ],
  "consequent": [
   "strm_eprint(strm_task* task)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return io->write_stream;"
  ],
  "consequent": [
   "return io->write_task;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"failed to create namespace\");"
  ],
  "consequent": [
   "strm_raise(task, \"failed to create namespace\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream *s = malloc(sizeof(strm_stream));"
  ],
  "consequent": [
   "strm_task *s = malloc(sizeof(strm_task));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_producer, gen_rand, fin_rand,"
  ],
  "consequent": [
   "*ret = strm_task_value(strm_task_new(strm_producer, gen_rand, fin_rand,"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "static int readline_cb(strm_stream* strm, strm_value data);"
  ],
  "consequent": [
   "static int readline_cb(strm_task* task, strm_value data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct map_data *m = strm->data;"
  ],
  "consequent": [
   "struct map_data *m = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_connect(strm_stream* src, strm_stream* dst)"
  ],
  "consequent": [
   "strm_task_connect(strm_task* src, strm_task* dst)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"failed to emit\");"
  ],
  "consequent": [
   "strm_raise(task, \"failed to emit\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct fd_read_buffer *b = strm->data;"
  ],
  "consequent": [
   "struct fd_read_buffer *b = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_queue_task(strm_stream* strm, strm_callback func, strm_value data)"
  ],
  "consequent": [
   "strm_queue_task(strm_task* task, strm_callback func, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, val, NULL);"
  ],
  "consequent": [
   "strm_emit(task, val, NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "d = (struct write_data*)io->write_stream->data;"
  ],
  "consequent": [
   "d = (struct write_data*)io->write_task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, data, NULL);"
  ],
  "consequent": [
   "strm_emit(task, data, NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "d = malloc(sizeof(strm_stream*));"
  ],
  "consequent": [
   "d = malloc(sizeof(strm_task*));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_filter, NULL, (void*)m));"
  ],
  "consequent": [
   "*ret = strm_task_value(strm_task_new(strm_filter, iter_filter, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_set_exc(strm, NODE_ERROR_SKIP, strm_nil_value());"
  ],
  "consequent": [
   "task_set_exc(task, NODE_ERROR_SKIP, strm_nil_value());"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"invalid transaction\");"
  ],
  "consequent": [
   "strm_raise(task, \"invalid transaction\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "typedef int (*strm_callback)(strm_stream*, strm_value);"
  ],
  "consequent": [
   "typedef int (*strm_callback)(strm_task*, strm_value);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_minus(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_minus(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "server_close(strm_stream* task, strm_value d)"
  ],
  "consequent": [
   "server_close(strm_task* task, strm_value d)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void strm_stream_push(struct strm_queue_task* t);"
  ],
  "consequent": [
   "void strm_task_push(struct strm_queue_task* t);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_io_stop(strm_stream* strm, int fd)"
  ],
  "consequent": [
   "strm_io_stop(strm_task* task, int fd)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm->exc = NULL;"
  ],
  "consequent": [
   "task->exc = NULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct strm_stream {"
  ],
  "consequent": [
   "struct strm_task {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "#define strm_stream_value(t) strm_ptr_value(t)"
  ],
  "consequent": [
   "#define strm_task_value(t) strm_ptr_value(t)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream** d;"
  ],
  "consequent": [
   "strm_task** d;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_seq(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_seq(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm->exc = exc;"
  ],
  "consequent": [
   "task->exc = exc;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_cputs(strm, stderr, 1, &exc->arg, &v);"
  ],
  "consequent": [
   "exec_cputs(task, stderr, 1, &exc->arg, &v);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void strm_stream_close(strm_stream* strm);"
  ],
  "consequent": [
   "void strm_task_close(strm_task* strm);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "csv_accept(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "csv_accept(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, nop->lhs, &args[i++]);"
  ],
  "consequent": [
   "n = exec_expr(task, state, nop->lhs, &args[i++]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_puts(strm_stream* strm, int argc, strm_value* args, strm_value* ret) {"
  ],
  "consequent": [
   "exec_puts(strm_task* task, int argc, strm_value* args, strm_value* ret) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, v0->data[i], val);"
  ],
  "consequent": [
   "n = exec_expr(task, state, v0->data[i], val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_int n = (strm_int)(intptr_t)strm->data;"
  ],
  "consequent": [
   "strm_int n = (strm_int)(intptr_t)task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"no kvs given\");"
  ],
  "consequent": [
   "strm_raise(task, \"no kvs given\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_io_emit(strm, s, b->fd, read_cb);"
  ],
  "consequent": [
   "strm_io_emit(task, s, b->fd, read_cb);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_consumer, iter_each, NULL, (void*)m));"
  ],
  "consequent": [
   "*ret = strm_task_value(strm_task_new(strm_consumer, iter_each, NULL, (void*)m));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "d = strm->dst;"
  ],
  "consequent": [
   "d = task->dst;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, strm_int_value(s->count), NULL);"
  ],
  "consequent": [
   "strm_emit(task, strm_int_value(s->count), NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "stdio_read(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "stdio_read(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "size_t dlen = strm->dlen;"
  ],
  "consequent": [
   "size_t dlen = task->dlen;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm->mode = strm_killed;"
  ],
  "consequent": [
   "task->mode = strm_killed;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_close(strm_stream* strm)"
  ],
  "consequent": [
   "strm_task_close(strm_task* task)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return exec_call(strm, state, node_to_sym(nop->op), i, args, val);"
  ],
  "consequent": [
   "return exec_call(task, state, node_to_sym(nop->op), i, args, val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"type error\");"
  ],
  "consequent": [
   "strm_raise(task, \"type error\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_filter(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_filter(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "rstrm->mode == strm_producer ||"
  ],
  "consequent": [
   "rtask->mode == strm_producer ||"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "rhs = strm_stream_value(strm_io_stream(rhs, STRM_IO_WRITE));"
  ],
  "consequent": [
   "rhs = strm_task_value(strm_io_task(rhs, STRM_IO_WRITE));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, &c, nlbd->compstmt, ret);"
  ],
  "consequent": [
   "n = exec_expr(task, &c, nlbd->compstmt, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_push(strm_queue_task(strm, read_cb, strm_nil_value()));"
  ],
  "consequent": [
   "strm_task_push(strm_queue_task(task, read_cb, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (!strm) {"
  ],
  "consequent": [
   "if (!task) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_push(strm_queue_task(src, src->start_func, strm_nil_value()));"
  ],
  "consequent": [
   "strm_task_push(strm_queue_task(src, src->start_func, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "#define strm_value_stream(t) (strm_stream*)strm_value_ptr(t, STRM_PTR_STREAM)"
  ],
  "consequent": [
   "#define strm_value_task(t) (strm_task*)strm_value_ptr(t, STRM_PTR_TASK)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_io_start_read(strm_stream* strm, int fd, strm_callback cb)"
  ],
  "consequent": [
   "strm_io_start_read(strm_task* task, int fd, strm_callback cb)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "rhs = strm_stream_value(strm_stream_new(strm_filter, blk_exec, NULL, (void*)lmbd));"
  ],
  "consequent": [
   "rhs = strm_task_value(strm_task_new(strm_filter, blk_exec, NULL, (void*)lmbd));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "} strm_stream_mode;"
  ],
  "consequent": [
   "} strm_task_mode;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, strm_int_value(s->n), gen_seq);"
  ],
  "consequent": [
   "strm_emit(task, strm_int_value(s->n), gen_seq);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_neq(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_neq(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_push(strm_queue_task(strm, pipeline_finish, strm_nil_value()));"
  ],
  "consequent": [
   "strm_task_push(strm_queue_task(task, pipeline_finish, strm_nil_value()));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm_stream* strm, const char* msg)"
  ],
  "consequent": [
   "strm_raise(strm_task* task, const char* msg)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return (strm_value_cfunc(func))(strm, argc, argv, ret);"
  ],
  "consequent": [
   "return (strm_value_cfunc(func))(task, argc, argv, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "kvs_close(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "kvs_close(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_cputs(strm_stream* strm, FILE* out, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_cputs(strm_task* task, FILE* out, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, nop->rhs, &args[i++]);"
  ],
  "consequent": [
   "n = exec_expr(task, state, nop->rhs, &args[i++]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_new(strm_stream_mode mode, strm_callback start_func, strm_callback close_func, void* data)"
  ],
  "consequent": [
   "strm_task_new(strm_task_mode mode, strm_callback start_func, strm_callback close_func, void* data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_plus(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_plus(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "static int exec_expr(strm_stream* strm, strm_state* state, node* np, strm_value* val);"
  ],
  "consequent": [
   "static int exec_expr(strm_task* task, strm_state* state, node* np, strm_value* val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "rstrm->mode == strm_killed) {"
  ],
  "consequent": [
   "rtask->mode == strm_killed) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, args->data[i], (strm_value*)&strm_ary_ptr(ary)[i]);"
  ],
  "consequent": [
   "n = exec_expr(task, state, args->data[i], (strm_value*)&strm_ary_ptr(ary)[i]);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_io_start_read(strm, b->fd, read_cb);"
  ],
  "consequent": [
   "strm_io_start_read(task, b->fd, read_cb);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "fin_rand(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "fin_rand(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return ary_get(strm, func, argc, argv, ret);"
  ],
  "consequent": [
   "return ary_get(task, func, argc, argv, ret);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm->mode == strm_producer) {"
  ],
  "consequent": [
   "if (task->mode == strm_producer) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "t = strm_stream_new(strm_filter, csv_accept, csv_finish, (void*)cd);"
  ],
  "consequent": [
   "t = strm_task_new(strm_filter, csv_accept, csv_finish, (void*)cd);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "txn_put(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "txn_put(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "ary_get(strm_stream* strm, strm_value ary, int argc, strm_value* argv, strm_value* ret)"
  ],
  "consequent": [
   "ary_get(strm_task* task, strm_value ary, int argc, strm_value* argv, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = sprintf(buf, \"<stream:%p>\", p);"
  ],
  "consequent": [
   "n = sprintf(buf, \"<task:%p>\", p);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "free(strm->data);"
  ],
  "consequent": [
   "free(task->data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_io_emit(strm_stream* strm, strm_value data, int fd, strm_callback cb)"
  ],
  "consequent": [
   "strm_io_emit(strm_task* task, strm_value data, int fd, strm_callback cb)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, *val, NULL);"
  ],
  "consequent": [
   "strm_emit(task, *val, NULL);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_io_stop(strm, b->fd);"
  ],
  "consequent": [
   "strm_io_stop(task, b->fd);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "n = exec_expr(strm, state, v->data[i], val);"
  ],
  "consequent": [
   "n = exec_expr(task, state, v->data[i], val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_set_exc(strm, NODE_ERROR_RETURN, arg);"
  ],
  "consequent": [
   "task_set_exc(task, NODE_ERROR_RETURN, arg);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "static int blk_exec(strm_stream* strm, strm_value data);"
  ],
  "consequent": [
   "static int blk_exec(strm_task* strm, strm_value data);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, s, readline_cb);"
  ],
  "consequent": [
   "strm_emit(task, s, readline_cb);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_set_exc(strm_stream* strm, int type, strm_value arg)"
  ],
  "consequent": [
   "task_set_exc(strm_task* task, int type, strm_value arg)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_emit(strm, strm_int_value(r % n), gen_rand);"
  ],
  "consequent": [
   "strm_emit(task, strm_int_value(r % n), gen_rand);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "struct count_data *s = strm->data;"
  ],
  "consequent": [
   "struct count_data *s = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "free(strm->dst);"
  ],
  "consequent": [
   "free(task->dst);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if ((*func)(strm, 1, &data, &ret) == STRM_OK) {"
  ],
  "consequent": [
   "if ((*func)(task, 1, &data, &ret) == STRM_OK) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_ge(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_ge(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "io_kick(fd, strm, cb);"
  ],
  "consequent": [
   "io_kick(fd, task, cb);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "tcp_socket(strm_stream* task, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "tcp_socket(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (!t) return void_txn(strm);"
  ],
  "consequent": [
   "if (!t) return void_txn(task);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm_funcall(strm, args[1], 1, &val, ret) == STRM_NG) {"
  ],
  "consequent": [
   "if (strm_funcall(task, args[1], 1, &val, ret) == STRM_NG) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"stream error\");"
  ],
  "consequent": [
   "strm_raise(task, \"task error\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "kvs_new(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "kvs_new(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm->data = NULL;"
  ],
  "consequent": [
   "task->data = NULL;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_raise(strm, \"failed to reference variable\");"
  ],
  "consequent": [
   "strm_raise(task, \"failed to reference variable\");"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_call(strm_stream* strm, strm_state* state, strm_string name, int argc, strm_value* argv, strm_value* ret)"
  ],
  "consequent": [
   "exec_call(strm_task* task, strm_state* state, strm_string name, int argc, strm_value* argv, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "write_cb(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "write_cb(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "lhs = strm_stream_value(strm_stream_new(strm_producer, arr_exec, NULL, (void*)arrd));"
  ],
  "consequent": [
   "lhs = strm_task_value(strm_task_new(strm_producer, arr_exec, NULL, (void*)arrd));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "readline_cb(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "readline_cb(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (io_push(fd, strm, cb) == 0) {"
  ],
  "consequent": [
   "if (io_push(fd, task, cb) == 0) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "iter_map(strm_stream* strm, strm_value data)"
  ],
  "consequent": [
   "iter_map(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_map(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_map(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "t = strm_stream_new(strm_producer, server_accept, server_close, (void*)sd);"
  ],
  "consequent": [
   "t = strm_task_new(strm_producer, server_accept, server_close, (void*)sd);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "accept_cb(strm_stream* task, strm_value data)"
  ],
  "consequent": [
   "accept_cb(strm_task* task, strm_value data)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_clear_exc(strm_stream* strm)"
  ],
  "consequent": [
   "task_clear_exc(strm_task* task)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "/* lhs: should be stream */"
  ],
  "consequent": [
   "/* lhs: should be task */"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "if (strm->flags & STRM_IO_MMAP) {"
  ],
  "consequent": [
   "if (task->flags & STRM_IO_MMAP) {"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "txn_update(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "txn_update(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "exec_lt(strm_stream* strm, int argc, strm_value* args, strm_value* ret)"
  ],
  "consequent": [
   "exec_lt(strm_task* task, int argc, strm_value* args, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "d = realloc(d, sizeof(strm_stream*)*(src->dlen+1));"
  ],
  "consequent": [
   "d = realloc(d, sizeof(strm_task*)*(src->dlen+1));"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_lambda lambda = strm->data;"
  ],
  "consequent": [
   "strm_lambda lambda = task->data;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "return exec_expr(strm, state, nif->opt_else, val);"
  ],
  "consequent": [
   "return exec_expr(task, state, nif->opt_else, val);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "void strm_io_start_read(strm_stream* strm, int fd, strm_callback cb);"
  ],
  "consequent": [
   "void strm_io_start_read(strm_task* strm, int fd, strm_callback cb);"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_stream_mode mode;"
  ],
  "consequent": [
   "strm_task_mode mode;"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "strm_funcall(strm_stream* strm, strm_value func, int argc, strm_value* argv, strm_value* ret)"
  ],
  "consequent": [
   "strm_funcall(strm_task* task, strm_value func, int argc, strm_value* argv, strm_value* ret)"
  ]
 },
 {
  "repository": "matz/streem",
  "sha": "2a6893e2d41120a6d0ed1d586deebcecb8a202c6",
  "author": "Yukihiro \"Matz\" Matsumoto",
  "created_at": "2016-02-06 21:54:54",
  "condition": [
   "*ret = strm_stream_value(strm_stream_new(strm_filter, iter_sum, sum_finish, (void*)s));"
  ],
  "consequent": [
   "*ret = strm_task_value(strm_task_new(strm_filter, iter_sum, sum_finish, (void*)s));"
  ]
 }
]